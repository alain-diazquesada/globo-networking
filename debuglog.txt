2017/12/27 15:27:13 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:27:13 [INFO] Go runtime version: go1.9
2017/12/27 15:27:13 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "plan"}
2017/12/27 15:27:13 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:27:13 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:27:13 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:27:13 [INFO] CLI command args: []string{"plan"}
2017/12/27 15:27:13 [INFO] command: empty terraform config, returning nil
2017/12/27 15:27:13 [DEBUG] command: no data state file found for backend config
2017/12/27 15:27:13 [DEBUG] New state was assigned lineage "e0661b09-5d43-46e5-9188-9b5461e9ab7a"
2017/12/27 15:27:13 [INFO] command: backend initialized: <nil>
2017/12/27 15:27:13 [DEBUG] checking for provider in "."
2017/12/27 15:27:13 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:27:13 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:27:13 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:27:13 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:27:13 [DEBUG] found valid plugin: "external"
2017/12/27 15:27:13 [DEBUG] found valid plugin: "http"
2017/12/27 15:27:13 [DEBUG] checking for provisioner in "."
2017/12/27 15:27:13 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:27:13 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:27:13 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:27:13 [INFO] backend/local: starting Plan operation
2017/12/27 15:27:13 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:27:14 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:27:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04234e5f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:27:14 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:27:14 [DEBUG] Starting graph walk: walkInput
2017-12-27T15:27:14.033-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:27:14.068-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:27:14.079-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:27:14 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:27:14 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:27:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04234e5f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:27:14 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:27:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04234e5f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:37 [INFO] backend/local: plan calling Refresh
2017/12/27 15:27:37 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:27:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225b0e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:37 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:27:37 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:27:37 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:27:37 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:27:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:27:37 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:27:37 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:27:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225b0e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:38 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:27:38 [ERROR] root: eval: *terraform.EvalSequence, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:27:38 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:27:38 [TRACE] dag/walk: upstream errored, not walking "output.response"
2017/12/27 15:27:38 [TRACE] dag/walk: upstream errored, not walking "provider.http (close)"
2017/12/27 15:27:38 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/27 15:27:38 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:27:38.171-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:29:58 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:29:58 [INFO] Go runtime version: go1.9
2017/12/27 15:29:58 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "plan"}
2017/12/27 15:29:58 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:29:58 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:29:58 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:29:58 [INFO] CLI command args: []string{"plan"}
2017/12/27 15:29:58 [INFO] command: empty terraform config, returning nil
2017/12/27 15:29:58 [DEBUG] command: no data state file found for backend config
2017/12/27 15:29:58 [DEBUG] New state was assigned lineage "cad2d33b-2b6c-4c1e-aba2-51c7e6cab8d0"
2017/12/27 15:29:58 [INFO] command: backend initialized: <nil>
2017/12/27 15:29:58 [DEBUG] checking for provider in "."
2017/12/27 15:29:58 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:29:58 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:29:58 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:29:58 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:29:58 [DEBUG] found valid plugin: "external"
2017/12/27 15:29:58 [DEBUG] found valid plugin: "http"
2017/12/27 15:29:58 [DEBUG] checking for provisioner in "."
2017/12/27 15:29:58 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:29:58 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:29:58 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:29:58 [INFO] backend/local: starting Plan operation
2017/12/27 15:29:58 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:29:58 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:29:58 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:29:58 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:29:58 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:29:58 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:29:58 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0421a8ee0), RawConfig:(*config.RawConfig)(0xc042303ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206d6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Attach provider request: []string{} http
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:29:58 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:29:58.281-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:29:58.315-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:29:58.327-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:29:58 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:29:58 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:29:58 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:29:58 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:29:58 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:29:58 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:29:58 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:29:58 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:29:58 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:29:58 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:29:58 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:29:58 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:29:58 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:29:58 [TRACE] dag/walk: walking "root"
2017/12/27 15:29:58 [TRACE] vertex 'root.root': walking
2017/12/27 15:29:58 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:29:58 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:29:58 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:29:58 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0421a8ee0), RawConfig:(*config.RawConfig)(0xc042303ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206d6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Attach provider request: []string{} http
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:29:58 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206d6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:29:58 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:29:58 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:29:58 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:29:58 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:29:58 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:29:58 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:29:58 [TRACE] dag/walk: walking "root"
2017/12/27 15:29:58 [TRACE] vertex 'root.root': walking
2017/12/27 15:30:21 [INFO] backend/local: plan calling Refresh
2017/12/27 15:30:21 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:30:21 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:30:21 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:30:21 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04223c280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:30:21 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:30:21 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:30:21 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0421a8ee0), RawConfig:(*config.RawConfig)(0xc042303ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Attach provider request: []string{} http
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:30:21 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:30:21 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:30:21 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:30:21 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:30:21 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:30:21 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:30:21 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:30:21 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:30:21 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:30:21 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:30:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:30:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:30:21 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:30:21 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:30:21 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:30:21 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:30:21 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04223c280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:30:21 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:30:21 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:30:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:30:25 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:30:25 [ERROR] root: eval: *terraform.EvalSequence, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:30:25 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:30:25 [TRACE] dag/walk: upstream errored, not walking "output.response"
2017/12/27 15:30:25 [TRACE] dag/walk: upstream errored, not walking "provider.http (close)"
2017/12/27 15:30:25 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/27 15:30:25 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:30:25.455-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-27T15:30:25.469-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:33:50 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:33:50 [INFO] Go runtime version: go1.9
2017/12/27 15:33:50 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "plan"}
2017/12/27 15:33:50 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:33:50 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:33:50 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:33:50 [INFO] CLI command args: []string{"plan"}
2017/12/27 15:33:50 [INFO] command: empty terraform config, returning nil
2017/12/27 15:33:50 [DEBUG] command: no data state file found for backend config
2017/12/27 15:33:50 [DEBUG] New state was assigned lineage "70673df2-d21d-4d4f-a6d0-72b3d3bd3fe7"
2017/12/27 15:33:50 [INFO] command: backend initialized: <nil>
2017/12/27 15:33:50 [DEBUG] checking for provider in "."
2017/12/27 15:33:50 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:33:50 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:33:50 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:33:50 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:33:50 [DEBUG] found valid plugin: "external"
2017/12/27 15:33:50 [DEBUG] found valid plugin: "http"
2017/12/27 15:33:50 [DEBUG] checking for provisioner in "."
2017/12/27 15:33:50 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:33:50 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:33:50 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:33:50 [INFO] backend/local: starting Plan operation
2017/12/27 15:33:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:33:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:33:50 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:33:50 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:33:50 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:33:50 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:33:50 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042382070), RawConfig:(*config.RawConfig)(0xc042301ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042392820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Attach provider request: []string{} http
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:33:50 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:33:50.155-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:33:50.189-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:33:50.203-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:33:50 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:33:50 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:33:50 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:33:50 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:33:50 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:33:50 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:33:50 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:33:50 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:33:50 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:33:50 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:33:50 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:33:50 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:33:50 [TRACE] dag/walk: walking "root"
2017/12/27 15:33:50 [TRACE] vertex 'root.root': walking
2017/12/27 15:33:50 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:33:50 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:33:50 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:33:50 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042382070), RawConfig:(*config.RawConfig)(0xc042301ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042392820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Attach provider request: []string{} http
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:33:50 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:33:50 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:33:50 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042392820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:33:50 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:33:50 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:33:50 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:33:50 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:33:50 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:33:50 [TRACE] dag/walk: walking "root"
2017/12/27 15:33:50 [TRACE] vertex 'root.root': walking
2017/12/27 15:34:13 [INFO] backend/local: plan calling Refresh
2017/12/27 15:34:13 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:34:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:34:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:34:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422483c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:34:13 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:34:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:34:13 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042382070), RawConfig:(*config.RawConfig)(0xc042301ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Attach provider request: []string{} http
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:34:13 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:34:13 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:34:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:34:13 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:34:13 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:34:13 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:34:13 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:34:13 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:34:13 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:34:13 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:34:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:34:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:34:13 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:34:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:34:13 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:34:13 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:34:13 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422483c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:34:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:34:13 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:34:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:34:14 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:34:14 [ERROR] root: eval: *terraform.EvalSequence, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:34:14 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:34:14 [TRACE] dag/walk: upstream errored, not walking "provider.http (close)"
2017/12/27 15:34:14 [TRACE] dag/walk: upstream errored, not walking "output.response"
2017/12/27 15:34:14 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/27 15:34:14 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:34:14.309-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:36:07 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:36:07 [INFO] Go runtime version: go1.9
2017/12/27 15:36:07 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "plan"}
2017/12/27 15:36:07 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:36:07 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:36:07 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:36:07 [INFO] CLI command args: []string{"plan"}
2017/12/27 15:36:07 [INFO] command: empty terraform config, returning nil
2017/12/27 15:36:07 [DEBUG] command: no data state file found for backend config
2017/12/27 15:36:07 [DEBUG] New state was assigned lineage "041f043a-4834-49f2-8b33-d58e1116d059"
2017/12/27 15:36:07 [INFO] command: backend initialized: <nil>
2017/12/27 15:36:07 [DEBUG] checking for provider in "."
2017/12/27 15:36:07 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:36:07 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:36:07 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:36:07 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:36:07 [DEBUG] found valid plugin: "external"
2017/12/27 15:36:07 [DEBUG] found valid plugin: "http"
2017/12/27 15:36:07 [DEBUG] checking for provisioner in "."
2017/12/27 15:36:07 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:36:07 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:36:07 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:36:07 [INFO] backend/local: starting Plan operation
2017/12/27 15:36:07 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:07 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:07 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:36:07 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:36:07 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:07 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:07 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042313b90), RawConfig:(*config.RawConfig)(0xc042313ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224f680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:07 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:07 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:36:07.673-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:36:07.707-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:36:07.721-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:36:07 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:36:07 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:07 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:07 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:07 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:07 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:36:07 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:07 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:07 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:36:07 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:07 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:07 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:07 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:07 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:07 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:07 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:36:07 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:07 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:07 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042313b90), RawConfig:(*config.RawConfig)(0xc042313ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224f680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:36:07 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224f680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:36:07 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:07 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:36:07 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:07 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:07 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:07 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:31 [INFO] backend/local: plan calling Refresh
2017/12/27 15:36:31 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:36:31 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:36:31 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:31 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042080c30), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:31 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:31 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:31 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042313b90), RawConfig:(*config.RawConfig)(0xc042313ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:36:31 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:31 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:31 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:31 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:31 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:31 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:31 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:31 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:31 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:31 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:36:31 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:36:31 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:31 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:31 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:36:31 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042080c30), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:31 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:31 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/27 15:36:33 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:33 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:33 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/27 15:36:33 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:33 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/27 15:36:33 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:33 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:33 [INFO] backend/local: plan calling Plan
2017/12/27 15:36:33 [INFO] terraform: building graph: GraphTypePlan
2017/12/27 15:36:33 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:33 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:33 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:33 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042313b90), RawConfig:(*config.RawConfig)(0xc042313ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224e190), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [DEBUG] Starting graph walk: walkPlan
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:33 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:33 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/27 15:36:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:36:33 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224e190), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalReadState
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:33 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/27 15:36:33 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:33 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:33 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:33 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:33 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:36:33.055-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-27T15:36:33.065-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:36:51 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:36:51 [INFO] Go runtime version: go1.9
2017/12/27 15:36:51 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/27 15:36:51 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:36:51 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:36:51 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:36:51 [INFO] CLI command args: []string{"apply"}
2017/12/27 15:36:51 [INFO] command: empty terraform config, returning nil
2017/12/27 15:36:51 [DEBUG] command: no data state file found for backend config
2017/12/27 15:36:51 [DEBUG] New state was assigned lineage "f148e209-2cf2-46db-b88a-e6e032dc2bc8"
2017/12/27 15:36:51 [INFO] command: backend initialized: <nil>
2017/12/27 15:36:51 [DEBUG] checking for provider in "."
2017/12/27 15:36:51 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:36:51 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:36:51 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:36:51 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:36:51 [DEBUG] found valid plugin: "http"
2017/12/27 15:36:51 [DEBUG] found valid plugin: "external"
2017/12/27 15:36:51 [DEBUG] checking for provisioner in "."
2017/12/27 15:36:51 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:36:51 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:36:51 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:36:51 [INFO] backend/local: starting Apply operation
2017/12/27 15:36:51 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:51 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:51 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:36:51 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:36:51 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:51 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042356150), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224c870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:51 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:36:51.712-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:36:51.746-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:36:51.759-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:36:51 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:51 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:51 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:51 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:51 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:36:51 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:51 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:51 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:51 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:51 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:51 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:51 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:36:51 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:51 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042356150), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224c870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:51 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224c870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:51 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:51 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:36:51 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:51 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:51 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:51 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:51 [INFO] backend/local: apply calling Refresh
2017/12/27 15:36:51 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:36:51 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:36:51 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206e4b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:51 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042356150), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:51 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:51 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:36:51 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:51 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:51 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:36:51 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206e4b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:51 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/27 15:36:52 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:52 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:52 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:52 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/27 15:36:52 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:52 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:52 [INFO] backend/local: apply calling Plan
2017/12/27 15:36:52 [INFO] terraform: building graph: GraphTypePlan
2017/12/27 15:36:52 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:52 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:52 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:52 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042356150), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:52 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222eaf0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [DEBUG] Starting graph walk: walkPlan
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:52 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:52 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/27 15:36:52 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:36:52 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222eaf0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:52 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalReadState
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:52 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/27 15:36:52 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:52 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:52 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:52 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:52 [INFO] terraform: building graph: GraphTypeApply
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/27 15:36:52 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/27 15:36:52 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/27 15:36:52 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [DEBUG] Starting graph walk: walkApply
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:52 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:52 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:52 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/27 15:36:52 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:52 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:52 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:52 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:52 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:52 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:52 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:52 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:52 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:36:52.598-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-27T15:36:52.606-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:37:15 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:37:15 [INFO] Go runtime version: go1.9
2017/12/27 15:37:15 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/27 15:37:15 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:37:15 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:37:15 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:37:15 [INFO] CLI command args: []string{"apply"}
2017/12/27 15:37:15 [INFO] command: empty terraform config, returning nil
2017/12/27 15:37:15 [DEBUG] command: no data state file found for backend config
2017/12/27 15:37:15 [DEBUG] New state was assigned lineage "b92df21a-052b-4b52-b798-1c6868db6a46"
2017/12/27 15:37:15 [INFO] command: backend initialized: <nil>
2017/12/27 15:37:15 [DEBUG] checking for provider in "."
2017/12/27 15:37:15 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:37:15 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:37:15 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:37:15 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:37:15 [DEBUG] found valid plugin: "external"
2017/12/27 15:37:15 [DEBUG] found valid plugin: "http"
2017/12/27 15:37:15 [DEBUG] checking for provisioner in "."
2017/12/27 15:37:15 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:37:15 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:37:15 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:37:15 [INFO] backend/local: starting Apply operation
2017/12/27 15:37:15 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:15 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:15 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:37:15 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:15 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:37:15 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042364070), RawConfig:(*config.RawConfig)(0xc0422fdab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04236e7d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Attach provider request: []string{} http
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:15 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:37:15 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:37:15.765-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:37:15.799-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:37:15.810-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:37:15 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:37:15 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:15 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:37:15 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:37:15 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:37:15 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:15 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:37:15 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:37:15 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:37:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:37:15 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:15 [TRACE] dag/walk: walking "root"
2017/12/27 15:37:15 [TRACE] vertex 'root.root': walking
2017/12/27 15:37:15 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:37:15 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:15 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:37:15 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042364070), RawConfig:(*config.RawConfig)(0xc0422fdab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04236e7d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Attach provider request: []string{} http
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:15 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:37:15 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04236e7d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:37:15 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:15 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:37:15 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:37:15 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:37:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:15 [TRACE] dag/walk: walking "root"
2017/12/27 15:37:15 [TRACE] vertex 'root.root': walking
2017/12/27 15:37:39 [INFO] backend/local: apply calling Refresh
2017/12/27 15:37:39 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:37:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:37:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:37:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422388c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:37:39 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042364070), RawConfig:(*config.RawConfig)(0xc0422fdab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Attach provider request: []string{} http
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:37:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:37:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:37:39 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422388c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:39 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/27 15:37:39 [TRACE] dag/walk: walking "root"
2017/12/27 15:37:39 [TRACE] vertex 'root.root': walking
2017/12/27 15:37:39 [INFO] backend/local: apply calling Plan
2017/12/27 15:37:39 [INFO] terraform: building graph: GraphTypePlan
2017/12/27 15:37:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:37:39 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042364070), RawConfig:(*config.RawConfig)(0xc0422fdab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422c2410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Attach provider request: []string{} http
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] Starting graph walk: walkPlan
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:39 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/27 15:37:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:37:39 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422c2410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalReadState
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:37:39 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/27 15:37:39 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:37:39 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:39 [TRACE] dag/walk: walking "root"
2017/12/27 15:37:39 [TRACE] vertex 'root.root': walking
2017/12/27 15:37:39 [INFO] terraform: building graph: GraphTypeApply
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/27 15:37:39 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/27 15:37:39 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] Starting graph walk: walkApply
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:39 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:39 [WARN] Output interpolation "response" failed: Resource 'data.http.example' does not have attribute 'body.Subnets' for variable 'data.http.example.body.Subnets'
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/27 15:37:39 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:37:39 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:37:39 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:37:39 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:39 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:37:39.695-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-27T15:37:39.704-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
