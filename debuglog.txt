2017/12/27 15:27:13 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:27:13 [INFO] Go runtime version: go1.9
2017/12/27 15:27:13 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "plan"}
2017/12/27 15:27:13 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:27:13 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:27:13 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:27:13 [INFO] CLI command args: []string{"plan"}
2017/12/27 15:27:13 [INFO] command: empty terraform config, returning nil
2017/12/27 15:27:13 [DEBUG] command: no data state file found for backend config
2017/12/27 15:27:13 [DEBUG] New state was assigned lineage "e0661b09-5d43-46e5-9188-9b5461e9ab7a"
2017/12/27 15:27:13 [INFO] command: backend initialized: <nil>
2017/12/27 15:27:13 [DEBUG] checking for provider in "."
2017/12/27 15:27:13 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:27:13 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:27:13 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:27:13 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:27:13 [DEBUG] found valid plugin: "external"
2017/12/27 15:27:13 [DEBUG] found valid plugin: "http"
2017/12/27 15:27:13 [DEBUG] checking for provisioner in "."
2017/12/27 15:27:13 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:27:13 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:27:13 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:27:13 [INFO] backend/local: starting Plan operation
2017/12/27 15:27:13 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:27:14 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:27:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04234e5f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:27:14 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:27:14 [DEBUG] Starting graph walk: walkInput
2017-12-27T15:27:14.033-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:27:14.068-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:27:14.079-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:27:14 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:27:14 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:27:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04234e5f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:14 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:27:14 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:27:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04234e5f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:37 [INFO] backend/local: plan calling Refresh
2017/12/27 15:27:37 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:27:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225b0e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:37 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:27:37 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:27:37 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:27:37 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:27:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:27:37 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:27:37 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:27:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225b0e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:27:38 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:27:38 [ERROR] root: eval: *terraform.EvalSequence, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:27:38 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:27:38 [TRACE] dag/walk: upstream errored, not walking "output.response"
2017/12/27 15:27:38 [TRACE] dag/walk: upstream errored, not walking "provider.http (close)"
2017/12/27 15:27:38 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/27 15:27:38 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:27:38.171-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:29:58 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:29:58 [INFO] Go runtime version: go1.9
2017/12/27 15:29:58 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "plan"}
2017/12/27 15:29:58 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:29:58 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:29:58 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:29:58 [INFO] CLI command args: []string{"plan"}
2017/12/27 15:29:58 [INFO] command: empty terraform config, returning nil
2017/12/27 15:29:58 [DEBUG] command: no data state file found for backend config
2017/12/27 15:29:58 [DEBUG] New state was assigned lineage "cad2d33b-2b6c-4c1e-aba2-51c7e6cab8d0"
2017/12/27 15:29:58 [INFO] command: backend initialized: <nil>
2017/12/27 15:29:58 [DEBUG] checking for provider in "."
2017/12/27 15:29:58 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:29:58 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:29:58 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:29:58 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:29:58 [DEBUG] found valid plugin: "external"
2017/12/27 15:29:58 [DEBUG] found valid plugin: "http"
2017/12/27 15:29:58 [DEBUG] checking for provisioner in "."
2017/12/27 15:29:58 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:29:58 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:29:58 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:29:58 [INFO] backend/local: starting Plan operation
2017/12/27 15:29:58 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:29:58 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:29:58 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:29:58 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:29:58 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:29:58 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:29:58 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0421a8ee0), RawConfig:(*config.RawConfig)(0xc042303ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206d6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Attach provider request: []string{} http
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:29:58 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:29:58.281-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:29:58.315-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:29:58.327-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:29:58 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:29:58 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:29:58 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:29:58 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:29:58 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:29:58 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:29:58 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:29:58 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:29:58 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:29:58 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:29:58 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:29:58 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:29:58 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:29:58 [TRACE] dag/walk: walking "root"
2017/12/27 15:29:58 [TRACE] vertex 'root.root': walking
2017/12/27 15:29:58 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:29:58 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:29:58 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:29:58 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0421a8ee0), RawConfig:(*config.RawConfig)(0xc042303ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206d6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Attach provider request: []string{} http
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:29:58 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:29:58 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:29:58 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:29:58 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206d6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:29:58 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:29:58 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:29:58 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:29:58 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:29:58 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:29:58 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:29:58 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:29:58 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:29:58 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:29:58 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:29:58 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:29:58 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:29:58 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:29:58 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:29:58 [TRACE] dag/walk: walking "root"
2017/12/27 15:29:58 [TRACE] vertex 'root.root': walking
2017/12/27 15:30:21 [INFO] backend/local: plan calling Refresh
2017/12/27 15:30:21 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:30:21 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:30:21 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:30:21 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04223c280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:30:21 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:30:21 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:30:21 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0421a8ee0), RawConfig:(*config.RawConfig)(0xc042303ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Attach provider request: []string{} http
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:30:21 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:30:21 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:30:21 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:30:21 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:30:21 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:30:21 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:30:21 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:30:21 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:30:21 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:30:21 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:30:21 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:30:21 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:30:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:30:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:30:21 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:30:21 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:30:21 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:30:21 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:30:21 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04223c280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:30:21 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:30:21 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:30:21 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:30:21 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:30:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:30:21 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:30:25 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:30:25 [ERROR] root: eval: *terraform.EvalSequence, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:30:25 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:30:25 [TRACE] dag/walk: upstream errored, not walking "output.response"
2017/12/27 15:30:25 [TRACE] dag/walk: upstream errored, not walking "provider.http (close)"
2017/12/27 15:30:25 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/27 15:30:25 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:30:25.455-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-27T15:30:25.469-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:33:50 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:33:50 [INFO] Go runtime version: go1.9
2017/12/27 15:33:50 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "plan"}
2017/12/27 15:33:50 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:33:50 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:33:50 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:33:50 [INFO] CLI command args: []string{"plan"}
2017/12/27 15:33:50 [INFO] command: empty terraform config, returning nil
2017/12/27 15:33:50 [DEBUG] command: no data state file found for backend config
2017/12/27 15:33:50 [DEBUG] New state was assigned lineage "70673df2-d21d-4d4f-a6d0-72b3d3bd3fe7"
2017/12/27 15:33:50 [INFO] command: backend initialized: <nil>
2017/12/27 15:33:50 [DEBUG] checking for provider in "."
2017/12/27 15:33:50 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:33:50 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:33:50 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:33:50 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:33:50 [DEBUG] found valid plugin: "external"
2017/12/27 15:33:50 [DEBUG] found valid plugin: "http"
2017/12/27 15:33:50 [DEBUG] checking for provisioner in "."
2017/12/27 15:33:50 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:33:50 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:33:50 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:33:50 [INFO] backend/local: starting Plan operation
2017/12/27 15:33:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:33:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:33:50 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:33:50 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:33:50 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:33:50 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:33:50 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042382070), RawConfig:(*config.RawConfig)(0xc042301ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042392820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Attach provider request: []string{} http
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:33:50 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:33:50.155-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:33:50.189-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:33:50.203-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:33:50 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:33:50 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:33:50 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:33:50 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:33:50 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:33:50 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:33:50 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:33:50 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:33:50 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:33:50 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:33:50 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:33:50 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:33:50 [TRACE] dag/walk: walking "root"
2017/12/27 15:33:50 [TRACE] vertex 'root.root': walking
2017/12/27 15:33:50 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:33:50 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:33:50 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:33:50 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042382070), RawConfig:(*config.RawConfig)(0xc042301ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042392820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Attach provider request: []string{} http
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:33:50 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:33:50 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:33:50 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:33:50 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:33:50 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:33:50 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042392820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:33:50 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:33:50 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:33:50 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:33:50 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:33:50 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:33:50 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:33:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:33:50 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:33:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:33:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:33:50 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:33:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:33:50 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:33:50 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:33:50 [TRACE] dag/walk: walking "root"
2017/12/27 15:33:50 [TRACE] vertex 'root.root': walking
2017/12/27 15:34:13 [INFO] backend/local: plan calling Refresh
2017/12/27 15:34:13 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:34:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:34:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:34:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422483c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:34:13 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:34:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:34:13 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042382070), RawConfig:(*config.RawConfig)(0xc042301ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Attach provider request: []string{} http
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:34:13 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:34:13 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:34:13 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:34:13 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:34:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:34:13 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:34:13 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:34:13 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:34:13 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:34:13 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:34:13 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:34:13 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:34:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:34:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:34:13 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:34:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:34:13 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:34:13 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:34:13 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422483c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:34:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:34:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:34:13 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:34:13 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:34:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:34:13 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:34:14 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:34:14 [ERROR] root: eval: *terraform.EvalSequence, err: data.http.example: HTTP request error. Response code: 502
2017/12/27 15:34:14 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:34:14 [TRACE] dag/walk: upstream errored, not walking "provider.http (close)"
2017/12/27 15:34:14 [TRACE] dag/walk: upstream errored, not walking "output.response"
2017/12/27 15:34:14 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/27 15:34:14 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:34:14.309-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:36:07 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:36:07 [INFO] Go runtime version: go1.9
2017/12/27 15:36:07 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "plan"}
2017/12/27 15:36:07 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:36:07 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:36:07 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:36:07 [INFO] CLI command args: []string{"plan"}
2017/12/27 15:36:07 [INFO] command: empty terraform config, returning nil
2017/12/27 15:36:07 [DEBUG] command: no data state file found for backend config
2017/12/27 15:36:07 [DEBUG] New state was assigned lineage "041f043a-4834-49f2-8b33-d58e1116d059"
2017/12/27 15:36:07 [INFO] command: backend initialized: <nil>
2017/12/27 15:36:07 [DEBUG] checking for provider in "."
2017/12/27 15:36:07 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:36:07 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:36:07 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:36:07 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:36:07 [DEBUG] found valid plugin: "external"
2017/12/27 15:36:07 [DEBUG] found valid plugin: "http"
2017/12/27 15:36:07 [DEBUG] checking for provisioner in "."
2017/12/27 15:36:07 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:36:07 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:36:07 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:36:07 [INFO] backend/local: starting Plan operation
2017/12/27 15:36:07 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:07 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:07 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:36:07 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:36:07 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:07 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:07 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042313b90), RawConfig:(*config.RawConfig)(0xc042313ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224f680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:07 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:07 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:36:07.673-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:36:07.707-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:36:07.721-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:36:07 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:36:07 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:07 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:07 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:07 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:07 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:36:07 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:07 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:07 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:36:07 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:07 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:07 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:07 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:07 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:07 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:07 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:36:07 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:07 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:07 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042313b90), RawConfig:(*config.RawConfig)(0xc042313ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224f680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:07 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:07 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:07 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:36:07 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224f680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:07 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:07 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:36:07 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:07 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:07 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:36:07 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:36:07 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:36:07 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:07 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:07 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:07 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:07 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:07 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:07 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:07 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:07 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:31 [INFO] backend/local: plan calling Refresh
2017/12/27 15:36:31 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:36:31 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:36:31 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:31 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042080c30), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:31 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:31 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:31 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042313b90), RawConfig:(*config.RawConfig)(0xc042313ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:31 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:31 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:36:31 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:31 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:31 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:31 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:31 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:31 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:31 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:31 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:31 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:31 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:36:31 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:36:31 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:31 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:31 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:36:31 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042080c30), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:31 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:31 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:31 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:31 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:36:31 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/27 15:36:33 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:33 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:33 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/27 15:36:33 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:33 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/27 15:36:33 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:33 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:33 [INFO] backend/local: plan calling Plan
2017/12/27 15:36:33 [INFO] terraform: building graph: GraphTypePlan
2017/12/27 15:36:33 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:33 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:33 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:33 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042313b90), RawConfig:(*config.RawConfig)(0xc042313ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224e190), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:33 [DEBUG] Starting graph walk: walkPlan
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:33 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:33 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:33 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:33 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/27 15:36:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:36:33 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224e190), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalReadState
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:36:33 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:33 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/27 15:36:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/27 15:36:33 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:33 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:33 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:33 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:33 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:33 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:33 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:36:33.055-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-27T15:36:33.065-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:36:51 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:36:51 [INFO] Go runtime version: go1.9
2017/12/27 15:36:51 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/27 15:36:51 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:36:51 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:36:51 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:36:51 [INFO] CLI command args: []string{"apply"}
2017/12/27 15:36:51 [INFO] command: empty terraform config, returning nil
2017/12/27 15:36:51 [DEBUG] command: no data state file found for backend config
2017/12/27 15:36:51 [DEBUG] New state was assigned lineage "f148e209-2cf2-46db-b88a-e6e032dc2bc8"
2017/12/27 15:36:51 [INFO] command: backend initialized: <nil>
2017/12/27 15:36:51 [DEBUG] checking for provider in "."
2017/12/27 15:36:51 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:36:51 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:36:51 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:36:51 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:36:51 [DEBUG] found valid plugin: "http"
2017/12/27 15:36:51 [DEBUG] found valid plugin: "external"
2017/12/27 15:36:51 [DEBUG] checking for provisioner in "."
2017/12/27 15:36:51 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:36:51 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:36:51 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:36:51 [INFO] backend/local: starting Apply operation
2017/12/27 15:36:51 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:51 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:51 [INFO] state modified during read or write. incrementing serial number
2017/12/27 15:36:51 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:36:51 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:51 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042356150), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224c870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:51 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:36:51.712-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:36:51.746-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:36:51.759-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:36:51 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:51 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:51 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:51 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:51 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:36:51 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:51 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:51 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:51 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:51 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:51 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:51 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:36:51 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:51 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042356150), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224c870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:51 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224c870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:51 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:51 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:36:51 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:51 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:51 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:51 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:51 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:51 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:51 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:51 [INFO] backend/local: apply calling Refresh
2017/12/27 15:36:51 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:36:51 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:36:51 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206e4b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:51 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042356150), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:51 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:51 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:51 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:51 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:51 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:51 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:36:51 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:51 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:51 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:36:51 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206e4b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:36:51 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:51 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:51 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:51 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:51 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:36:51 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/27 15:36:52 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:52 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:52 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:52 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/27 15:36:52 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:52 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:52 [INFO] backend/local: apply calling Plan
2017/12/27 15:36:52 [INFO] terraform: building graph: GraphTypePlan
2017/12/27 15:36:52 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:52 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:52 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:36:52 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042356150), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:52 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222eaf0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Attach provider request: []string{} http
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [DEBUG] Starting graph walk: walkPlan
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:36:52 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:52 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/27 15:36:52 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:36:52 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222eaf0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:36:52 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalReadState
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:36:52 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:52 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:52 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/27 15:36:52 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:52 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:52 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:52 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:52 [TRACE] dag/walk: walking "root"
2017/12/27 15:36:52 [TRACE] vertex 'root.root': walking
2017/12/27 15:36:52 [INFO] terraform: building graph: GraphTypeApply
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/27 15:36:52 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/27 15:36:52 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/27 15:36:52 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:36:52 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:36:52 [DEBUG] Starting graph walk: walkApply
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:36:52 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:36:52 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/27 15:36:52 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:36:52 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:36:52 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:36:52 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:36:52 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:36:52 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:36:52 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/27 15:36:52 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:36:52 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:36:52 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:36:52 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:52 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:36:52 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:36:52 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:36:52 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:52 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:52 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:52 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:36:52 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:36:52.598-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-27T15:36:52.606-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/27 15:37:15 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/27 15:37:15 [INFO] Go runtime version: go1.9
2017/12/27 15:37:15 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/27 15:37:15 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/27 15:37:15 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/27 15:37:15 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/27 15:37:15 [INFO] CLI command args: []string{"apply"}
2017/12/27 15:37:15 [INFO] command: empty terraform config, returning nil
2017/12/27 15:37:15 [DEBUG] command: no data state file found for backend config
2017/12/27 15:37:15 [DEBUG] New state was assigned lineage "b92df21a-052b-4b52-b798-1c6868db6a46"
2017/12/27 15:37:15 [INFO] command: backend initialized: <nil>
2017/12/27 15:37:15 [DEBUG] checking for provider in "."
2017/12/27 15:37:15 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:37:15 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:37:15 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/27 15:37:15 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/27 15:37:15 [DEBUG] found valid plugin: "external"
2017/12/27 15:37:15 [DEBUG] found valid plugin: "http"
2017/12/27 15:37:15 [DEBUG] checking for provisioner in "."
2017/12/27 15:37:15 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/27 15:37:15 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/27 15:37:15 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/27 15:37:15 [INFO] backend/local: starting Apply operation
2017/12/27 15:37:15 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:15 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:15 [INFO] terraform: building graph: GraphTypeInput
2017/12/27 15:37:15 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:15 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:37:15 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042364070), RawConfig:(*config.RawConfig)(0xc0422fdab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04236e7d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Attach provider request: []string{} http
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [DEBUG] Starting graph walk: walkInput
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:15 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:37:15 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-27T15:37:15.765-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-27T15:37:15.799-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-27T15:37:15.810-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/27 15:37:15 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/27 15:37:15 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:15 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:37:15 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/27 15:37:15 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:37:15 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:15 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/27 15:37:15 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:37:15 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:37:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:37:15 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:15 [TRACE] dag/walk: walking "root"
2017/12/27 15:37:15 [TRACE] vertex 'root.root': walking
2017/12/27 15:37:15 [INFO] terraform: building graph: GraphTypeValidate
2017/12/27 15:37:15 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:15 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:37:15 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042364070), RawConfig:(*config.RawConfig)(0xc0422fdab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04236e7d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Attach provider request: []string{} http
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:15 [DEBUG] Starting graph walk: walkValidate
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:37:15 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:37:15 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:15 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/27 15:37:15 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04236e7d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/27 15:37:15 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:15 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/27 15:37:15 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:37:15 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:15 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:37:15 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/27 15:37:15 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/27 15:37:15 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:15 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:37:15 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:37:15 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:15 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:37:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:37:15 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:15 [TRACE] dag/walk: walking "root"
2017/12/27 15:37:15 [TRACE] vertex 'root.root': walking
2017/12/27 15:37:39 [INFO] backend/local: apply calling Refresh
2017/12/27 15:37:39 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/27 15:37:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/27 15:37:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:37:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422388c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:37:39 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042364070), RawConfig:(*config.RawConfig)(0xc0422fdab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Attach provider request: []string{} http
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] Starting graph walk: walkRefresh
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:37:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/27 15:37:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:37:39 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422388c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:39 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/27 15:37:39 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/27 15:37:39 [TRACE] dag/walk: walking "root"
2017/12/27 15:37:39 [TRACE] vertex 'root.root': walking
2017/12/27 15:37:39 [INFO] backend/local: apply calling Plan
2017/12/27 15:37:39 [INFO] terraform: building graph: GraphTypePlan
2017/12/27 15:37:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/27 15:37:39 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042364070), RawConfig:(*config.RawConfig)(0xc0422fdab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422c2410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Attach provider request: []string{} http
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] Starting graph walk: walkPlan
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "root"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:39 [TRACE] dag/walk: walking "provider.http"
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/27 15:37:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [TRACE] OrphanResourceCount: Starting...
2017/12/27 15:37:39 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422c2410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/27 15:37:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalReadState
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/27 15:37:39 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/27 15:37:39 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/27 15:37:39 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:37:39 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:37:39 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:37:39 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:39 [TRACE] dag/walk: walking "root"
2017/12/27 15:37:39 [TRACE] vertex 'root.root': walking
2017/12/27 15:37:39 [INFO] terraform: building graph: GraphTypeApply
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/27 15:37:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/27 15:37:39 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/27 15:37:39 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/27 15:37:39 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/27 15:37:39 [DEBUG] Starting graph walk: walkApply
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/27 15:37:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/27 15:37:39 [TRACE] dag/walk: walking "output.response"
2017/12/27 15:37:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/27 15:37:39 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/27 15:37:39 [WARN] Output interpolation "response" failed: Resource 'data.http.example' does not have attribute 'body.Subnets' for variable 'data.http.example.body.Subnets'
2017/12/27 15:37:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/27 15:37:39 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/27 15:37:39 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/27 15:37:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/27 15:37:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/27 15:37:39 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/27 15:37:39 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/27 15:37:39 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/27 15:37:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/27 15:37:39 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-27T15:37:39.695-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-27T15:37:39.704-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 10:26:32 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 10:26:32 [INFO] Go runtime version: go1.9
2017/12/28 10:26:32 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 10:26:32 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 10:26:32 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 10:26:32 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 10:26:32 [INFO] CLI command args: []string{"apply"}
2017/12/28 10:26:32 [INFO] command: empty terraform config, returning nil
2017/12/28 10:26:32 [DEBUG] command: no data state file found for backend config
2017/12/28 10:26:32 [DEBUG] New state was assigned lineage "81ffcd43-930a-4624-8a93-2efa1fe7b95f"
2017/12/28 10:26:32 [INFO] command: backend initialized: <nil>
2017/12/28 10:26:32 [DEBUG] checking for provider in "."
2017/12/28 10:26:32 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 10:26:32 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 10:26:32 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 10:26:32 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 10:26:32 [DEBUG] found valid plugin: "external"
2017/12/28 10:26:32 [DEBUG] found valid plugin: "http"
2017/12/28 10:26:32 [DEBUG] checking for provisioner in "."
2017/12/28 10:26:32 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 10:26:32 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 10:26:32 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 10:26:32 [INFO] backend/local: starting Apply operation
2017/12/28 10:26:32 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:26:32 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:26:33 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 10:26:33 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:33 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:26:33 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 10:26:33 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04237a150), RawConfig:(*config.RawConfig)(0xc04231dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422568c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Attach provider request: []string{} http
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [DEBUG] Starting graph walk: walkInput
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: walking "provider.http"
2017/12/28 10:26:33 [TRACE] vertex 'root.provider.http': walking
2017/12/28 10:26:33 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:26:33 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:26:33 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 10:26:33 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T10:26:33.111-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T10:26:33.226-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T10:26:33.244-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 10:26:33 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 10:26:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:26:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:26:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 10:26:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 10:26:33 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:26:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 10:26:33 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:26:33 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 10:26:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:26:33 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:26:33 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 10:26:33 [WARN] Output interpolation "response" failed: At column 3, line 1: element: argument 1 should be type list, got type string in:

${element(data.http.example.body,0)}
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 10:26:33 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 10:26:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 10:26:33 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 10:26:33 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 10:26:33 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:26:33 [TRACE] dag/walk: walking "root"
2017/12/28 10:26:33 [TRACE] vertex 'root.root': walking
2017/12/28 10:26:33 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 10:26:33 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:33 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:26:33 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 10:26:33 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04237a150), RawConfig:(*config.RawConfig)(0xc04231dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422568c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Attach provider request: []string{} http
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:33 [DEBUG] Starting graph walk: walkValidate
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 10:26:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 10:26:33 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:26:33 [TRACE] dag/walk: walking "provider.http"
2017/12/28 10:26:33 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:26:33 [TRACE] vertex 'root.provider.http': walking
2017/12/28 10:26:33 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 10:26:33 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 10:26:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:26:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:26:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:26:33 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 10:26:33 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 10:26:33 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:26:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422568c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:26:33 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:26:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:26:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:26:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:26:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:26:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:26:33 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 10:26:33 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 10:26:33 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:26:33 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:26:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 10:26:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 10:26:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:26:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 10:26:33 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 10:26:33 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:26:33 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 10:26:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:33 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 10:26:33 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 10:26:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 10:26:33 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:26:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 10:26:33 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 10:26:33 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:26:33 [TRACE] dag/walk: walking "root"
2017/12/28 10:26:33 [TRACE] vertex 'root.root': walking
2017/12/28 10:26:56 [INFO] backend/local: apply calling Refresh
2017/12/28 10:26:56 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 10:26:56 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 10:26:56 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 10:26:56 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 10:26:56 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:26:56 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 10:26:56 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04237a150), RawConfig:(*config.RawConfig)(0xc04231dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Attach provider request: []string{} http
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:26:56 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 10:26:56 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 10:26:56 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:56 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 10:26:56 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 10:26:56 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 10:26:56 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:26:56 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:26:56 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 10:26:56 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:26:56 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 10:26:56 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 10:26:56 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 10:26:56 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 10:26:56 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 10:26:56 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 10:26:56 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 10:26:56 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 10:26:56 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 10:26:56 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 10:26:56 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:26:56 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:26:56 [TRACE] dag/walk: walking "provider.http"
2017/12/28 10:26:56 [TRACE] vertex 'root.provider.http': walking
2017/12/28 10:26:56 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 10:26:56 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 10:26:56 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:56 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 10:26:56 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 10:26:56 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:26:56 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:26:56 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:26:56 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 10:26:56 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 10:26:56 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:26:56 [TRACE] OrphanResourceCount: Starting...
2017/12/28 10:26:56 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:26:56 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:26:56 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:26:56 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:26:56 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:26:56 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:26:56 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:26:56 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:26:56 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:26:56 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 10:26:56 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 10:26:59 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 10:26:59 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 10:26:59 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 10:26:59 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:26:59 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 10:26:59 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:26:59 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:59 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 10:26:59 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 10:26:59 [WARN] Output interpolation "response" failed: At column 3, line 1: element: argument 1 should be type list, got type string in:

${element(data.http.example.body,0)}
2017/12/28 10:26:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:59 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 10:26:59 [TRACE] dag/walk: walking "root"
2017/12/28 10:26:59 [TRACE] vertex 'root.root': walking
2017/12/28 10:26:59 [INFO] backend/local: apply calling Plan
2017/12/28 10:26:59 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 10:26:59 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:59 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:26:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 10:26:59 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04237a150), RawConfig:(*config.RawConfig)(0xc04231dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:59 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225ab90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Attach provider request: []string{} http
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 10:26:59 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 10:26:59 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:26:59 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [DEBUG] Starting graph walk: walkPlan
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 10:26:59 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 10:26:59 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 10:26:59 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 10:26:59 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 10:26:59 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 10:26:59 [TRACE] dag/walk: walking "provider.http"
2017/12/28 10:26:59 [TRACE] vertex 'root.provider.http': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 10:26:59 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 10:26:59 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:26:59 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:26:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 10:26:59 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 10:26:59 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:26:59 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:26:59 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 10:26:59 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 10:26:59 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:26:59 [TRACE] OrphanResourceCount: Starting...
2017/12/28 10:26:59 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:26:59 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225ab90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:26:59 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:26:59 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:26:59 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:26:59 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 10:26:59 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 10:26:59 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:26:59 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:26:59 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:26:59 [WARN] Output interpolation "response" failed: At column 3, line 1: element: argument 1 should be type list, got type string in:

${element(data.http.example.body,0)}
2017/12/28 10:26:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:59 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 10:26:59 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:59 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 10:26:59 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 10:26:59 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 10:26:59 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:26:59 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 10:26:59 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 10:26:59 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 10:26:59 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 10:26:59 [TRACE] dag/walk: walking "root"
2017/12/28 10:26:59 [TRACE] vertex 'root.root': walking
2017/12/28 10:26:59 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 10:26:59 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 10:26:59 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 10:26:59 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 10:26:59 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:26:59 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:26:59 [DEBUG] Starting graph walk: walkApply
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:26:59 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 10:26:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 10:26:59 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 10:26:59 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:26:59 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:26:59 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:26:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:26:59 [WARN] Output interpolation "response" failed: At column 3, line 1: element: argument 1 should be type list, got type string in:

${element(data.http.example.body,0)}
2017/12/28 10:26:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:26:59 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 10:26:59 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:26:59 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:26:59 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 10:26:59 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 10:26:59 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 10:26:59 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:26:59 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 10:26:59 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 10:26:59 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:26:59 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:26:59 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:26:59 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:26:59 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:26:59 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T10:26:59.595-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 10:29:33 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 10:29:33 [INFO] Go runtime version: go1.9
2017/12/28 10:29:33 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 10:29:33 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 10:29:33 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 10:29:33 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 10:29:33 [INFO] CLI command args: []string{"apply"}
2017/12/28 10:29:33 [INFO] command: empty terraform config, returning nil
2017/12/28 10:29:33 [DEBUG] command: no data state file found for backend config
2017/12/28 10:29:33 [DEBUG] New state was assigned lineage "c10bdc20-3c05-484b-b88c-b2e7f8e6f81a"
2017/12/28 10:29:33 [INFO] command: backend initialized: <nil>
2017/12/28 10:29:33 [DEBUG] checking for provider in "."
2017/12/28 10:29:33 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 10:29:33 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 10:29:33 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 10:29:33 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 10:29:33 [DEBUG] found valid plugin: "http"
2017/12/28 10:29:33 [DEBUG] found valid plugin: "external"
2017/12/28 10:29:33 [DEBUG] checking for provisioner in "."
2017/12/28 10:29:33 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 10:29:33 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 10:29:33 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 10:29:33 [INFO] backend/local: starting Apply operation
2017/12/28 10:29:33 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:29:33 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:29:33 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 10:29:33 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:33 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:29:33 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 10:29:33 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042311b90), RawConfig:(*config.RawConfig)(0xc042311ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042249720), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Attach provider request: []string{} http
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [DEBUG] Starting graph walk: walkInput
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: walking "provider.http"
2017/12/28 10:29:33 [TRACE] vertex 'root.provider.http': walking
2017/12/28 10:29:33 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:29:33 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 10:29:33 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T10:29:33.214-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T10:29:33.260-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T10:29:33.274-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 10:29:33 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 10:29:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:29:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:29:33 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:29:33 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:29:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 10:29:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:29:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 10:29:33 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 10:29:33 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 10:29:33 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:29:33 [WARN] Output interpolation "response" failed: At column 3, line 1: values: argument 1 should be type map, got type string in:

${values(data.http.example.body)}
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 10:29:33 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 10:29:33 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 10:29:33 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 10:29:33 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:29:33 [TRACE] dag/walk: walking "root"
2017/12/28 10:29:33 [TRACE] vertex 'root.root': walking
2017/12/28 10:29:33 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 10:29:33 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:33 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:29:33 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 10:29:33 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042311b90), RawConfig:(*config.RawConfig)(0xc042311ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042249720), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Attach provider request: []string{} http
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:33 [DEBUG] Starting graph walk: walkValidate
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 10:29:33 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:29:33 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:29:33 [TRACE] dag/walk: walking "provider.http"
2017/12/28 10:29:33 [TRACE] vertex 'root.provider.http': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 10:29:33 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 10:29:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:29:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:29:33 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 10:29:33 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 10:29:33 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:29:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042249720), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:29:33 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:29:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 10:29:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:29:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:29:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:29:33 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 10:29:33 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 10:29:33 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:29:33 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:29:33 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:29:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 10:29:33 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 10:29:33 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 10:29:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:33 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 10:29:33 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 10:29:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 10:29:33 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:29:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 10:29:33 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 10:29:33 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:29:33 [TRACE] dag/walk: walking "root"
2017/12/28 10:29:33 [TRACE] vertex 'root.root': walking
2017/12/28 10:29:56 [INFO] backend/local: apply calling Refresh
2017/12/28 10:29:56 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 10:29:56 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 10:29:56 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 10:29:56 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042248550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 10:29:56 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:29:56 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 10:29:56 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042311b90), RawConfig:(*config.RawConfig)(0xc042311ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Attach provider request: []string{} http
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 10:29:56 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:29:56 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 10:29:56 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:56 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 10:29:56 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 10:29:56 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:29:56 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:29:56 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 10:29:56 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:29:56 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 10:29:56 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 10:29:56 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 10:29:56 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 10:29:56 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 10:29:56 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 10:29:56 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 10:29:56 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 10:29:56 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 10:29:56 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 10:29:56 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 10:29:56 [TRACE] dag/walk: walking "provider.http"
2017/12/28 10:29:56 [TRACE] vertex 'root.provider.http': walking
2017/12/28 10:29:56 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:29:56 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:29:56 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 10:29:56 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 10:29:56 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:56 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 10:29:56 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 10:29:56 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:29:56 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:29:56 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:29:56 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 10:29:56 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 10:29:56 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:29:56 [TRACE] OrphanResourceCount: Starting...
2017/12/28 10:29:56 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:29:56 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042248550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:29:56 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:29:56 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 10:29:56 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:29:56 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:29:56 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:29:56 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:29:56 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:29:56 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 10:29:56 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 10:29:57 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 10:29:57 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 10:29:57 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 10:29:57 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 10:29:57 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 10:29:57 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:29:57 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:29:57 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:29:57 [WARN] Output interpolation "response" failed: At column 3, line 1: values: argument 1 should be type map, got type string in:

${values(data.http.example.body)}
2017/12/28 10:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:57 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 10:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 10:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 10:29:57 [INFO] backend/local: apply calling Plan
2017/12/28 10:29:57 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 10:29:57 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:57 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:29:57 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 10:29:57 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042311b90), RawConfig:(*config.RawConfig)(0xc042311ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:57 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042248b90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Attach provider request: []string{} http
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 10:29:57 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 10:29:57 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:29:57 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [DEBUG] Starting graph walk: walkPlan
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 10:29:57 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 10:29:57 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 10:29:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 10:29:57 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 10:29:57 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 10:29:57 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:29:57 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:29:57 [TRACE] dag/walk: walking "provider.http"
2017/12/28 10:29:57 [TRACE] vertex 'root.provider.http': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 10:29:57 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 10:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 10:29:57 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 10:29:57 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:29:57 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:29:57 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 10:29:57 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 10:29:57 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:29:57 [TRACE] OrphanResourceCount: Starting...
2017/12/28 10:29:57 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:29:57 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042248b90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:29:57 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 10:29:57 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 10:29:57 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 10:29:57 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 10:29:57 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 10:29:57 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:29:57 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:29:57 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:29:57 [WARN] Output interpolation "response" failed: At column 3, line 1: values: argument 1 should be type map, got type string in:

${values(data.http.example.body)}
2017/12/28 10:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:57 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 10:29:57 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 10:29:57 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 10:29:57 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 10:29:57 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 10:29:57 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 10:29:57 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 10:29:57 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 10:29:57 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 10:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 10:29:57 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 10:29:57 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 10:29:57 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 10:29:57 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 10:29:57 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 10:29:57 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 10:29:57 [DEBUG] Starting graph walk: walkApply
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 10:29:57 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 10:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 10:29:57 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 10:29:57 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 10:29:57 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 10:29:57 [TRACE] dag/walk: walking "output.response"
2017/12/28 10:29:57 [TRACE] vertex 'root.output.response': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 10:29:57 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 10:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 10:29:57 [WARN] Output interpolation "response" failed: At column 3, line 1: values: argument 1 should be type map, got type string in:

${values(data.http.example.body)}
2017/12/28 10:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 10:29:57 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 10:29:57 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 10:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 10:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 10:29:57 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 10:29:57 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 10:29:57 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 10:29:57 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:29:57 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:29:57 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:29:57 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 10:29:57 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 10:29:57 [ERR] yamux: Failed to read stream data: read tcp 127.0.0.1:10988->127.0.0.1:10000: wsarecv: An existing connection was forcibly closed by the remote host.
2017/12/28 10:29:57 [ERR] yamux: Failed to write header: write tcp 127.0.0.1:10988->127.0.0.1:10000: use of closed network connection
2017-12-28T10:29:57.957-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-28T10:29:57.964-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:27:12 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:27:12 [INFO] Go runtime version: go1.9
2017/12/28 11:27:12 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:27:12 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:27:12 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:27:12 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:27:12 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:27:12 [INFO] command: empty terraform config, returning nil
2017/12/28 11:27:12 [DEBUG] command: no data state file found for backend config
2017/12/28 11:27:12 [DEBUG] New state was assigned lineage "51e90282-0edf-419b-aca3-40ba1e39d746"
2017/12/28 11:27:12 [INFO] command: backend initialized: <nil>
2017/12/28 11:27:12 [DEBUG] checking for provider in "."
2017/12/28 11:27:12 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:27:12 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:27:12 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:27:12 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:27:12 [DEBUG] found valid plugin: "external"
2017/12/28 11:27:12 [DEBUG] found valid plugin: "http"
2017/12/28 11:27:12 [DEBUG] checking for provisioner in "."
2017/12/28 11:27:12 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:27:12 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:27:12 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:27:12 [INFO] backend/local: starting Apply operation
2017/12/28 11:27:12 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:27:12 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:27:13 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:27:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:13 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:27:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:27:13 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042319b90), RawConfig:(*config.RawConfig)(0xc042319ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225b6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Attach provider request: []string{} http
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:27:13 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:27:13 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:27:13 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:27:13.048-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:27:13.097-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:27:13.119-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:27:13 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:27:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:27:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:27:13 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:27:13 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:27:13 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:27:13 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:27:13 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:27:13 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:27:13 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:27:13 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:27:13 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:13 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:27:13 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:27:13 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:27:13 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:27:13 [TRACE] dag/walk: walking "root"
2017/12/28 11:27:13 [TRACE] vertex 'root.root': walking
2017/12/28 11:27:13 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:27:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:13 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:27:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:27:13 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042319b90), RawConfig:(*config.RawConfig)(0xc042319ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225b6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Attach provider request: []string{} http
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:13 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:27:13 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:27:13 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:27:13 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:27:13 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:27:13 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:27:13 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:27:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:27:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:27:13 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:27:13 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:27:13 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:27:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225b6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:27:13 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:27:13 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:27:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:27:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:27:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:27:13 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:27:13 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:27:13 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:27:13 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:27:13 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:27:13 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:27:13 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:27:13 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:27:13 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:27:13 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:27:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:13 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:27:13 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:13 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:27:13 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:27:13 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:27:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:27:13 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:27:13 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:27:13 [TRACE] dag/walk: walking "root"
2017/12/28 11:27:13 [TRACE] vertex 'root.root': walking
2017/12/28 11:27:36 [INFO] backend/local: apply calling Refresh
2017/12/28 11:27:36 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:27:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:27:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:27:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04241a820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:27:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:27:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:27:36 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042319b90), RawConfig:(*config.RawConfig)(0xc042319ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Attach provider request: []string{} http
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:27:36 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:27:36 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:27:36 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:36 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:27:36 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:27:36 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:27:36 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:27:36 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:27:36 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:27:36 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:27:36 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:27:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:27:36 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:27:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:27:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:27:36 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:27:36 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:27:36 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:27:36 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:27:36 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:27:36 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:27:36 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:27:36 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:27:36 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:27:36 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:27:36 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:27:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:27:36 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:27:36 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:27:36 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:27:36 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:27:36 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:27:36 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:27:36 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:27:36 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:27:36 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:27:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04241a820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:27:36 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:27:36 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:27:36 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:27:36 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:27:36 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:27:36 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:27:36 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:27:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:27:36 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:27:39 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:27:39 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:27:39 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:27:39 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:27:39 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:27:39 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:27:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:27:39 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:39 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:27:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:39 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:27:39 [TRACE] dag/walk: walking "root"
2017/12/28 11:27:39 [TRACE] vertex 'root.root': walking
2017/12/28 11:27:39 [INFO] backend/local: apply calling Plan
2017/12/28 11:27:39 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:27:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:27:39 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:27:39 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042319b90), RawConfig:(*config.RawConfig)(0xc042319ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Attach provider request: []string{} http
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:27:39 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:27:39 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:27:39 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:27:39 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:27:39 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:27:39 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:27:39 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:27:39 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:27:39 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:27:39 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:27:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:27:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:27:39 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:27:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:27:39 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:27:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:27:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:27:39 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:27:39 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:27:39 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:27:39 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:27:39 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:27:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:27:39 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:27:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:27:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:27:39 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:27:39 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:27:39 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:27:39 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:27:39 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:27:39 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:27:39 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:27:39 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:27:39 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:27:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:39 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:27:39 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:27:39 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:27:39 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:27:39 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:27:39 [TRACE] dag/walk: walking "root"
2017/12/28 11:27:39 [TRACE] vertex 'root.root': walking
2017/12/28 11:27:39 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:27:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:27:39 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:27:39 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:27:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:27:39 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:27:39 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:27:39 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:27:39 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:27:39 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:27:39 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:27:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:27:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:27:39 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:27:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:27:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:27:39 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:27:39 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:27:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:27:39 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:27:39 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:27:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:27:39 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:27:39 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:27:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:27:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:27:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:27:39 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:27:39 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:27:39.487-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:28:14 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:28:14 [INFO] Go runtime version: go1.9
2017/12/28 11:28:14 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:28:14 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:28:14 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:28:14 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:28:14 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:28:14 [INFO] command: empty terraform config, returning nil
2017/12/28 11:28:14 [DEBUG] command: no data state file found for backend config
2017/12/28 11:28:14 [DEBUG] New state was assigned lineage "2eed1d4b-09e7-4f55-9822-5bf479bb7115"
2017/12/28 11:28:14 [INFO] command: backend initialized: <nil>
2017/12/28 11:28:14 [DEBUG] checking for provider in "."
2017/12/28 11:28:14 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:28:14 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:28:14 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:28:14 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:28:14 [DEBUG] found valid plugin: "http"
2017/12/28 11:28:14 [DEBUG] found valid plugin: "external"
2017/12/28 11:28:14 [DEBUG] checking for provisioner in "."
2017/12/28 11:28:14 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:28:14 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:28:14 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:28:14 [INFO] backend/local: starting Apply operation
2017/12/28 11:28:14 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:28:14 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:28:14 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:28:14 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:14 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:28:14 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:28:14 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042360150), RawConfig:(*config.RawConfig)(0xc042317ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042252870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Attach provider request: []string{} http
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:28:14 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:28:14 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:28:14 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:28:14 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:28:14 [TRACE] vertex 'root.var.projectcode': walking
2017-12-28T11:28:14.429-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:28:14.502-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:28:14.527-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:28:14 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:28:14 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:28:14 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:28:14 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:28:14 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:28:14 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:28:14 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:28:14 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:28:14 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:28:14 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:28:14 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:28:14 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:28:14 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:14 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:28:14 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:28:14 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:28:14 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:28:14 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:28:14 [TRACE] dag/walk: walking "root"
2017/12/28 11:28:14 [TRACE] vertex 'root.root': walking
2017/12/28 11:28:14 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:28:14 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:14 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:28:14 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:28:14 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042360150), RawConfig:(*config.RawConfig)(0xc042317ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042252870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Attach provider request: []string{} http
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:14 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:28:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:28:14 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:28:14 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:28:14 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:28:14 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:28:14 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:28:14 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:28:14 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:28:14 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:28:14 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:28:14 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:28:14 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:28:14 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:28:14 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042252870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:28:14 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:28:14 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:28:14 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:28:14 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:28:14 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:28:14 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:28:14 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:28:14 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:28:14 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:28:14 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:28:14 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:28:14 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:28:14 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:28:14 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:28:14 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:28:14 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:28:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:14 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:28:14 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:14 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:28:14 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:28:14 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:28:14 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:28:14 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:28:14 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:28:14 [TRACE] dag/walk: walking "root"
2017/12/28 11:28:14 [TRACE] vertex 'root.root': walking
2017/12/28 11:28:37 [INFO] backend/local: apply calling Refresh
2017/12/28 11:28:37 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:28:37 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:28:37 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:28:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042256b90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:28:37 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:28:37 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:28:37 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042360150), RawConfig:(*config.RawConfig)(0xc042317ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Attach provider request: []string{} http
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:28:37 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:28:37 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:28:37 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:37 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:28:37 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:28:37 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:28:37 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:28:37 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:28:37 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:28:37 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:28:37 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:28:37 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:28:37 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:28:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:28:37 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:28:37 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:28:37 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:28:37 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:28:37 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:28:37 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:28:37 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:28:37 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:28:37 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:28:37 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:28:37 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:28:37 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:28:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:28:37 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:28:37 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:28:37 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:28:37 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:28:37 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:28:37 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:28:37 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:28:37 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:28:37 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:28:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042256b90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:28:37 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:28:37 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:28:37 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:28:37 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:28:37 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:28:37 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:28:37 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:28:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:28:37 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:28:38 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:28:38 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:28:38 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:28:38 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:28:38 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:28:38 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:28:38 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:28:38 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:28:38 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:28:38 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:28:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:38 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:28:38 [TRACE] dag/walk: walking "root"
2017/12/28 11:28:38 [TRACE] vertex 'root.root': walking
2017/12/28 11:28:38 [INFO] backend/local: apply calling Plan
2017/12/28 11:28:38 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:28:38 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:38 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:28:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:28:38 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042360150), RawConfig:(*config.RawConfig)(0xc042317ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:38 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042252af0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Attach provider request: []string{} http
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:28:38 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:28:38 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:28:38 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:28:38 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:28:38 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:28:38 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:28:38 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:28:38 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:28:38 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:28:38 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:28:38 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:28:38 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:28:38 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:28:38 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:28:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:28:38 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:28:38 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:28:38 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:28:38 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:28:38 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:28:38 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:28:38 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:28:38 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:28:38 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:28:38 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042252af0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:28:38 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:28:38 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:28:38 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:28:38 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:28:38 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:28:38 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:28:38 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:28:38 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:28:38 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:28:38 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:28:38 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:28:38 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:28:38 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:28:38 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:28:38 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:28:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:38 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:28:38 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:38 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:28:38 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:28:38 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:28:38 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:28:38 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:28:38 [TRACE] dag/walk: walking "root"
2017/12/28 11:28:38 [TRACE] vertex 'root.root': walking
2017/12/28 11:28:38 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:28:38 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:28:38 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:28:38 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:28:38 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:28:38 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:28:38 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:28:38 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:28:38 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:28:38 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:28:38 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:28:38 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:28:38 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:28:38 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:28:38 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:28:38 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:28:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:28:38 [WARN] Output interpolation "response" failed: Resource 'data.http.example' does not have attribute 'body.Subnets' for variable 'data.http.example.body.Subnets'
2017/12/28 11:28:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:28:38 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:28:38 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:28:38 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:28:38 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:28:38 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:28:38 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:28:38 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:28:38 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:28:38 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:28:38 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:28:38 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:28:38 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:28:39 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:28:39.058-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:30:15 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:30:15 [INFO] Go runtime version: go1.9
2017/12/28 11:30:15 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:30:15 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:30:15 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:30:15 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:30:15 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:30:15 [INFO] command: empty terraform config, returning nil
2017/12/28 11:30:15 [DEBUG] command: no data state file found for backend config
2017/12/28 11:30:15 [DEBUG] New state was assigned lineage "e3b123d1-7dd7-4921-ba40-69d392f32d14"
2017/12/28 11:30:15 [INFO] command: backend initialized: <nil>
2017/12/28 11:30:15 [DEBUG] checking for provider in "."
2017/12/28 11:30:15 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:30:15 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:30:15 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:30:15 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:30:15 [DEBUG] found valid plugin: "external"
2017/12/28 11:30:15 [DEBUG] found valid plugin: "http"
2017/12/28 11:30:15 [DEBUG] checking for provisioner in "."
2017/12/28 11:30:15 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:30:15 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:30:16 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:30:16 [INFO] backend/local: starting Apply operation
2017/12/28 11:30:16 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:30:16 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:30:16 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:30:16 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:16 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:30:16 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:30:16 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422e4a10), RawConfig:(*config.RawConfig)(0xc0422e4930), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:16 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04233e550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Attach provider request: []string{} http
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:30:16 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:30:16 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:30:16 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:30:16 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:30:16 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:30:16.058-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:30:16.108-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:30:16.126-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:30:16 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:30:16 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:30:16 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:30:16 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:30:16 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:30:16 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:30:16 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:30:16 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:30:16 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:30:16 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:30:16 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:30:16 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:30:16 [WARN] Output interpolation "response" failed: At column 3, line 1: lookup: argument 1 should be type map, got type string in:

${lookup(data.http.example.body,"Subnets")}
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:30:16 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:16 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:30:16 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:30:16 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:30:16 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:30:16 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:30:16 [TRACE] dag/walk: walking "root"
2017/12/28 11:30:16 [TRACE] vertex 'root.root': walking
2017/12/28 11:30:16 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:30:16 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:16 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:30:16 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:30:16 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422e4a10), RawConfig:(*config.RawConfig)(0xc0422e4930), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:16 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04233e550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Attach provider request: []string{} http
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:16 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:30:16 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:30:16 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:30:16 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:30:16 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:30:16 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:30:16 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:30:16 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:30:16 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:30:16 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:30:16 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:30:16 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:30:16 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:30:16 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:30:16 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04233e550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:30:16 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:30:16 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:30:16 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:30:16 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:30:16 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:30:16 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:30:16 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:30:16 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:30:16 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:30:16 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:30:16 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:30:16 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:30:16 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:30:16 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:30:16 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:30:16 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:30:16 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:30:16 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:16 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:30:16 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:16 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:30:16 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:30:16 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:30:16 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:30:16 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:30:16 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:30:16 [TRACE] dag/walk: walking "root"
2017/12/28 11:30:16 [TRACE] vertex 'root.root': walking
2017/12/28 11:30:39 [INFO] backend/local: apply calling Refresh
2017/12/28 11:30:39 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:30:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:30:39 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:30:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082d70), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:30:39 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:30:39 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:30:39 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422e4a10), RawConfig:(*config.RawConfig)(0xc0422e4930), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Attach provider request: []string{} http
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:30:39 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:30:39 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:30:39 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:39 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:30:39 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:30:39 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:30:39 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:30:39 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:30:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:30:39 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:30:39 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:30:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:30:39 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:30:39 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:30:39 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:30:39 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:30:39 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:30:39 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:30:39 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:30:39 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:30:39 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:30:39 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:30:39 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:30:39 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:30:39 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:30:39 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:30:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:30:39 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:30:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:30:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:30:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:30:39 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:30:39 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:30:39 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:30:39 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:30:39 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:30:39 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082d70), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:30:39 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:30:39 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:30:39 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:30:39 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:30:39 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:30:39 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:30:39 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:30:39 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:30:39 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:30:40 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:30:40 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:30:40 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:30:40 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:30:40 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:30:40 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:30:40 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:30:40 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:30:40 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:30:40 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:40 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:30:40 [WARN] Output interpolation "response" failed: At column 3, line 1: lookup: argument 1 should be type map, got type string in:

${lookup(data.http.example.body,"Subnets")}
2017/12/28 11:30:40 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:40 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:30:40 [TRACE] dag/walk: walking "root"
2017/12/28 11:30:40 [TRACE] vertex 'root.root': walking
2017/12/28 11:30:40 [INFO] backend/local: apply calling Plan
2017/12/28 11:30:40 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:30:40 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:40 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:30:40 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:30:40 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422e4a10), RawConfig:(*config.RawConfig)(0xc0422e4930), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:40 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Attach provider request: []string{} http
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:30:40 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:30:40 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:30:40 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:40 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:30:40 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:30:40 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:30:40 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:30:40 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:30:40 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:30:40 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:30:40 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:30:40 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:30:40 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:30:40 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:30:40 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:40 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:30:40 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:30:40 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:30:40 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:30:40 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:30:40 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:30:40 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:30:40 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:30:40 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:30:40 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:30:40 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:30:40 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:30:40 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:30:40 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:30:40 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:30:40 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:30:40 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:30:40 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:30:40 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:30:40 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:30:40 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:30:40 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:30:40 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:30:40 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:30:40 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:40 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:30:40 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:30:40 [WARN] Output interpolation "response" failed: At column 3, line 1: lookup: argument 1 should be type map, got type string in:

${lookup(data.http.example.body,"Subnets")}
2017/12/28 11:30:40 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:40 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:30:40 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:40 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:30:40 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:30:40 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:30:40 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:30:40 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:30:40 [TRACE] dag/walk: walking "root"
2017/12/28 11:30:40 [TRACE] vertex 'root.root': walking
2017/12/28 11:30:40 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:30:40 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:30:40 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:30:40 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:30:40 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:30:40 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:30:40 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:30:40 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:30:40 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:30:40 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:30:40 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:30:40 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:30:40 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:30:40 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:30:40 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:30:40 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:30:40 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:30:40 [WARN] Output interpolation "response" failed: At column 3, line 1: lookup: argument 1 should be type map, got type string in:

${lookup(data.http.example.body,"Subnets")}
2017/12/28 11:30:40 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:30:40 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:30:40 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:30:40 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:30:40 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:30:40 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:30:40 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:30:40 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:30:40 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:30:40 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:30:40 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:30:40 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:30:40 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:30:40 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 11:30:40 [ERR] yamux: Failed to read stream data: read tcp 127.0.0.1:11292->127.0.0.1:10000: wsarecv: An existing connection was forcibly closed by the remote host.
2017/12/28 11:30:40 [ERR] yamux: Failed to write header: write tcp 127.0.0.1:11292->127.0.0.1:10000: use of closed network connection
2017-12-28T11:30:40.500-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-28T11:30:40.514-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:32:36 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:32:36 [INFO] Go runtime version: go1.9
2017/12/28 11:32:36 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:32:36 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:32:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:32:36 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:32:36 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:32:36 [INFO] command: empty terraform config, returning nil
2017/12/28 11:32:36 [DEBUG] command: no data state file found for backend config
2017/12/28 11:32:36 [DEBUG] New state was assigned lineage "fd6deade-40c3-41a4-b887-e760d686ffc0"
2017/12/28 11:32:36 [INFO] command: backend initialized: <nil>
2017/12/28 11:32:36 [DEBUG] checking for provider in "."
2017/12/28 11:32:36 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:32:36 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:32:36 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:32:36 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:32:36 [DEBUG] found valid plugin: "http"
2017/12/28 11:32:36 [DEBUG] found valid plugin: "external"
2017/12/28 11:32:36 [DEBUG] checking for provisioner in "."
2017/12/28 11:32:36 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:32:36 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:32:36 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:32:36 [INFO] backend/local: starting Apply operation
2017/12/28 11:32:36 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:32:36 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:32:36 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:32:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:32:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:32:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:32:36 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422d6af0), RawConfig:(*config.RawConfig)(0xc0422d6a10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:32:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422dcd20), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Attach provider request: []string{} http
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:32:36 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:32:36 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:32:36 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:32:36 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:32:36 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:32:36.872-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:32:36.918-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:32:36.936-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:32:36 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:32:36 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:32:36 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:32:36 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:32:36 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:32:36 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:32:36 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:32:36 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:32:36 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:32:36 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:32:36 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:32:36 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:32:36 [WARN] Output interpolation "response" failed: At column 3, line 1: lookup: argument 1 should be type map, got type string in:

${lookup(data.http.example.body,"Subnets")}
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:32:36 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:32:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:32:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:32:36 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:32:36 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:32:36 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:32:36 [TRACE] dag/walk: walking "root"
2017/12/28 11:32:36 [TRACE] vertex 'root.root': walking
2017/12/28 11:32:36 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:32:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:32:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:32:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:32:36 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422d6af0), RawConfig:(*config.RawConfig)(0xc0422d6a10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:32:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422dcd20), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Attach provider request: []string{} http
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:32:36 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:32:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:32:36 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:32:36 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:32:36 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:32:36 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:32:36 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:32:36 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:32:36 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:32:36 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:32:36 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:32:36 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:32:36 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:32:36 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:32:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422dcd20), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:32:36 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:32:36 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:32:36 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:32:36 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:32:36 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:32:36 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:32:36 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:32:36 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:32:36 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:32:36 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:32:36 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:32:36 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:32:36 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:32:36 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:32:36 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:32:36 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:32:36 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:32:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:32:36 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:32:36 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:32:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:32:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:32:36 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:32:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:32:36 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:32:36 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:32:36 [TRACE] dag/walk: walking "root"
2017/12/28 11:32:36 [TRACE] vertex 'root.root': walking
2017/12/28 11:33:00 [INFO] backend/local: apply calling Refresh
2017/12/28 11:33:00 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:33:00 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:33:00 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:33:00 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423b2230), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:33:00 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:33:00 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:33:00 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422d6af0), RawConfig:(*config.RawConfig)(0xc0422d6a10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Attach provider request: []string{} http
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:33:00 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:33:00 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:33:00 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:00 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:33:00 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:00 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:33:00 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:33:00 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:33:00 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:33:00 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:33:00 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:33:00 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:33:00 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:33:00 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:33:00 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:33:00 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:33:00 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:33:00 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:33:00 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:33:00 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:33:00 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:33:00 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:33:00 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:33:00 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:33:00 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:33:00 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:33:00 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:00 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:33:00 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:33:00 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:00 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:00 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:00 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:33:00 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:33:00 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:00 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:33:00 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:00 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423b2230), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:00 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:00 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:00 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:00 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:00 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:00 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:00 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:00 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:33:00 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:33:02 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:33:02 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:33:02 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:33:02 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:33:02 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:33:02 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:33:02 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:33:02 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:33:02 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:33:02 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:02 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:33:02 [WARN] Output interpolation "response" failed: At column 3, line 1: lookup: argument 1 should be type map, got type string in:

${lookup(data.http.example.body,"Subnets")}
2017/12/28 11:33:02 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:02 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:33:02 [TRACE] dag/walk: walking "root"
2017/12/28 11:33:02 [TRACE] vertex 'root.root': walking
2017/12/28 11:33:02 [INFO] backend/local: apply calling Plan
2017/12/28 11:33:02 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:33:02 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:02 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:33:02 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:33:02 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422d6af0), RawConfig:(*config.RawConfig)(0xc0422d6a10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:02 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082be0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Attach provider request: []string{} http
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:33:02 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:33:02 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:33:02 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:33:02 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:33:02 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:33:02 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:33:02 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:33:02 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:33:02 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:33:02 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:33:02 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:33:02 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:33:02 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:33:02 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:33:02 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:02 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:33:02 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:33:02 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:02 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:02 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:02 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:33:02 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:33:02 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:02 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:33:02 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:02 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082be0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:02 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:02 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:02 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:02 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:02 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:33:02 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:33:02 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:33:02 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:33:02 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:33:02 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:33:02 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:33:02 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:02 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:33:02 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:33:02 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:33:02 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:33:02 [WARN] Output interpolation "response" failed: At column 3, line 1: lookup: argument 1 should be type map, got type string in:

${lookup(data.http.example.body,"Subnets")}
2017/12/28 11:33:02 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:02 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:33:02 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:02 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:33:02 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:33:02 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:33:02 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:33:02 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:02 [TRACE] dag/walk: walking "root"
2017/12/28 11:33:02 [TRACE] vertex 'root.root': walking
2017/12/28 11:33:02 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:33:02 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:33:02 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:33:02 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:33:02 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:33:02 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:02 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:33:02 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:33:02 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:33:02 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:33:02 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:33:02 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:33:02 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:33:02 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:33:02 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:33:02 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:02 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:33:02 [WARN] Output interpolation "response" failed: At column 3, line 1: lookup: argument 1 should be type map, got type string in:

${lookup(data.http.example.body,"Subnets")}
2017/12/28 11:33:02 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:02 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:33:02 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:02 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:33:02 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:33:02 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:02 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:33:02 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:33:02 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:02 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:02 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:02 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:02 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:02 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:33:02.725-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:33:09 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:33:09 [INFO] Go runtime version: go1.9
2017/12/28 11:33:09 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:33:09 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:33:09 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:33:09 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:33:09 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:33:09 [INFO] command: empty terraform config, returning nil
2017/12/28 11:33:09 [DEBUG] command: no data state file found for backend config
2017/12/28 11:33:09 [DEBUG] New state was assigned lineage "f1a0973d-0a08-4a5c-a25e-4b3711bd5ffa"
2017/12/28 11:33:09 [INFO] command: backend initialized: <nil>
2017/12/28 11:33:09 [DEBUG] checking for provider in "."
2017/12/28 11:33:09 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:33:09 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:33:09 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:33:09 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:33:09 [DEBUG] found valid plugin: "http"
2017/12/28 11:33:09 [DEBUG] found valid plugin: "external"
2017/12/28 11:33:09 [DEBUG] checking for provisioner in "."
2017/12/28 11:33:09 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:33:09 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:33:09 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:33:09 [INFO] backend/local: starting Apply operation
2017/12/28 11:33:09 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:09 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:09 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:33:09 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:09 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:33:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:33:09 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422dc850), RawConfig:(*config.RawConfig)(0xc0422dc770), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:09 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04232c5a0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Attach provider request: []string{} http
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:33:09 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:33:09 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:33:09 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:33:09.658-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:33:09.797-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:33:09.822-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:33:09 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:33:09 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:09 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:33:09 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:33:09 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:33:09 [WARN] Output interpolation "response" failed: invalid variable syntax: "Subnets". Did you mean 'var.Subnets'? If this is part of inline `template` parameter
then you must escape the interpolation with two dollar signs. For
example: ${a} becomes $${a}.
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:33:09 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:09 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:33:09 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:33:09 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:33:09 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:33:09 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:33:09 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:33:09 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:33:09 [TRACE] dag/walk: walking "root"
2017/12/28 11:33:09 [TRACE] vertex 'root.root': walking
2017/12/28 11:33:09 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:33:09 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:09 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:33:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:33:09 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422dc850), RawConfig:(*config.RawConfig)(0xc0422dc770), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:09 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04232c5a0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Attach provider request: []string{} http
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:33:09 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:33:09 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:33:09 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:33:09 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:09 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:33:09 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:33:09 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04232c5a0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:09 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:33:09 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:33:09 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:33:09 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:33:09 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:33:09 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:33:09 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:33:09 [WARN] Output interpolation "response" failed: invalid variable syntax: "Subnets". Did you mean 'var.Subnets'? If this is part of inline `template` parameter
then you must escape the interpolation with two dollar signs. For
example: ${a} becomes $${a}.
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:33:09 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:09 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:33:09 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:33:09 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:33:09 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:09 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:33:09 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:33:09 [TRACE] dag/walk: walking "root"
2017/12/28 11:33:09 [TRACE] vertex 'root.root': walking
2017/12/28 11:33:09 [INFO] backend/local: apply calling Refresh
2017/12/28 11:33:09 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:33:09 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:33:09 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:33:09 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042068e10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:33:09 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:33:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:33:09 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422dc850), RawConfig:(*config.RawConfig)(0xc0422dc770), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Attach provider request: []string{} http
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:09 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:33:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:33:09 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:33:09 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:33:09 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:33:09 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:33:09 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:33:09 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:09 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:33:09 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:09 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:33:09 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:09 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042068e10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:09 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:09 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:33:09 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:09 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:09 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:09 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:33:09 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:33:10 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:33:10 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:33:10 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:33:10 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:33:10 [WARN] Output interpolation "response" failed: invalid variable syntax: "Subnets". Did you mean 'var.Subnets'? If this is part of inline `template` parameter
then you must escape the interpolation with two dollar signs. For
example: ${a} becomes $${a}.
2017/12/28 11:33:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:10 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:33:10 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:33:10 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:33:10 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:33:10 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:33:10 [TRACE] dag/walk: walking "root"
2017/12/28 11:33:10 [TRACE] vertex 'root.root': walking
2017/12/28 11:33:10 [INFO] backend/local: apply calling Plan
2017/12/28 11:33:10 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:33:10 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:10 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:33:10 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:33:10 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422dc850), RawConfig:(*config.RawConfig)(0xc0422dc770), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:10 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422f01e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Attach provider request: []string{} http
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:33:10 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:33:10 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:33:10 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:33:10 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:33:10 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:33:10 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:33:10 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:33:10 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:33:10 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:33:10 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:33:10 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:33:10 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:33:10 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:33:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:33:10 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:33:10 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:10 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:10 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:33:10 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:33:10 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:10 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:33:10 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:10 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422f01e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:10 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:33:10 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:33:10 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:33:10 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:33:10 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:33:10 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:33:10 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:33:10 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:33:10 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:33:10 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:33:10 [WARN] Output interpolation "response" failed: invalid variable syntax: "Subnets". Did you mean 'var.Subnets'? If this is part of inline `template` parameter
then you must escape the interpolation with two dollar signs. For
example: ${a} becomes $${a}.
2017/12/28 11:33:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:10 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:33:10 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:10 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:33:10 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:33:10 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:33:10 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:33:10 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:33:10 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:10 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:33:10 [TRACE] dag/walk: walking "root"
2017/12/28 11:33:10 [TRACE] vertex 'root.root': walking
2017/12/28 11:33:10 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:33:10 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:33:10 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:33:10 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:33:10 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:33:10 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:33:10 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:10 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:33:10 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:33:10 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:33:10 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:33:10 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:33:10 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:33:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:33:10 [WARN] Output interpolation "response" failed: invalid variable syntax: "Subnets". Did you mean 'var.Subnets'? If this is part of inline `template` parameter
then you must escape the interpolation with two dollar signs. For
example: ${a} becomes $${a}.
2017/12/28 11:33:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:33:10 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:33:10 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:33:10 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:33:10 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:33:10 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:33:10 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:33:10 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:10 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:33:10 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:33:10 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:33:10 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:10 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:10 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:10 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:33:11 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 11:33:11 [ERR] yamux: Failed to read stream data: read tcp 127.0.0.1:11314->127.0.0.1:10000: wsarecv: An existing connection was forcibly closed by the remote host.
2017-12-28T11:33:11.041-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017/12/28 11:33:11 [ERR] yamux: Failed to write header: write tcp 127.0.0.1:11314->127.0.0.1:10000: use of closed network connection
2017-12-28T11:33:11.053-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:34:05 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:34:05 [INFO] Go runtime version: go1.9
2017/12/28 11:34:05 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:34:05 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:34:05 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:34:05 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:34:05 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:34:05 [INFO] command: empty terraform config, returning nil
2017/12/28 11:34:05 [DEBUG] command: no data state file found for backend config
2017/12/28 11:34:05 [DEBUG] New state was assigned lineage "974f7557-ab27-4e92-9c25-3fcaf594625f"
2017/12/28 11:34:05 [INFO] command: backend initialized: <nil>
2017/12/28 11:34:05 [DEBUG] checking for provider in "."
2017/12/28 11:34:05 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:34:05 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:34:05 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:34:05 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:34:05 [DEBUG] found valid plugin: "http"
2017/12/28 11:34:05 [DEBUG] found valid plugin: "external"
2017/12/28 11:34:05 [DEBUG] checking for provisioner in "."
2017/12/28 11:34:05 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:34:05 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:34:05 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:34:05 [INFO] backend/local: starting Apply operation
2017/12/28 11:34:05 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:34:05 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:34:05 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:34:05 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:05 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:34:05 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:34:05 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042340070), RawConfig:(*config.RawConfig)(0xc0422ec850), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:05 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042250960), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Attach provider request: []string{} http
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:34:05 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:34:05 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:34:05 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:34:05 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:34:05 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:34:05.601-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:34:05.653-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:34:05.673-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:34:05 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:34:05 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:34:05 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:34:05 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:34:05 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:34:05 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:34:05 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:34:05 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:34:05 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:34:05 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:34:05 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:34:05 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:34:05 [WARN] Output interpolation "response" failed: At column 3, line 1: keys: argument 1 should be type map, got type string in:

${keys(data.http.example.body)}
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:34:05 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:34:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:34:05 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:34:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:34:05 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:34:05 [TRACE] dag/walk: walking "root"
2017/12/28 11:34:05 [TRACE] vertex 'root.root': walking
2017/12/28 11:34:05 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:34:05 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:05 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:34:05 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:34:05 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042340070), RawConfig:(*config.RawConfig)(0xc0422ec850), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:05 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042250960), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Attach provider request: []string{} http
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:05 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:34:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:34:05 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:34:05 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:34:05 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:34:05 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:34:05 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:34:05 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:34:05 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:34:05 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:34:05 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:34:05 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:34:05 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:34:05 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:34:05 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042250960), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:34:05 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:34:05 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:34:05 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:34:05 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:34:05 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:34:05 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:34:05 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:34:05 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:34:05 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:34:05 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:34:05 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:34:05 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:34:05 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:34:05 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:34:05 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:34:05 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:05 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:34:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:05 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:34:05 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:34:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:34:05 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:34:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:34:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:34:05 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:34:05 [TRACE] dag/walk: walking "root"
2017/12/28 11:34:05 [TRACE] vertex 'root.root': walking
2017/12/28 11:34:28 [INFO] backend/local: apply calling Refresh
2017/12/28 11:34:28 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:34:28 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:34:28 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:34:28 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042083040), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:34:28 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:34:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:34:28 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042340070), RawConfig:(*config.RawConfig)(0xc0422ec850), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Attach provider request: []string{} http
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:34:28 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:34:28 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:34:28 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:28 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:34:28 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:34:28 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:34:28 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:34:28 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:34:28 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:34:28 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:34:28 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:34:28 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:34:28 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:34:28 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:34:28 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:34:28 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:34:28 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:34:28 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:34:28 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:34:28 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:34:28 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:34:28 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:34:28 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:34:28 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:34:28 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:34:28 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:34:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:34:28 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:34:28 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:34:28 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:34:28 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:34:28 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:34:28 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:34:28 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:34:28 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:34:28 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:34:28 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:34:28 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042083040), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:34:28 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:34:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:34:29 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:34:29 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:34:29 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:34:29 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:34:29 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:34:29 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:34:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:29 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:34:29 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:29 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:34:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:29 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:34:29 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:34:29 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:34:33 [TRACE] dag/walk: vertex "root", waiting for: "output.response"
2017/12/28 11:34:33 [TRACE] dag/walk: vertex "provider.http (close)", waiting for: "data.http.example"
2017/12/28 11:34:33 [TRACE] dag/walk: vertex "output.response", waiting for: "data.http.example"
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:34:37 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:34:37 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:34:37 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:34:37 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:34:37 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:34:37 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:34:37 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:34:37 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:34:37 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:34:37 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:34:37 [WARN] Output interpolation "response" failed: At column 3, line 1: keys: argument 1 should be type map, got type string in:

${keys(data.http.example.body)}
2017/12/28 11:34:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:37 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:34:37 [TRACE] dag/walk: walking "root"
2017/12/28 11:34:37 [TRACE] vertex 'root.root': walking
2017/12/28 11:34:37 [INFO] backend/local: apply calling Plan
2017/12/28 11:34:37 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:34:37 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:37 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:34:37 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:34:37 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042340070), RawConfig:(*config.RawConfig)(0xc0422ec850), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225e410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Attach provider request: []string{} http
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:34:37 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:34:37 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:34:37 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:34:37 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:34:37 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:34:37 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:34:37 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:34:37 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:34:37 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:34:37 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:34:37 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:34:37 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:34:37 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:34:37 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:34:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:34:37 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:34:37 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:34:37 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:34:37 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:34:37 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:34:37 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:34:37 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:34:37 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:34:37 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:34:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225e410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:34:37 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:34:37 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:34:37 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:34:37 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:34:37 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:34:37 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:34:37 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:34:37 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:34:37 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:34:37 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:34:37 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:34:37 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:34:37 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:34:37 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:34:37 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:34:37 [WARN] Output interpolation "response" failed: At column 3, line 1: keys: argument 1 should be type map, got type string in:

${keys(data.http.example.body)}
2017/12/28 11:34:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:37 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:34:37 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:37 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:34:37 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:34:37 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:34:37 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:34:37 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:34:37 [TRACE] dag/walk: walking "root"
2017/12/28 11:34:37 [TRACE] vertex 'root.root': walking
2017/12/28 11:34:37 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:34:37 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:34:37 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:34:37 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:34:37 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:34:37 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:34:37 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:34:37 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:34:37 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:34:37 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:34:37 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:34:37 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:34:37 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:34:37 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:34:37 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:34:37 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:34:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:34:37 [WARN] Output interpolation "response" failed: At column 3, line 1: keys: argument 1 should be type map, got type string in:

${keys(data.http.example.body)}
2017/12/28 11:34:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:34:37 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:34:37 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:34:37 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:34:37 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:34:37 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:34:37 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:34:37 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:34:37 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:34:37 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:34:37 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:34:37 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:34:37 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:34:37 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:34:37.409-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:35:59 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:35:59 [INFO] Go runtime version: go1.9
2017/12/28 11:35:59 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:35:59 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:35:59 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:35:59 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:35:59 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:35:59 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 11:36:50 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:36:50 [INFO] Go runtime version: go1.9
2017/12/28 11:36:50 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:36:50 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:36:50 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:36:50 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:36:50 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:36:50 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 11:37:05 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:37:05 [INFO] Go runtime version: go1.9
2017/12/28 11:37:05 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:37:05 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:37:05 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:37:05 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:37:05 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:37:05 [INFO] command: empty terraform config, returning nil
2017/12/28 11:37:05 [DEBUG] command: no data state file found for backend config
2017/12/28 11:37:05 [DEBUG] New state was assigned lineage "52626cdb-24dd-40a5-bf83-867f2eb99970"
2017/12/28 11:37:05 [INFO] command: backend initialized: <nil>
2017/12/28 11:37:05 [DEBUG] checking for provider in "."
2017/12/28 11:37:05 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:37:05 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:37:05 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:37:05 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:37:05 [DEBUG] found valid plugin: "external"
2017/12/28 11:37:05 [DEBUG] found valid plugin: "http"
2017/12/28 11:37:05 [DEBUG] checking for provisioner in "."
2017/12/28 11:37:05 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:37:05 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:37:05 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:37:05 [INFO] backend/local: starting Apply operation
2017/12/28 11:37:05 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:05 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:05 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:37:05 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:05 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:05 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:37:05 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04230db90), RawConfig:(*config.RawConfig)(0xc04230dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:05 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042259720), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Attach provider request: []string{} http
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:05 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:37:05 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:37:05 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:05 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:37:05 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:37:05.168-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:37:05.226-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:37:05.243-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:37:05 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:37:05 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:05 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:05 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:37:05 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:37:05 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:05 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:37:05 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:37:05 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:05 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:37:05 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:05 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:05 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${keys(map(data.http.example.body))}
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:37:05 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:37:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:37:05 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:37:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:37:05 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:05 [TRACE] dag/walk: walking "root"
2017/12/28 11:37:05 [TRACE] vertex 'root.root': walking
2017/12/28 11:37:05 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:37:05 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:05 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:05 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:37:05 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04230db90), RawConfig:(*config.RawConfig)(0xc04230dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:05 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042259720), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Attach provider request: []string{} http
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:05 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:05 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:37:05 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:05 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:05 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:37:05 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:37:05 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:37:05 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:37:05 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:05 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:05 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:05 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:37:05 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:37:05 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:05 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042259720), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:05 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:05 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:05 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:05 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:05 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:05 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:05 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:37:05 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:37:05 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:37:05 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:37:05 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:05 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:05 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:37:05 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:37:05 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:37:05 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:05 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:05 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:37:05 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:37:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:37:05 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:37:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:37:05 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:05 [TRACE] dag/walk: walking "root"
2017/12/28 11:37:05 [TRACE] vertex 'root.root': walking
2017/12/28 11:37:28 [INFO] backend/local: apply calling Refresh
2017/12/28 11:37:28 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:37:28 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:37:28 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:37:28 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042258500), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:37:28 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:37:28 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04230db90), RawConfig:(*config.RawConfig)(0xc04230dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Attach provider request: []string{} http
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:37:28 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:28 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:37:28 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:28 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:37:28 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:28 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:28 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:37:28 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:28 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:37:28 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:37:28 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:37:28 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:37:28 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:37:28 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:37:28 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:37:28 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:37:28 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:37:28 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:37:28 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:37:28 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:37:28 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:28 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:28 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:37:28 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:37:28 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:37:28 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:37:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:37:28 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:37:28 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:28 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:28 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:28 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:37:28 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:37:28 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:28 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:37:28 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:28 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042258500), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:28 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:28 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:28 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:28 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:28 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:28 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:28 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:37:28 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:37:31 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:37:31 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:37:31 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:37:31 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:37:31 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:31 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:31 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:37:31 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:31 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:31 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${keys(map(data.http.example.body))}
2017/12/28 11:37:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:31 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:37:31 [TRACE] dag/walk: walking "root"
2017/12/28 11:37:31 [TRACE] vertex 'root.root': walking
2017/12/28 11:37:31 [INFO] backend/local: apply calling Plan
2017/12/28 11:37:31 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:37:31 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:31 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:31 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:37:31 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04230db90), RawConfig:(*config.RawConfig)(0xc04230dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:31 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042258910), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Attach provider request: []string{} http
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:37:31 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:37:31 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:31 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:31 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:37:31 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:37:31 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:37:31 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:37:31 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:37:31 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:31 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:31 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:37:31 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:37:31 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:37:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:37:31 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:37:31 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:31 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:31 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:37:31 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:37:31 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:31 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:37:31 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:31 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042258910), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:31 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:31 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:31 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:31 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:37:31 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:37:31 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:31 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:31 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:31 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${keys(map(data.http.example.body))}
2017/12/28 11:37:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:31 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:37:31 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:31 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:37:31 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:37:31 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:37:31 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:31 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:37:31 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:37:31 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:37:31 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:37:31 [TRACE] dag/walk: walking "root"
2017/12/28 11:37:31 [TRACE] vertex 'root.root': walking
2017/12/28 11:37:31 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:37:31 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:37:31 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:37:31 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:37:31 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:31 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:31 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:31 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:37:31 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:37:31 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:37:31 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:31 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:31 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:31 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:31 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:31 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${keys(map(data.http.example.body))}
2017/12/28 11:37:31 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:31 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:37:31 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:31 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:37:31 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:37:31 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:31 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:37:31 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:37:31 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:31 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:31 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:31 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:31 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:31 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:37:31.161-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:37:49 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:37:49 [INFO] Go runtime version: go1.9
2017/12/28 11:37:49 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:37:49 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:37:49 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:37:49 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:37:49 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:37:49 [INFO] command: empty terraform config, returning nil
2017/12/28 11:37:49 [DEBUG] command: no data state file found for backend config
2017/12/28 11:37:49 [DEBUG] New state was assigned lineage "f9aa0f3c-b267-4612-8187-067e479f4319"
2017/12/28 11:37:49 [INFO] command: backend initialized: <nil>
2017/12/28 11:37:49 [DEBUG] checking for provider in "."
2017/12/28 11:37:49 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:37:49 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:37:49 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:37:49 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:37:49 [DEBUG] found valid plugin: "external"
2017/12/28 11:37:49 [DEBUG] found valid plugin: "http"
2017/12/28 11:37:49 [DEBUG] checking for provisioner in "."
2017/12/28 11:37:49 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:37:49 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:37:49 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:37:49 [INFO] backend/local: starting Apply operation
2017/12/28 11:37:49 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:49 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:49 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:37:49 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:49 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:37:49 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422ea850), RawConfig:(*config.RawConfig)(0xc0422ea770), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:49 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423345f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Attach provider request: []string{} http
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:37:49 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:49 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:37:49 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:37:49.161-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:37:49.234-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:37:49.263-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:37:49 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:37:49 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:49 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:37:49 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:37:49 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:37:49 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:49 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:49 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:49 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(data.http.example.body)}
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:37:49 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:37:49 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:37:49 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:37:49 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:49 [TRACE] dag/walk: walking "root"
2017/12/28 11:37:49 [TRACE] vertex 'root.root': walking
2017/12/28 11:37:49 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:37:49 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:49 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:37:49 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422ea850), RawConfig:(*config.RawConfig)(0xc0422ea770), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:49 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423345f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Attach provider request: []string{} http
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:49 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:37:49 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:37:49 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:37:49 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:49 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:37:49 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:49 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423345f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:49 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:37:49 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:37:49 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:49 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:49 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:49 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:37:49 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:37:49 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:37:49 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:37:49 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:37:49 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:37:49 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:49 [TRACE] dag/walk: walking "root"
2017/12/28 11:37:49 [TRACE] vertex 'root.root': walking
2017/12/28 11:37:49 [INFO] backend/local: apply calling Refresh
2017/12/28 11:37:49 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:37:49 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:37:49 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:37:49 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224ceb0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:37:49 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:37:49 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422ea850), RawConfig:(*config.RawConfig)(0xc0422ea770), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Attach provider request: []string{} http
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:49 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:37:49 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:49 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:49 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:37:49 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:37:49 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:37:49 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:49 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:37:49 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:49 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:37:49 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:49 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224ceb0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:49 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:49 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:37:49 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:49 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:49 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:49 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:37:49 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:37:50 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:37:50 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:50 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:50 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:50 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:37:50 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:37:50 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:37:50 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:37:50 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(data.http.example.body)}
2017/12/28 11:37:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:50 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:37:50 [TRACE] dag/walk: walking "root"
2017/12/28 11:37:50 [TRACE] vertex 'root.root': walking
2017/12/28 11:37:50 [INFO] backend/local: apply calling Plan
2017/12/28 11:37:50 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:37:50 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:50 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:37:50 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422ea850), RawConfig:(*config.RawConfig)(0xc0422ea770), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:50 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423348c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Attach provider request: []string{} http
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:50 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:37:50 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:37:50 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:37:50 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:37:50 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:37:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:37:50 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:37:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:37:50 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:37:50 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:37:50 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:50 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:37:50 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:37:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:37:50 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:37:50 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:50 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:50 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:37:50 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:37:50 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:50 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:37:50 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:50 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423348c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:50 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:37:50 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:37:50 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:37:50 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:37:50 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:37:50 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:37:50 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:37:50 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:37:50 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:37:50 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:50 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:37:50 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:50 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(data.http.example.body)}
2017/12/28 11:37:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:50 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:37:50 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:37:50 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:37:50 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:37:50 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:50 [TRACE] dag/walk: walking "root"
2017/12/28 11:37:50 [TRACE] vertex 'root.root': walking
2017/12/28 11:37:50 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:37:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:37:50 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:37:50 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:37:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:37:50 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:37:50 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:37:50 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:37:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:37:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:37:50 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:37:50 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:37:50 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:37:50 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:37:50 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:37:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:37:50 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(data.http.example.body)}
2017/12/28 11:37:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:37:50 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:37:50 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:37:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:37:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:37:50 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:37:50 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:37:50 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:37:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:37:50 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 11:37:50 [ERR] yamux: Failed to read stream data: read tcp 127.0.0.1:11343->127.0.0.1:10000: wsarecv: An existing connection was forcibly closed by the remote host.
2017/12/28 11:37:50 [ERR] yamux: Failed to write header: write tcp 127.0.0.1:11343->127.0.0.1:10000: use of closed network connection
2017-12-28T11:37:50.364-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-28T11:37:50.377-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:38:08 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:38:08 [INFO] Go runtime version: go1.9
2017/12/28 11:38:08 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:38:08 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:38:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:38:08 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:38:08 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:38:08 [INFO] command: empty terraform config, returning nil
2017/12/28 11:38:08 [DEBUG] command: no data state file found for backend config
2017/12/28 11:38:09 [DEBUG] New state was assigned lineage "22733a59-ec17-49a3-b4ca-fe284f7a3a7f"
2017/12/28 11:38:09 [INFO] command: backend initialized: <nil>
2017/12/28 11:38:09 [DEBUG] checking for provider in "."
2017/12/28 11:38:09 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:38:09 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:38:09 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:38:09 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:38:09 [DEBUG] found valid plugin: "external"
2017/12/28 11:38:09 [DEBUG] found valid plugin: "http"
2017/12/28 11:38:09 [DEBUG] checking for provisioner in "."
2017/12/28 11:38:09 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:38:09 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:38:09 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:38:09 [INFO] backend/local: starting Apply operation
2017/12/28 11:38:09 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:38:09 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:38:09 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:38:09 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:09 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:38:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:38:09 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04230db90), RawConfig:(*config.RawConfig)(0xc04230dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:09 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225f6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Attach provider request: []string{} http
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:38:09 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:38:09 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:38:09 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:38:09 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:38:09.086-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:38:09.157-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:38:09.181-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:38:09 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:38:09 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:38:09 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:38:09 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:38:09 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:38:09 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:38:09 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:38:09 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:38:09 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:38:09 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:38:09 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:09 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:38:09 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:38:09 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:38:09 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:38:09 [TRACE] dag/walk: walking "root"
2017/12/28 11:38:09 [TRACE] vertex 'root.root': walking
2017/12/28 11:38:09 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:38:09 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:09 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:38:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:38:09 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04230db90), RawConfig:(*config.RawConfig)(0xc04230dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:09 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225f6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Attach provider request: []string{} http
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:09 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:38:09 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:38:09 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:38:09 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:38:09 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:38:09 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:38:09 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:38:09 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:38:09 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:38:09 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:38:09 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:38:09 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:38:09 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225f6d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:38:09 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:38:09 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:38:09 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:38:09 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:38:09 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:38:09 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:38:09 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:38:09 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:38:09 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:38:09 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:38:09 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:38:09 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:38:09 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:38:09 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:38:09 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:38:09 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:09 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:38:09 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:09 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:38:09 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:38:09 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:38:09 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:38:09 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:38:09 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:38:09 [TRACE] dag/walk: walking "root"
2017/12/28 11:38:09 [TRACE] vertex 'root.root': walking
2017/12/28 11:38:32 [INFO] backend/local: apply calling Refresh
2017/12/28 11:38:32 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:38:32 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:38:32 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:38:32 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225e690), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:38:32 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:38:32 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:38:32 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04230db90), RawConfig:(*config.RawConfig)(0xc04230dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Attach provider request: []string{} http
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:38:32 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:38:32 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:38:32 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:32 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:38:32 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:38:32 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:38:32 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:38:32 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:38:32 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:38:32 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:38:32 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:38:32 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:38:32 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:38:32 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:38:32 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:38:32 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:38:32 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:38:32 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:38:32 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:38:32 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:38:32 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:38:32 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:38:32 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:38:32 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:38:32 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:38:32 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:38:32 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:32 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:38:32 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:38:32 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:38:32 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:38:32 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:38:32 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:38:32 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:38:32 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:38:32 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:38:32 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:38:32 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225e690), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:38:32 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:38:32 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:38:32 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:38:32 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:38:32 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:38:32 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:38:32 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:38:32 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:38:32 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:38:33 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:38:33 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:38:33 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:38:33 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:38:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:38:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:38:33 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:38:33 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:38:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:33 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:38:33 [TRACE] dag/walk: walking "root"
2017/12/28 11:38:33 [TRACE] vertex 'root.root': walking
2017/12/28 11:38:33 [INFO] backend/local: apply calling Plan
2017/12/28 11:38:33 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:38:33 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:33 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:38:33 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:38:33 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc04230db90), RawConfig:(*config.RawConfig)(0xc04230dab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224a5a0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Attach provider request: []string{} http
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:38:33 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:38:33 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:38:33 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:38:33 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:38:33 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:38:33 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:38:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:38:33 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:38:33 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:38:33 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:38:33 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:38:33 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:38:33 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:38:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:38:33 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:38:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:38:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:38:33 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:38:33 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:38:33 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:38:33 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:38:33 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:38:33 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224a5a0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:38:33 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:38:33 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:38:33 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:38:33 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:38:33 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:38:33 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:38:33 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:38:33 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:38:33 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:38:33 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:38:33 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:38:33 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:38:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:33 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:38:33 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:38:33 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:38:33 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:38:33 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:38:33 [TRACE] dag/walk: walking "root"
2017/12/28 11:38:33 [TRACE] vertex 'root.root': walking
2017/12/28 11:38:33 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:38:33 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:38:33 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:38:33 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:38:33 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:38:33 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:38:33 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:38:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:38:33 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:38:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:38:33 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:38:33 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:38:33 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:38:33 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:38:33 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:38:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:38:33 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:38:33 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:38:33 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:38:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:38:33 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:38:33 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:38:33 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:38:33 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:38:33 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:38:33 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:38:33 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:38:33 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:38:33 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:38:33 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:38:33.642-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:39:19 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:39:19 [INFO] Go runtime version: go1.9
2017/12/28 11:39:19 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:39:19 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:39:19 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:39:19 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:39:19 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:39:19 [INFO] command: empty terraform config, returning nil
2017/12/28 11:39:19 [DEBUG] command: no data state file found for backend config
2017/12/28 11:39:19 [DEBUG] New state was assigned lineage "cd77d9e3-3b6f-4a91-a2df-3e4a88616db4"
2017/12/28 11:39:19 [INFO] command: backend initialized: <nil>
2017/12/28 11:39:19 [DEBUG] checking for provider in "."
2017/12/28 11:39:19 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:39:19 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:39:19 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:39:19 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:39:19 [DEBUG] found valid plugin: "http"
2017/12/28 11:39:19 [DEBUG] found valid plugin: "external"
2017/12/28 11:39:19 [DEBUG] checking for provisioner in "."
2017/12/28 11:39:19 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:39:19 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:39:19 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:39:19 [INFO] backend/local: starting Apply operation
2017/12/28 11:39:19 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:39:19 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:39:19 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:39:19 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:19 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:39:19 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:39:19 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042312150), RawConfig:(*config.RawConfig)(0xc0422ee7e0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:19 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225a910), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Attach provider request: []string{} http
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:39:19 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:39:19 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:39:19 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:19 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:39:19 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:39:19 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:39:19 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:39:19 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:19 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:39:19 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:39:19 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:39:19 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:39:19 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:39:19 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:39:19 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:39:19 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:39:19 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:19 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:39:19 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:39:19 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:39:19 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:39:19 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:39:19 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:39:19 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:39:19 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:39:19 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:39:19 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:39:19 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:39:19 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:39:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:19 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:39:19.897-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:39:19.974-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:39:19.997-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:39:19 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:39:20 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:39:20 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:39:20 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:39:20 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:39:20 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:39:20 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:39:20 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:39:20 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:39:20 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:39:20 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:39:20 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:39:20 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${lookup(map(data.http.example.body),"Subnets")}
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:39:20 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:20 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:39:20 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:39:20 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:39:20 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:39:20 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:39:20 [TRACE] dag/walk: walking "root"
2017/12/28 11:39:20 [TRACE] vertex 'root.root': walking
2017/12/28 11:39:20 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:39:20 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:20 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:39:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:39:20 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042312150), RawConfig:(*config.RawConfig)(0xc0422ee7e0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:20 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225a910), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Attach provider request: []string{} http
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:39:20 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:39:20 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:39:20 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:20 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:39:20 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:39:20 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:39:20 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:39:20 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:39:20 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:39:20 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:39:20 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:20 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:39:20 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:39:20 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:39:20 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:20 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:39:20 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:39:20 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:39:20 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:39:20 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:39:20 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:39:20 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:39:20 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:39:20 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:39:20 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:39:20 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:39:20 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:39:20 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:39:20 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:39:20 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:39:20 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:39:20 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:39:20 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:39:20 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:39:20 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:39:20 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225a910), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:39:20 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:39:20 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:39:20 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:39:20 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:39:20 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:39:20 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:39:20 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:39:20 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:39:20 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:39:20 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:39:20 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:39:20 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:39:20 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:39:20 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:39:20 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:39:20 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:39:20 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:39:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:20 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:39:20 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:20 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:39:20 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:39:20 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:39:20 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:39:20 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:39:20 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:39:20 [TRACE] dag/walk: walking "root"
2017/12/28 11:39:20 [TRACE] vertex 'root.root': walking
2017/12/28 11:39:43 [INFO] backend/local: apply calling Refresh
2017/12/28 11:39:43 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:39:43 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:39:43 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:39:43 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042436820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:39:43 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:39:43 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:39:43 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042312150), RawConfig:(*config.RawConfig)(0xc0422ee7e0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Attach provider request: []string{} http
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:39:43 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:39:43 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:39:43 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:43 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:39:43 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:39:43 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:39:43 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:39:43 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:39:43 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:39:43 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:39:43 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:39:43 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:39:43 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:39:43 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:39:43 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:39:43 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:39:43 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:39:43 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:39:43 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:39:43 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:39:43 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:39:43 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:39:43 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:39:43 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:39:43 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:39:43 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:39:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:39:43 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:39:43 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:39:43 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:39:43 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:39:43 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:39:43 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:39:43 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:39:43 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:39:43 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:39:43 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042436820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:39:43 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:39:43 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:39:43 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:39:43 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:39:43 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:39:43 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:39:43 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:39:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:39:43 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:39:44 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:39:44 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:39:44 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:39:44 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:39:44 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:39:44 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:39:44 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:39:44 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:39:44 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:39:44 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:39:44 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${lookup(map(data.http.example.body),"Subnets")}
2017/12/28 11:39:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:44 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:39:44 [TRACE] dag/walk: walking "root"
2017/12/28 11:39:44 [TRACE] vertex 'root.root': walking
2017/12/28 11:39:44 [INFO] backend/local: apply calling Plan
2017/12/28 11:39:44 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:39:44 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:44 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:39:44 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:39:44 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042312150), RawConfig:(*config.RawConfig)(0xc0422ee7e0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:44 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082e60), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Attach provider request: []string{} http
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:39:44 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:39:44 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:39:44 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:39:44 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:39:44 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:39:44 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:39:44 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:39:44 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:39:44 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:39:44 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:39:44 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:39:44 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:39:44 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:39:44 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:39:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:39:44 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:39:44 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:39:44 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:39:44 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:39:44 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:39:44 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:39:44 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:39:44 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:39:44 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:39:44 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082e60), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:39:44 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:39:44 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:39:44 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:39:44 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:39:44 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:39:44 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:39:44 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:39:44 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:39:44 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:39:44 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:39:44 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:39:44 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:39:44 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:39:44 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:39:44 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:39:44 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${lookup(map(data.http.example.body),"Subnets")}
2017/12/28 11:39:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:44 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:39:44 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:44 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:39:44 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:39:44 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:39:44 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:39:44 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:39:44 [TRACE] dag/walk: walking "root"
2017/12/28 11:39:44 [TRACE] vertex 'root.root': walking
2017/12/28 11:39:44 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:39:44 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:39:44 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:39:44 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:39:44 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:39:44 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:39:44 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:39:44 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:39:44 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:39:44 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:39:44 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:39:44 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:39:44 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:39:44 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:39:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:39:44 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:39:44 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:39:44 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${lookup(map(data.http.example.body),"Subnets")}
2017/12/28 11:39:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:39:44 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:39:44 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:39:44 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:39:44 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:39:44 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:39:44 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:39:44 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:39:44 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:39:44 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:39:44 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:39:44 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:39:44 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:39:44 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:39:44.307-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:41:29 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:41:29 [INFO] Go runtime version: go1.9
2017/12/28 11:41:29 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:41:29 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:41:29 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:41:29 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:41:29 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:41:29 [INFO] command: empty terraform config, returning nil
2017/12/28 11:41:29 [DEBUG] command: no data state file found for backend config
2017/12/28 11:41:29 [DEBUG] New state was assigned lineage "4179dfc9-2e06-4946-bb03-766b2b4e73c0"
2017/12/28 11:41:29 [INFO] command: backend initialized: <nil>
2017/12/28 11:41:29 [DEBUG] checking for provider in "."
2017/12/28 11:41:29 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:41:29 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:41:29 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:41:29 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:41:29 [DEBUG] found valid plugin: "external"
2017/12/28 11:41:29 [DEBUG] found valid plugin: "http"
2017/12/28 11:41:29 [DEBUG] checking for provisioner in "."
2017/12/28 11:41:29 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:41:29 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:41:29 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:41:29 [INFO] backend/local: starting Apply operation
2017/12/28 11:41:29 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:41:29 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:41:29 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:41:29 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:29 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:41:29 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:41:29 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042305b90), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:29 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224a910), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Attach provider request: []string{} http
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:41:29 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:41:29 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:41:29 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:41:29 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:41:29 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:41:29.885-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:41:29.937-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:41:29.963-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:41:29 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:41:29 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:41:29 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:41:29 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:41:29 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:41:29 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:41:29 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:41:29 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:41:29 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:41:29 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:41:29 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:41:29 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:41:29 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(data.http.example.body)}
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:41:29 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:29 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:41:29 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:41:29 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:41:29 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:41:29 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:41:29 [TRACE] dag/walk: walking "root"
2017/12/28 11:41:29 [TRACE] vertex 'root.root': walking
2017/12/28 11:41:29 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:41:29 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:29 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:41:29 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:41:29 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042305b90), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:29 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224a910), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Attach provider request: []string{} http
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:29 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:41:29 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:41:29 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:41:29 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:41:29 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:41:29 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:41:29 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:41:29 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:41:29 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:41:29 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:41:29 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:41:29 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:41:29 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:41:29 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:41:29 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224a910), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:41:29 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:41:29 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:41:29 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:41:29 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:41:29 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:41:29 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:41:29 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:41:29 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:41:29 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:41:29 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:41:29 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:41:29 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:41:29 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:41:29 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:29 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:29 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:41:29 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:41:29 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:29 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:41:29 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:29 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:41:29 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:41:29 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:41:29 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:41:29 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:41:29 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:41:29 [TRACE] dag/walk: walking "root"
2017/12/28 11:41:29 [TRACE] vertex 'root.root': walking
2017/12/28 11:41:53 [INFO] backend/local: apply calling Refresh
2017/12/28 11:41:53 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:41:53 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:41:53 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:41:53 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042259220), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:41:53 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:41:53 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:41:53 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042305b90), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Attach provider request: []string{} http
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:41:53 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:41:53 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:41:53 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:53 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:41:53 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:41:53 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:41:53 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:41:53 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:41:53 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:41:53 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:41:53 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:41:53 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:41:53 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:41:53 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:41:53 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:41:53 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:41:53 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:41:53 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:41:53 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:41:53 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:41:53 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:41:53 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:41:53 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:41:53 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:41:53 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:41:53 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:41:53 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:53 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:41:53 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:41:53 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:41:53 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:41:53 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:41:53 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:41:53 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:41:53 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:41:53 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:41:53 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:41:53 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042259220), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:41:53 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:41:53 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:41:53 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:41:53 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:41:53 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:41:53 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:41:53 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:41:53 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:41:53 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:41:54 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:41:54 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:41:54 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:41:54 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:54 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:41:54 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:41:54 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:41:54 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:41:54 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:41:54 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(data.http.example.body)}
2017/12/28 11:41:54 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:54 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:41:54 [TRACE] dag/walk: walking "root"
2017/12/28 11:41:54 [TRACE] vertex 'root.root': walking
2017/12/28 11:41:54 [INFO] backend/local: apply calling Plan
2017/12/28 11:41:54 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:41:54 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:54 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:41:54 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:41:54 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042305b90), RawConfig:(*config.RawConfig)(0xc042305ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:54 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042258730), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Attach provider request: []string{} http
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:41:54 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:41:54 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:41:54 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:41:54 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:41:54 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:41:54 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:41:54 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:41:54 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:41:54 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:41:54 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:41:54 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:41:54 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:41:54 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:41:54 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:54 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:41:54 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:41:54 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:41:54 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:41:54 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:41:54 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:41:54 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:41:54 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:41:54 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:41:54 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042258730), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:41:54 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:41:54 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:41:54 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:41:54 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:41:54 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:41:54 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:41:54 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:41:54 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:41:54 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:41:54 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:41:54 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:41:54 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:54 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:41:54 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:41:54 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(data.http.example.body)}
2017/12/28 11:41:54 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:54 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:41:54 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:54 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:41:54 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:41:54 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:41:54 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:41:54 [TRACE] dag/walk: walking "root"
2017/12/28 11:41:54 [TRACE] vertex 'root.root': walking
2017/12/28 11:41:54 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:41:54 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:41:54 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:41:54 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:41:54 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:41:54 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:41:54 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:41:54 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:41:54 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:41:54 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:41:54 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:41:54 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:41:54 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:41:54 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:41:54 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:41:54 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:41:54 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(data.http.example.body)}
2017/12/28 11:41:54 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:41:54 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:41:54 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:41:54 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:41:54 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:41:54 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:41:54 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:41:54 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:41:54 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:41:54 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:41:54 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:41:54 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:41:54 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:41:54 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 11:41:54 [ERR] yamux: Failed to read stream data: read tcp 127.0.0.1:11385->127.0.0.1:10000: wsarecv: An existing connection was forcibly closed by the remote host.
2017-12-28T11:41:54.249-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017/12/28 11:41:54 [ERR] yamux: Failed to write header: write tcp 127.0.0.1:11385->127.0.0.1:10000: use of closed network connection
2017-12-28T11:41:54.260-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:44:12 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:44:12 [INFO] Go runtime version: go1.9
2017/12/28 11:44:12 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:44:12 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:44:12 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:44:12 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:44:12 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:44:12 [INFO] command: empty terraform config, returning nil
2017/12/28 11:44:12 [DEBUG] command: no data state file found for backend config
2017/12/28 11:44:12 [DEBUG] New state was assigned lineage "346fe886-2bd1-45f9-a1cf-1eee6c225a8f"
2017/12/28 11:44:12 [INFO] command: backend initialized: <nil>
2017/12/28 11:44:12 [DEBUG] checking for provider in "."
2017/12/28 11:44:12 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:44:12 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:44:12 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:44:12 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:44:12 [DEBUG] found valid plugin: "http"
2017/12/28 11:44:12 [DEBUG] found valid plugin: "external"
2017/12/28 11:44:12 [DEBUG] checking for provisioner in "."
2017/12/28 11:44:12 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:44:12 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:44:12 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:44:12 [INFO] backend/local: starting Apply operation
2017/12/28 11:44:12 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:44:12 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:44:12 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:44:12 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:12 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:44:12 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:44:12 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042307b90), RawConfig:(*config.RawConfig)(0xc042307ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:12 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422437c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Attach provider request: []string{} http
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:44:12 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:44:12 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:44:12 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:44:12.636-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:44:12.708-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:44:12.732-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:44:12 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:44:12 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:44:12 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:44:12 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:44:12 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:44:12 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:44:12 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:44:12 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:44:12 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:44:12 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:44:12 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:44:12 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:44:12 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:12 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:44:12 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:44:12 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:44:12 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:44:12 [TRACE] dag/walk: walking "root"
2017/12/28 11:44:12 [TRACE] vertex 'root.root': walking
2017/12/28 11:44:12 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:44:12 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:12 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:44:12 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:44:12 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042307b90), RawConfig:(*config.RawConfig)(0xc042307ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:12 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422437c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Attach provider request: []string{} http
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:12 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:44:12 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:44:12 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:44:12 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:44:12 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:44:12 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:44:12 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:44:12 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:44:12 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:44:12 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:44:12 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:44:12 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422437c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:44:12 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:44:12 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:44:12 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:44:12 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:44:12 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:44:12 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:44:12 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:44:12 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:44:12 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:44:12 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:44:12 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:44:12 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:44:12 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:44:12 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:44:12 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:44:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:12 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:44:12 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:12 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:44:12 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:44:12 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:44:12 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:44:12 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:44:12 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:44:12 [TRACE] dag/walk: walking "root"
2017/12/28 11:44:12 [TRACE] vertex 'root.root': walking
2017/12/28 11:44:36 [INFO] backend/local: apply calling Refresh
2017/12/28 11:44:36 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:44:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:44:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:44:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042230d20), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:44:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:44:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:44:36 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042307b90), RawConfig:(*config.RawConfig)(0xc042307ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Attach provider request: []string{} http
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:44:36 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:44:36 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:44:36 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:36 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:44:36 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:44:36 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:44:36 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:44:36 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:44:36 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:44:36 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:44:36 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:44:36 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:44:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:44:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:44:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:44:36 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:44:36 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:44:36 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:44:36 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:44:36 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:44:36 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:44:36 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:44:36 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:44:36 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:44:36 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:44:36 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:44:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:44:36 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:44:36 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:44:36 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:44:36 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:44:36 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:44:36 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:44:36 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:44:36 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:44:36 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:44:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042230d20), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:44:36 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:44:36 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:44:36 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:44:36 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:44:36 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:44:36 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:44:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:44:36 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:44:36 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:44:36 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:44:36 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:44:36 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:44:36 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:44:36 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:44:36 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:44:36 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:44:36 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:44:36 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:44:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:36 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:44:36 [TRACE] dag/walk: walking "root"
2017/12/28 11:44:36 [TRACE] vertex 'root.root': walking
2017/12/28 11:44:36 [INFO] backend/local: apply calling Plan
2017/12/28 11:44:36 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:44:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:44:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:44:36 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc042307b90), RawConfig:(*config.RawConfig)(0xc042307ab0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:44:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042068320), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Attach provider request: []string{} http
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:44:37 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:44:37 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:44:37 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:44:37 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:44:37 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:44:37 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:44:37 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:44:37 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:44:37 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:44:37 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:44:37 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:44:37 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:44:37 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:44:37 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:44:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:44:37 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:44:37 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:44:37 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:44:37 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:44:37 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:44:37 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:44:37 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:44:37 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:44:37 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:44:37 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042068320), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:44:37 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:44:37 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:44:37 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:44:37 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:44:37 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:44:37 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:44:37 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:44:37 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:44:37 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:44:37 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:44:37 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:44:37 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:44:37 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:44:37 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:44:37 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:44:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:37 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:44:37 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:37 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:44:37 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:44:37 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:44:37 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:44:37 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:44:37 [TRACE] dag/walk: walking "root"
2017/12/28 11:44:37 [TRACE] vertex 'root.root': walking
2017/12/28 11:44:37 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:44:37 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:44:37 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:44:37 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:44:37 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:44:37 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:44:37 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:44:37 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:44:37 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:44:37 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:44:37 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:44:37 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:44:37 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:44:37 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:44:37 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:44:37 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:44:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:44:37 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:44:37 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:44:37 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:44:37 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:44:37 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:44:37 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:44:37 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:44:37 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:44:37 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:44:37 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:44:37 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:44:37 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:44:37 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:44:37 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:44:37.137-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 11:45:21 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 11:45:21 [INFO] Go runtime version: go1.9
2017/12/28 11:45:21 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 11:45:21 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 11:45:21 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 11:45:21 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 11:45:21 [INFO] CLI command args: []string{"apply"}
2017/12/28 11:45:21 [INFO] command: empty terraform config, returning nil
2017/12/28 11:45:21 [DEBUG] command: no data state file found for backend config
2017/12/28 11:45:21 [DEBUG] New state was assigned lineage "7d47861e-0c9d-480d-a3d9-a064475ade3b"
2017/12/28 11:45:21 [INFO] command: backend initialized: <nil>
2017/12/28 11:45:21 [DEBUG] checking for provider in "."
2017/12/28 11:45:21 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:45:21 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:45:21 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 11:45:21 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 11:45:21 [DEBUG] found valid plugin: "external"
2017/12/28 11:45:21 [DEBUG] found valid plugin: "http"
2017/12/28 11:45:21 [DEBUG] checking for provisioner in "."
2017/12/28 11:45:21 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 11:45:21 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 11:45:21 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 11:45:21 [INFO] backend/local: starting Apply operation
2017/12/28 11:45:21 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:45:21 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:45:21 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 11:45:21 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeAbstractResource
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:21 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:45:21 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:45:21 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422ea8c0), RawConfig:(*config.RawConfig)(0xc0422ea7e0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:21 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423345f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Attach provider request: []string{} http
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [DEBUG] Starting graph walk: walkInput
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:45:21 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:45:21 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:45:21 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:45:21 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:45:21 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T11:45:21.515-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T11:45:21.590-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T11:45:21.617-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 11:45:21 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 11:45:21 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:45:21 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:45:21 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:45:21 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:45:21 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:45:21 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:45:21 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:45:21 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:45:21 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:45:21 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:45:21 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 11:45:21 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(split(",",data.http.example.body))}
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 11:45:21 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:21 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:45:21 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:45:21 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:45:21 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:45:21 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:45:21 [TRACE] dag/walk: walking "root"
2017/12/28 11:45:21 [TRACE] vertex 'root.root': walking
2017/12/28 11:45:21 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 11:45:21 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeValidatableResource
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:21 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:45:21 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:45:21 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422ea8c0), RawConfig:(*config.RawConfig)(0xc0422ea7e0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:21 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423345f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Attach provider request: []string{} http
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeValidatableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeValidatableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:21 [DEBUG] Starting graph walk: walkValidate
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:45:21 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:45:21 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:45:21 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:45:21 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:45:21 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:45:21 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:45:21 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 11:45:21 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:45:21 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:45:21 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:45:21 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:45:21 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:45:21 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:45:21 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423345f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:45:21 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:45:21 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeValidatableResourceInstance
2017/12/28 11:45:21 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:45:21 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:45:21 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:45:21 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:45:21 [TRACE] [walkValidate] Entering eval tree: data.http.example
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 11:45:21 [TRACE] [walkValidate] Exiting eval tree: data.http.example
2017/12/28 11:45:21 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:45:21 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:45:21 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:45:21 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:45:21 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:45:21 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:45:21 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:45:21 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 11:45:21 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:45:21 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:21 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 11:45:21 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:21 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:45:21 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:45:21 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:45:21 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:45:21 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:45:21 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:45:21 [TRACE] dag/walk: walking "root"
2017/12/28 11:45:21 [TRACE] vertex 'root.root': walking
2017/12/28 11:45:44 [INFO] backend/local: apply calling Refresh
2017/12/28 11:45:44 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 11:45:44 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 11:45:44 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:45:44 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042448460), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:45:44 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:45:44 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:45:44 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422ea8c0), RawConfig:(*config.RawConfig)(0xc0422ea7e0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Attach provider request: []string{} http
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:45:44 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:45:44 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:45:44 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodeRefreshableDataResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:44 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 11:45:44 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:45:44 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:45:44 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:45:44 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:45:44 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:45:44 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:45:44 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:45:44 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 11:45:44 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:45:44 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:45:44 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:45:44 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:45:44 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:45:44 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:45:44 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:45:44 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:45:44 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:45:44 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:45:44 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:45:44 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:45:44 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:45:44 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:45:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:45:44 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 11:45:44 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:45:44 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:45:44 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:45:44 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:45:44 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:45:44 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:45:44 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:45:44 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:45:44 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042448460), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:45:44 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:45:44 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 11:45:44 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:45:44 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:45:44 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:45:44 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:45:44 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:45:44 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 11:45:44 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 11:45:47 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 11:45:47 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:45:47 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:45:47 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:45:47 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:45:47 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:45:47 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:45:47 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 11:45:47 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:45:47 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:45:47 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(split(",",data.http.example.body))}
2017/12/28 11:45:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:47 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 11:45:47 [TRACE] dag/walk: walking "root"
2017/12/28 11:45:47 [TRACE] vertex 'root.root': walking
2017/12/28 11:45:47 [INFO] backend/local: apply calling Plan
2017/12/28 11:45:47 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 11:45:47 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ConfigTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.LocalTransformer:

data.http.example - *terraform.NodePlannableResource
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.OutputTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:45:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 11:45:47 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"http", RawCount:(*config.RawConfig)(0xc0422ea8c0), RawConfig:(*config.RawConfig)(0xc0422ea7e0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:47 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225a500), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.http.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Attach provider request: []string{} http
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [DEBUG] ReferenceTransformer: "output.response" references: [data.http.example]
2017/12/28 11:45:47 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:45:47 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 11:45:47 [DEBUG] ReferenceTransformer: "data.http.example" references: [var.projectcode]
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.http.example - *terraform.NodePlannableResource
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.http.example - *terraform.NodePlannableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [DEBUG] Starting graph walk: walkPlan
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "output.response" waiting on "data.http.example"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "data.http.example" waiting on "var.projectcode"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 11:45:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:45:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 11:45:47 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 11:45:47 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 11:45:47 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 11:45:47 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:45:47 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:45:47 [TRACE] dag/walk: walking "provider.http"
2017/12/28 11:45:47 [TRACE] vertex 'root.provider.http': walking
2017/12/28 11:45:47 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 11:45:47 [TRACE] [walkPlan] Entering eval tree: provider.http
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 11:45:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 11:45:47 [TRACE] [walkPlan] Exiting eval tree: provider.http
2017/12/28 11:45:47 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:45:47 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:45:47 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:45:47 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 11:45:47 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:45:47 [TRACE] vertex 'root.data.http.example': expanding/walking dynamic subgraph
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:45:47 [TRACE] OrphanResourceCount: Starting...
2017/12/28 11:45:47 [TRACE] OrphanResourceCount: Checking: data.http.example
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:45:47 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04225a500), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:45:47 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.RootTransformer:

data.http.example - *terraform.NodePlannableResourceInstance
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 11:45:47 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 11:45:47 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 11:45:47 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 11:45:47 [TRACE] [walkPlan] Entering eval tree: data.http.example
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 11:45:47 [TRACE] [walkPlan] Exiting eval tree: data.http.example
2017/12/28 11:45:47 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 11:45:47 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 11:45:47 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:45:47 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:45:47 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 11:45:47 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:45:47 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:45:47 [TRACE] [walkPlan] Entering eval tree: provider.http (close)
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 11:45:47 [TRACE] [walkPlan] Exiting eval tree: provider.http (close)
2017/12/28 11:45:47 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(split(",",data.http.example.body))}
2017/12/28 11:45:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:47 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 11:45:47 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:45:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:45:47 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:45:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:45:47 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:45:47 [TRACE] dag/walk: walking "root"
2017/12/28 11:45:47 [TRACE] vertex 'root.root': walking
2017/12/28 11:45:47 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 11:45:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 11:45:47 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 11:45:47 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 11:45:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 11:45:47 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
2017/12/28 11:45:47 [DEBUG] Starting graph walk: walkApply
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 11:45:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 11:45:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 11:45:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 11:45:47 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 11:45:47 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 11:45:47 [TRACE] dag/walk: walking "output.response"
2017/12/28 11:45:47 [TRACE] vertex 'root.output.response': walking
2017/12/28 11:45:47 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 11:45:47 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 11:45:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 11:45:47 [WARN] Output interpolation "response" failed: map: requires an even number of arguments, got 1 in:

${map(split(",",data.http.example.body))}
2017/12/28 11:45:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 11:45:47 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 11:45:47 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 11:45:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 11:45:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 11:45:47 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:45:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 11:45:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 11:45:47 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 11:45:47 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:45:47 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:45:47 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:45:47 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 11:45:47 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T11:45:47.384-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017/12/28 12:01:49 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 12:01:49 [INFO] Go runtime version: go1.9
2017/12/28 12:01:49 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 12:01:49 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 12:01:49 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 12:01:49 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 12:01:49 [INFO] CLI command args: []string{"apply"}
2017/12/28 12:01:49 [INFO] command: empty terraform config, returning nil
2017/12/28 12:01:49 [DEBUG] command: no data state file found for backend config
2017/12/28 12:01:49 [DEBUG] New state was assigned lineage "3032bd2a-12e1-44f7-9efd-411e2640b32a"
2017/12/28 12:01:49 [INFO] command: backend initialized: <nil>
2017/12/28 12:01:49 [DEBUG] checking for provider in "."
2017/12/28 12:01:49 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 12:01:49 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 12:01:49 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 12:01:49 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 12:01:49 [DEBUG] found valid plugin: "external"
2017/12/28 12:01:49 [DEBUG] found valid plugin: "http"
2017/12/28 12:01:49 [DEBUG] checking for provisioner in "."
2017/12/28 12:01:49 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 12:01:49 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 12:01:49 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 12:01:49 [INFO] backend/local: starting Apply operation
2017/12/28 12:01:49 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:01:49 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:01:49 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 12:01:49 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeAbstractResource
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:01:49 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:01:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 12:01:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:01:49 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc042303e30), RawConfig:(*config.RawConfig)(0xc042303ce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:01:49 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042231950), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:01:49 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Attach provider request: []string{} http
2017/12/28 12:01:49 [TRACE] Attach provider request: []string{} external
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [DEBUG] Starting graph walk: walkInput
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.http.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:01:49 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "provider.http"
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.http': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:01:49 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 12:01:49 [TRACE] [walkInput] Entering eval tree: provider.external
2017/12/28 12:01:49 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T12:01:49.731-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe]
2017-12-28T12:01:49.790-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe
2017-12-28T12:01:49.806-0500 [DEBUG] plugin.terraform-provider-external_v1.0.0_x4.exe: 2017/12/28 12:01:49 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInputProvider
2017-12-28T12:01:49.810-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T12:01:49.861-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T12:01:49.886-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 12:01:49 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10001
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] [walkInput] Exiting eval tree: provider.external
2017/12/28 12:01:49 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:01:49 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:01:49 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:01:49 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:01:49 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:01:49 [TRACE] [walkInput] Entering eval tree: provider.external (close)
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:01:49 [TRACE] [walkInput] Exiting eval tree: provider.external (close)
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 12:01:49 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 12:01:49 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:01:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 12:01:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:01:49 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 12:01:49 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:01:49 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 12:01:49 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:01:49 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 12:01:49 [TRACE] dag/walk: walking "root"
2017/12/28 12:01:49 [TRACE] vertex 'root.root': walking
2017/12/28 12:01:49 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 12:01:49 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeValidatableResource
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:01:49 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:01:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:01:49 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc042303e30), RawConfig:(*config.RawConfig)(0xc042303ce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:01:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:01:49 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:01:49 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042231950), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Attach provider request: []string{} http
2017/12/28 12:01:49 [TRACE] Attach provider request: []string{} external
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:01:49 [DEBUG] Starting graph walk: walkValidate
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.http.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 12:01:49 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 12:01:49 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "provider.http"
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.http': walking
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:01:49 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:01:49 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:01:49 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:01:49 [TRACE] [walkValidate] Entering eval tree: provider.external
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 12:01:49 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] [walkValidate] Exiting eval tree: provider.external
2017/12/28 12:01:49 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:01:49 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:01:49 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:01:49 [TRACE] [walkValidate] Entering eval tree: data.external.example
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 12:01:49 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 12:01:49 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 12:01:49 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:01:49 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:01:49 [TRACE] [walkValidate] Exiting eval tree: data.external.example
2017/12/28 12:01:49 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:01:49 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:01:49 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:01:49 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:01:49 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:01:49 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:01:49 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:01:49 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:01:49 [TRACE] [walkValidate] Entering eval tree: data.external.example
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 12:01:49 [TRACE] [walkValidate] Exiting eval tree: data.external.example
2017/12/28 12:01:49 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:01:49 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:01:49 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:01:49 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:01:49 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:01:49 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:01:49 [TRACE] [walkValidate] Entering eval tree: provider.external (close)
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:01:49 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:01:49 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 12:01:49 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:01:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:01:49 [TRACE] [walkValidate] Exiting eval tree: provider.external (close)
2017/12/28 12:01:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:01:49 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:01:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:01:49 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 12:01:49 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:01:49 [TRACE] dag/walk: walking "root"
2017/12/28 12:01:49 [TRACE] vertex 'root.root': walking
2017/12/28 12:02:13 [INFO] backend/local: apply calling Refresh
2017/12/28 12:02:13 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 12:02:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 12:02:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
2017/12/28 12:02:13 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:02:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042536320), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
2017/12/28 12:02:13 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:02:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:02:13 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc042303e30), RawConfig:(*config.RawConfig)(0xc042303ce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:02:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Attach provider request: []string{} http
2017/12/28 12:02:13 [TRACE] Attach provider request: []string{} external
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:02:13 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:02:13 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 12:02:13 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:02:13 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:02:13 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 12:02:13 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableManagedResourceInstance
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:02:13 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 12:02:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:02:13 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 12:02:13 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:02:13 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:02:13 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 12:02:13 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:02:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:02:13 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:02:13 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:02:13 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:02:13 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:02:13 [TRACE] dag/walk: walking "provider.http"
2017/12/28 12:02:13 [TRACE] vertex 'root.provider.http': walking
2017/12/28 12:02:13 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:02:13 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:02:13 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 12:02:13 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:02:13 [TRACE] [walkRefresh] Entering eval tree: provider.external
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:02:13 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:02:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:02:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:02:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:02:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:02:13 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 12:02:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 12:02:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 12:02:13 [TRACE] [walkRefresh] Exiting eval tree: provider.external
2017/12/28 12:02:13 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 12:02:13 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:02:13 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:02:13 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:02:13 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 12:02:13 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 12:02:13 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:02:13 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 12:02:13 [TRACE] [walkRefresh] Entering eval tree: data.external.example
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:02:13 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 12:02:13 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:02:13 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:02:13 [TRACE] [walkRefresh] Exiting eval tree: data.external.example
2017/12/28 12:02:13 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:02:13 [TRACE] OrphanResourceCount: Starting...
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:02:13 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:02:13 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:02:13 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:02:13 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:02:13 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:02:13 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:02:13 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:02:13 [TRACE] [walkRefresh] Entering eval tree: data.external.example
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:02:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 12:02:13 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 12:02:17 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.external.example: command "powershell.exe" produced invalid JSON: unexpected end of JSON input
2017/12/28 12:02:17 [ERROR] root: eval: *terraform.EvalSequence, err: data.external.example: command "powershell.exe" produced invalid JSON: unexpected end of JSON input
2017/12/28 12:02:17 [TRACE] [walkRefresh] Exiting eval tree: data.external.example
2017/12/28 12:02:17 [TRACE] dag/walk: upstream errored, not walking "output.response"
2017/12/28 12:02:17 [TRACE] dag/walk: upstream errored, not walking "provider.external (close)"
2017/12/28 12:02:17 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/28 12:02:17 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T12:02:17.355-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T12:02:17.355-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe
2017/12/28 12:03:13 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 12:03:13 [INFO] Go runtime version: go1.9
2017/12/28 12:03:13 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 12:03:13 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 12:03:13 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 12:03:13 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 12:03:13 [INFO] CLI command args: []string{"apply"}
2017/12/28 12:03:13 [INFO] command: empty terraform config, returning nil
2017/12/28 12:03:13 [DEBUG] command: no data state file found for backend config
2017/12/28 12:03:13 [DEBUG] New state was assigned lineage "db8b6474-7bec-4250-8322-b28a9da17443"
2017/12/28 12:03:13 [INFO] command: backend initialized: <nil>
2017/12/28 12:03:13 [DEBUG] checking for provider in "."
2017/12/28 12:03:13 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 12:03:13 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 12:03:13 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 12:03:13 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 12:03:13 [DEBUG] found valid plugin: "external"
2017/12/28 12:03:13 [DEBUG] found valid plugin: "http"
2017/12/28 12:03:13 [DEBUG] checking for provisioner in "."
2017/12/28 12:03:13 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 12:03:13 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 12:03:13 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 12:03:13 [INFO] backend/local: starting Apply operation
2017/12/28 12:03:13 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:03:13 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:03:13 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 12:03:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeAbstractResource
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:13 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:03:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:03:13 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc0422eeb60), RawConfig:(*config.RawConfig)(0xc0422eea10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:03:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334730), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:03:13 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Attach provider request: []string{} http
2017/12/28 12:03:13 [TRACE] Attach provider request: []string{} external
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [DEBUG] Starting graph walk: walkInput
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.http.example"
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: walking "provider.http"
2017/12/28 12:03:13 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.http': walking
2017/12/28 12:03:13 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:03:13 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:03:13 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 12:03:13 [TRACE] [walkInput] Entering eval tree: provider.http
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:03:13 [TRACE] [walkInput] Entering eval tree: provider.external
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T12:03:13.306-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe]
2017-12-28T12:03:13.361-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T12:03:13.384-0500 [DEBUG] plugin.terraform-provider-http_v1.0.0_x4.exe: 2017/12/28 12:03:13 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInputProvider
2017-12-28T12:03:13.390-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe]
2017-12-28T12:03:13.461-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe
2017-12-28T12:03:13.480-0500 [DEBUG] plugin.terraform-provider-external_v1.0.0_x4.exe: 2017/12/28 12:03:13 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10001
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] [walkInput] Exiting eval tree: provider.http
2017/12/28 12:03:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 12:03:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 12:03:13 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 12:03:13 [TRACE] [walkInput] Entering eval tree: provider.http (close)
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:03:13 [TRACE] [walkInput] Exiting eval tree: provider.http (close)
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] [walkInput] Exiting eval tree: provider.external
2017/12/28 12:03:13 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:03:13 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:03:13 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:03:13 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:03:13 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:03:13 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:03:13 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:03:13 [TRACE] [walkInput] Entering eval tree: provider.external (close)
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:03:13 [TRACE] [walkInput] Exiting eval tree: provider.external (close)
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 12:03:13 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:13 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:03:13 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:03:13 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 12:03:13 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:03:13 [TRACE] dag/walk: walking "root"
2017/12/28 12:03:13 [TRACE] vertex 'root.root': walking
2017/12/28 12:03:13 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 12:03:13 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeValidatableResource
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:13 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:03:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 12:03:13 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:03:13 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc0422eeb60), RawConfig:(*config.RawConfig)(0xc0422eea10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:13 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:03:13 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334730), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
data.http.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Attach provider request: []string{} external
2017/12/28 12:03:13 [TRACE] Attach provider request: []string{} http
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  provider.http - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeAbstractResource
  provider.http - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.http.example - *terraform.NodeAbstractResource
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:13 [DEBUG] Starting graph walk: walkValidate
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.http.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:03:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:03:13 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:03:13 [TRACE] dag/walk: walking "provider.http"
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.http': walking
2017/12/28 12:03:13 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:03:13 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:03:13 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:03:13 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:03:13 [TRACE] [walkValidate] Entering eval tree: provider.external
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 12:03:13 [TRACE] [walkValidate] Entering eval tree: provider.http
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] [walkValidate] Exiting eval tree: provider.external
2017/12/28 12:03:13 [TRACE] [walkValidate] Exiting eval tree: provider.http
2017/12/28 12:03:13 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 12:03:13 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:03:13 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:03:13 [TRACE] [walkValidate] Entering eval tree: data.external.example
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:13 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 12:03:13 [TRACE] [walkValidate] Entering eval tree: provider.http (close)
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 12:03:13 [TRACE] [walkValidate] Exiting eval tree: provider.http (close)
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:03:13 [TRACE] [walkValidate] Exiting eval tree: data.external.example
2017/12/28 12:03:13 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:03:13 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:03:13 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:03:13 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:03:13 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:03:13 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:03:13 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:03:13 [TRACE] [walkValidate] Entering eval tree: data.external.example
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 12:03:13 [TRACE] [walkValidate] Exiting eval tree: data.external.example
2017/12/28 12:03:13 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:03:13 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:03:13 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:03:13 [TRACE] [walkValidate] Entering eval tree: provider.external (close)
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:03:13 [TRACE] [walkValidate] Exiting eval tree: provider.external (close)
2017/12/28 12:03:13 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:03:13 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:03:13 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:13 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 12:03:13 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:13 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:03:13 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:03:13 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:03:13 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:03:13 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.http.example.0", replace "data.http.example"
2017/12/28 12:03:13 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:03:13 [TRACE] dag/walk: walking "root"
2017/12/28 12:03:13 [TRACE] vertex 'root.root': walking
2017/12/28 12:03:36 [INFO] backend/local: apply calling Refresh
2017/12/28 12:03:36 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 12:03:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 12:03:36 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
2017/12/28 12:03:36 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:03:36 [DEBUG] Attaching resource state to "data.http.example": &terraform.ResourceState{Type:"http", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224c4b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
2017/12/28 12:03:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:03:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.http.example
2017/12/28 12:03:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:03:36 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc0422eeb60), RawConfig:(*config.RawConfig)(0xc0422eea10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Attach provider request: []string{} external
2017/12/28 12:03:36 [TRACE] Attach provider request: []string{} http
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:03:36 [DEBUG] ReferenceTransformer: "data.http.example" references: []
2017/12/28 12:03:36 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:03:36 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:03:36 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:03:36 [DEBUG] ReferenceTransformer: "provider.http" references: []
2017/12/28 12:03:36 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
data.http.example - *terraform.NodeRefreshableManagedResourceInstance
  provider.http - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
provider.http - *terraform.NodeApplyableProvider
provider.http (close) - *terraform.graphNodeCloseProvider
  data.http.example - *terraform.NodeRefreshableManagedResourceInstance
root - terraform.graphNodeRoot
  output.response - *terraform.NodeApplyableOutput
  provider.external (close) - *terraform.graphNodeCloseProvider
  provider.http (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:36 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "provider.http (close)"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "provider.http"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "data.http.example"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "provider.http (close)" waiting on "data.http.example"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.http (close)"
2017/12/28 12:03:36 [TRACE] dag/walk: added edge: "data.http.example" waiting on "provider.http"
2017/12/28 12:03:36 [TRACE] dag/walk: dependencies changed for "provider.http (close)", sending new deps
2017/12/28 12:03:36 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:03:36 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:03:36 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:03:36 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:03:36 [TRACE] dag/walk: dependencies changed for "data.http.example", sending new deps
2017/12/28 12:03:36 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:03:36 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:03:36 [TRACE] dag/walk: walking "provider.http"
2017/12/28 12:03:36 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:03:36 [TRACE] vertex 'root.provider.http': walking
2017/12/28 12:03:36 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:03:36 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:03:36 [TRACE] vertex 'root.provider.http': evaluating
2017/12/28 12:03:36 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:03:36 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:03:36 [TRACE] [walkRefresh] Entering eval tree: provider.external
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:03:36 [TRACE] [walkRefresh] Entering eval tree: provider.http
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:03:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:03:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:36 [TRACE] [walkRefresh] Exiting eval tree: provider.external
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:36 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:03:36 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:03:36 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:03:36 [TRACE] [walkRefresh] Entering eval tree: data.external.example
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:03:36 [TRACE] [walkRefresh] Exiting eval tree: data.external.example
2017/12/28 12:03:36 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:03:36 [TRACE] OrphanResourceCount: Starting...
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:03:36 [DEBUG] Resource state not found for "data.external.example": data.external.example
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:03:36 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:03:36 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:03:36 [TRACE] [walkRefresh] Exiting eval tree: provider.http
2017/12/28 12:03:36 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:03:36 [TRACE] dag/walk: walking "data.http.example"
2017/12/28 12:03:36 [TRACE] vertex 'root.data.http.example': walking
2017/12/28 12:03:36 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:03:36 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:03:36 [TRACE] vertex 'root.data.http.example': evaluating
2017/12/28 12:03:36 [TRACE] [walkRefresh] Entering eval tree: data.http.example
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:03:36 [TRACE] [walkRefresh] Exiting eval tree: data.http.example
2017/12/28 12:03:36 [TRACE] dag/walk: walking "provider.http (close)"
2017/12/28 12:03:36 [TRACE] vertex 'root.provider.http (close)': walking
2017/12/28 12:03:36 [TRACE] vertex 'root.provider.http (close)': evaluating
2017/12/28 12:03:36 [TRACE] [walkRefresh] Entering eval tree: provider.http (close)
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:03:36 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:03:36 [TRACE] [walkRefresh] Exiting eval tree: provider.http (close)
2017/12/28 12:03:36 [TRACE] [walkRefresh] Entering eval tree: data.external.example
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:03:36 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 12:03:36 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 12:03:38 [TRACE] [walkRefresh] Exiting eval tree: data.external.example
2017/12/28 12:03:38 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:03:38 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:03:38 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:03:38 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:03:38 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:03:38 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:03:38 [TRACE] [walkRefresh] Entering eval tree: provider.external (close)
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:03:38 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:03:38 [DEBUG] Interpolating computed map element attribute result (4)
2017/12/28 12:03:38 [TRACE] [walkRefresh] Exiting eval tree: provider.external (close)
2017/12/28 12:03:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:38 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 12:03:38 [TRACE] dag/walk: walking "root"
2017/12/28 12:03:38 [TRACE] vertex 'root.root': walking
2017/12/28 12:03:38 [INFO] backend/local: apply calling Plan
2017/12/28 12:03:38 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 12:03:38 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodePlannableResource
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodePlannableResource
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:38 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:03:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:03:38 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc0422eeb60), RawConfig:(*config.RawConfig)(0xc0422eea10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:38 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334be0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Attach provider request: []string{} external
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [DEBUG] Starting graph walk: walkPlan
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:38 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:03:38 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:03:38 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:03:38 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:03:38 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:03:38 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:03:38 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:03:38 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:03:38 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:03:38 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:03:38 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:03:38 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:03:38 [TRACE] [walkPlan] Entering eval tree: provider.external
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:03:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:03:38 [TRACE] [walkPlan] Exiting eval tree: provider.external
2017/12/28 12:03:38 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:03:38 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:03:38 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:03:38 [TRACE] [walkPlan] Entering eval tree: data.external.example
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:03:38 [TRACE] [walkPlan] Exiting eval tree: data.external.example
2017/12/28 12:03:38 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:03:38 [TRACE] OrphanResourceCount: Starting...
2017/12/28 12:03:38 [TRACE] OrphanResourceCount: Checking: data.external.example
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:03:38 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334be0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:03:38 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:03:38 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:03:38 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:03:38 [TRACE] [walkPlan] Entering eval tree: data.external.example
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 12:03:38 [TRACE] [walkPlan] Exiting eval tree: data.external.example
2017/12/28 12:03:38 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:03:38 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:03:38 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:03:38 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:03:38 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:03:38 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:03:38 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:38 [TRACE] [walkPlan] Entering eval tree: provider.external (close)
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:03:38 [DEBUG] Interpolating computed map element attribute result (4)
2017/12/28 12:03:38 [TRACE] [walkPlan] Exiting eval tree: provider.external (close)
2017/12/28 12:03:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:38 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 12:03:38 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:38 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:03:38 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:03:38 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:03:38 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:03:38 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:03:38 [TRACE] dag/walk: walking "root"
2017/12/28 12:03:38 [TRACE] vertex 'root.root': walking
2017/12/28 12:03:38 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 12:03:38 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 12:03:38 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 12:03:38 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 12:03:38 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.OutputTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:03:38 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:03:38 [DEBUG] Starting graph walk: walkApply
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:03:38 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.url"
2017/12/28 12:03:38 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:03:38 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:03:38 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:03:38 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:03:38 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:03:38 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:03:38 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 12:03:38 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:03:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:03:38 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:03:38 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:03:38 [DEBUG] Interpolating computed map element attribute result (4)
2017/12/28 12:03:38 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:03:38 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 12:03:38 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:03:38 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:03:38 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:03:38 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:03:38 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:03:38 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:03:38 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:03:38 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:03:38 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:03:38 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:03:38 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:03:38 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T12:03:38.794-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-http_v1.0.0_x4.exe
2017-12-28T12:03:38.795-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe
2017/12/28 12:06:25 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 12:06:25 [INFO] Go runtime version: go1.9
2017/12/28 12:06:25 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 12:06:25 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 12:06:25 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 12:06:25 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 12:06:25 [INFO] CLI command args: []string{"apply"}
2017/12/28 12:06:25 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 12:06:47 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 12:06:47 [INFO] Go runtime version: go1.9
2017/12/28 12:06:47 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 12:06:47 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 12:06:47 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 12:06:47 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 12:06:47 [INFO] CLI command args: []string{"apply"}
2017/12/28 12:06:47 [INFO] command: empty terraform config, returning nil
2017/12/28 12:06:47 [DEBUG] command: no data state file found for backend config
2017/12/28 12:06:47 [DEBUG] New state was assigned lineage "af5ec810-8e5e-47dd-8945-272626776144"
2017/12/28 12:06:47 [INFO] command: backend initialized: <nil>
2017/12/28 12:06:47 [DEBUG] checking for provider in "."
2017/12/28 12:06:47 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 12:06:47 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 12:06:47 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 12:06:47 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 12:06:47 [DEBUG] found valid plugin: "http"
2017/12/28 12:06:47 [DEBUG] found valid plugin: "external"
2017/12/28 12:06:47 [DEBUG] checking for provisioner in "."
2017/12/28 12:06:47 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 12:06:47 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 12:06:47 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 12:06:47 [INFO] backend/local: starting Apply operation
2017/12/28 12:06:47 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:06:47 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:06:47 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 12:06:47 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeAbstractResource
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeAbstractResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeAbstractResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:06:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:06:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:06:47 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc0422ffe30), RawConfig:(*config.RawConfig)(0xc0422ffce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:06:47 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224bc20), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeAbstractResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeAbstractResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Attach provider request: []string{} external
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "output.Subnets" references: [data.external.example]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "output.VPCIPAddressRange" references: [data.external.example]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "output.Environment" references: [data.external.example]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [DEBUG] Starting graph walk: walkInput
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "output.VPCIPAddressRange"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "output.Subnets"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "output.Environment"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Environment"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Subnets"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.VPCIPAddressRange"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "output.Subnets" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "output.Environment" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "output.VPCIPAddressRange" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "output.Subnets", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "output.Environment", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "output.VPCIPAddressRange", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:06:47 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:06:47 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:06:47 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:06:47 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:06:47 [TRACE] [walkInput] Entering eval tree: provider.external
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T12:06:47.299-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe]
2017-12-28T12:06:47.345-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe
2017-12-28T12:06:47.361-0500 [DEBUG] plugin.terraform-provider-external_v1.0.0_x4.exe: 2017/12/28 12:06:47 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkInput] Exiting eval tree: provider.external
2017/12/28 12:06:47 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:06:47 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:06:47 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:06:47 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:06:47 [TRACE] [walkInput] Entering eval tree: output.response
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:06:47 [DEBUG] Interpolating computed map element attribute result (4)
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkInput] Exiting eval tree: output.response
2017/12/28 12:06:47 [TRACE] dag/walk: walking "output.VPCIPAddressRange"
2017/12/28 12:06:47 [TRACE] vertex 'root.output.VPCIPAddressRange': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.output.VPCIPAddressRange': evaluating
2017/12/28 12:06:47 [TRACE] [walkInput] Entering eval tree: output.VPCIPAddressRange
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkInput] Exiting eval tree: output.VPCIPAddressRange
2017/12/28 12:06:47 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:06:47 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:06:47 [TRACE] [walkInput] Entering eval tree: provider.external (close)
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:06:47 [TRACE] [walkInput] Exiting eval tree: provider.external (close)
2017/12/28 12:06:47 [TRACE] dag/walk: walking "output.Environment"
2017/12/28 12:06:47 [TRACE] vertex 'root.output.Environment': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.output.Environment': evaluating
2017/12/28 12:06:47 [TRACE] [walkInput] Entering eval tree: output.Environment
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkInput] Exiting eval tree: output.Environment
2017/12/28 12:06:47 [TRACE] dag/walk: walking "output.Subnets"
2017/12/28 12:06:47 [TRACE] vertex 'root.output.Subnets': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.output.Subnets': evaluating
2017/12/28 12:06:47 [TRACE] [walkInput] Entering eval tree: output.Subnets
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkInput] Exiting eval tree: output.Subnets
2017/12/28 12:06:47 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:06:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:06:47 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:06:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:06:47 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:06:47 [TRACE] dag/walk: walking "root"
2017/12/28 12:06:47 [TRACE] vertex 'root.root': walking
2017/12/28 12:06:47 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 12:06:47 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeValidatableResource
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeValidatableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeValidatableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:06:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:06:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:06:47 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc0422ffe30), RawConfig:(*config.RawConfig)(0xc0422ffce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:06:47 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224bc20), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeValidatableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeValidatableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Attach provider request: []string{} external
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "output.Environment" references: [data.external.example]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "output.Subnets" references: [data.external.example]
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "output.VPCIPAddressRange" references: [data.external.example]
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:06:47 [DEBUG] Starting graph walk: walkValidate
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "output.Subnets"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "output.VPCIPAddressRange"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "output.Environment"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "output.VPCIPAddressRange" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "output.Environment" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Environment"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Subnets"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.VPCIPAddressRange"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:06:47 [TRACE] dag/walk: added edge: "output.Subnets" waiting on "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "output.Subnets", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "output.VPCIPAddressRange", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "output.Environment", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:06:47 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:06:47 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:06:47 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:06:47 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:06:47 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:06:47 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: provider.external
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: provider.external
2017/12/28 12:06:47 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:06:47 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: data.external.example
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: data.external.example
2017/12/28 12:06:47 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:06:47 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224bc20), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:06:47 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:06:47 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:06:47 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:06:47 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:06:47 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: data.external.example
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: data.external.example
2017/12/28 12:06:47 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:06:47 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:06:47 [TRACE] dag/walk: walking "output.Environment"
2017/12/28 12:06:47 [TRACE] vertex 'root.output.Environment': walking
2017/12/28 12:06:47 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:06:47 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: provider.external (close)
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:06:47 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: output.response
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: provider.external (close)
2017/12/28 12:06:47 [TRACE] dag/walk: walking "output.Subnets"
2017/12/28 12:06:47 [TRACE] vertex 'root.output.Subnets': walking
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:06:47 [TRACE] vertex 'root.output.Subnets': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: output.Subnets
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:06:47 [TRACE] vertex 'root.output.Environment': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: output.Environment
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:06:47 [TRACE] dag/walk: walking "output.VPCIPAddressRange"
2017/12/28 12:06:47 [TRACE] vertex 'root.output.VPCIPAddressRange': walking
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: output.Subnets
2017/12/28 12:06:47 [TRACE] vertex 'root.output.VPCIPAddressRange': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: output.VPCIPAddressRange
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: output.Environment
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: output.response
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: output.VPCIPAddressRange
2017/12/28 12:06:47 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:06:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:06:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:06:47 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:06:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:06:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:06:47 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:06:47 [TRACE] dag/walk: walking "root"
2017/12/28 12:06:47 [TRACE] vertex 'root.root': walking
2017/12/28 12:07:10 [INFO] backend/local: apply calling Refresh
2017/12/28 12:07:10 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 12:07:10 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 12:07:10 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:07:10 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422304b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:07:10 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:07:10 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:07:10 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc0422ffe30), RawConfig:(*config.RawConfig)(0xc0422ffce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Attach provider request: []string{} external
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "output.VPCIPAddressRange" references: [data.external.example]
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "output.Environment" references: [data.external.example]
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "output.Subnets" references: [data.external.example]
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:10 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "output.Subnets"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "output.VPCIPAddressRange"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "output.Environment"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "root" waiting on "output.VPCIPAddressRange"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "root" waiting on "output.response"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "output.VPCIPAddressRange" waiting on "data.external.example"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "root" waiting on "output.Environment"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "output.Environment" waiting on "data.external.example"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "output.Subnets" waiting on "data.external.example"
2017/12/28 12:07:10 [TRACE] dag/walk: added edge: "root" waiting on "output.Subnets"
2017/12/28 12:07:10 [TRACE] dag/walk: dependencies changed for "output.Subnets", sending new deps
2017/12/28 12:07:10 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:07:10 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:07:10 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:07:10 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:07:10 [TRACE] dag/walk: dependencies changed for "output.VPCIPAddressRange", sending new deps
2017/12/28 12:07:10 [TRACE] dag/walk: dependencies changed for "output.Environment", sending new deps
2017/12/28 12:07:10 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:07:10 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:07:10 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:07:10 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:07:10 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:07:10 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:07:10 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:07:10 [TRACE] [walkRefresh] Entering eval tree: provider.external
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:07:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:07:10 [TRACE] [walkRefresh] Exiting eval tree: provider.external
2017/12/28 12:07:10 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:07:10 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:07:10 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:07:10 [TRACE] [walkRefresh] Entering eval tree: data.external.example
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:07:10 [TRACE] [walkRefresh] Exiting eval tree: data.external.example
2017/12/28 12:07:10 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:07:10 [TRACE] OrphanResourceCount: Starting...
2017/12/28 12:07:10 [TRACE] OrphanResourceCount: Checking: data.external.example
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:07:10 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422304b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:07:10 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:07:10 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:07:10 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:07:10 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:07:10 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:07:10 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:07:10 [TRACE] [walkRefresh] Entering eval tree: data.external.example
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:07:10 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 12:07:10 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 12:07:12 [TRACE] [walkRefresh] Exiting eval tree: data.external.example
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.Subnets"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Subnets': walking
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.VPCIPAddressRange"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.VPCIPAddressRange': walking
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.Environment"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Environment': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Subnets': evaluating
2017/12/28 12:07:12 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:07:12 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Environment': evaluating
2017/12/28 12:07:12 [TRACE] [walkRefresh] Entering eval tree: output.Subnets
2017/12/28 12:07:12 [TRACE] [walkRefresh] Entering eval tree: output.Environment
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.VPCIPAddressRange': evaluating
2017/12/28 12:07:12 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:07:12 [TRACE] [walkRefresh] Entering eval tree: output.VPCIPAddressRange
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:07:12 [TRACE] [walkRefresh] Entering eval tree: output.response
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [DEBUG] Interpolating computed map element attribute result (4)
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkRefresh] Exiting eval tree: output.Environment
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:07:12 [TRACE] [walkRefresh] Entering eval tree: provider.external (close)
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkRefresh] Exiting eval tree: output.response
2017/12/28 12:07:12 [TRACE] [walkRefresh] Exiting eval tree: provider.external (close)
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkRefresh] Exiting eval tree: output.VPCIPAddressRange
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkRefresh] Exiting eval tree: output.Subnets
2017/12/28 12:07:12 [TRACE] dag/walk: walking "root"
2017/12/28 12:07:12 [TRACE] vertex 'root.root': walking
2017/12/28 12:07:12 [INFO] backend/local: apply calling Plan
2017/12/28 12:07:12 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 12:07:12 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodePlannableResource
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodePlannableResource
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodePlannableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodePlannableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:07:12 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:07:12 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:07:12 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc0422ffe30), RawConfig:(*config.RawConfig)(0xc0422ffce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodePlannableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:07:12 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042230f50), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodePlannableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodePlannableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodePlannableResource
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Attach provider request: []string{} external
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "output.response" references: [data.external.example]
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "output.Subnets" references: [data.external.example]
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "output.VPCIPAddressRange" references: [data.external.example]
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "output.Environment" references: [data.external.example]
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
output.Environment - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.Subnets - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
output.response - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [DEBUG] Starting graph walk: walkPlan
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "output.Subnets"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "output.VPCIPAddressRange"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "output.Environment"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "output.Environment" waiting on "data.external.example"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "output.response" waiting on "data.external.example"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Environment"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.VPCIPAddressRange"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "output.Subnets" waiting on "data.external.example"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Subnets"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "output.VPCIPAddressRange" waiting on "data.external.example"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "output.Subnets", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "output.VPCIPAddressRange", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "output.Environment", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "output.response", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:07:12 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:07:12 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:07:12 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:07:12 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:07:12 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: provider.external
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: provider.external
2017/12/28 12:07:12 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:07:12 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: data.external.example
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: data.external.example
2017/12/28 12:07:12 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:07:12 [TRACE] OrphanResourceCount: Starting...
2017/12/28 12:07:12 [TRACE] OrphanResourceCount: Checking: data.external.example
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:07:12 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042230f50), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:07:12 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:07:12 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: data.external.example
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: data.external.example
2017/12/28 12:07:12 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:07:12 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.Environment"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Environment': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: provider.external (close)
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:07:12 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: output.response
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.Subnets"
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: provider.external (close)
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.VPCIPAddressRange"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.VPCIPAddressRange': walking
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Environment': evaluating
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: output.Environment
2017/12/28 12:07:12 [DEBUG] Interpolating computed map element attribute result (4)
2017/12/28 12:07:12 [TRACE] vertex 'root.output.VPCIPAddressRange': evaluating
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: output.VPCIPAddressRange
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Subnets': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Subnets': evaluating
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: output.Subnets
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: output.VPCIPAddressRange
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: output.response
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: output.Subnets
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: output.Environment
2017/12/28 12:07:12 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:07:12 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:07:12 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:07:12 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:07:12 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:07:12 [TRACE] dag/walk: walking "root"
2017/12/28 12:07:12 [TRACE] vertex 'root.root': walking
2017/12/28 12:07:12 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 12:07:12 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 12:07:12 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 12:07:12 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 12:07:12 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.LocalTransformer:

var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.OutputTransformer:

output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "output.response" references: []
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "output.Subnets" references: []
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "output.VPCIPAddressRange" references: []
2017/12/28 12:07:12 [DEBUG] ReferenceTransformer: "output.Environment" references: []
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment - *terraform.NodeApplyableOutput
  output.Subnets - *terraform.NodeApplyableOutput
  output.VPCIPAddressRange - *terraform.NodeApplyableOutput
  output.response - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment - *terraform.NodeApplyableOutput
output.Subnets - *terraform.NodeApplyableOutput
output.VPCIPAddressRange - *terraform.NodeApplyableOutput
output.response - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:07:12 [DEBUG] Starting graph walk: walkApply
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "output.response"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "output.Subnets"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "output.VPCIPAddressRange"
2017/12/28 12:07:12 [TRACE] dag/walk: added new vertex: "output.Environment"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Subnets"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.VPCIPAddressRange"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Environment"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 12:07:12 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.url"
2017/12/28 12:07:12 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.Subnets"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Subnets': walking
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.VPCIPAddressRange"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.VPCIPAddressRange': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Subnets': evaluating
2017/12/28 12:07:12 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:07:12 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:07:12 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:07:12 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.output.VPCIPAddressRange': evaluating
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.Environment"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Environment': walking
2017/12/28 12:07:12 [TRACE] dag/walk: walking "output.response"
2017/12/28 12:07:12 [TRACE] vertex 'root.output.response': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.output.Environment': evaluating
2017/12/28 12:07:12 [TRACE] vertex 'root.output.response': evaluating
2017/12/28 12:07:12 [TRACE] [walkApply] Entering eval tree: output.response
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [DEBUG] Interpolating computed map element attribute result (4)
2017/12/28 12:07:12 [TRACE] [walkApply] Entering eval tree: output.Subnets
2017/12/28 12:07:12 [TRACE] [walkApply] Entering eval tree: output.VPCIPAddressRange
2017/12/28 12:07:12 [TRACE] [walkApply] Entering eval tree: output.Environment
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkApply] Exiting eval tree: output.Environment
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkApply] Exiting eval tree: output.response
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkApply] Exiting eval tree: output.VPCIPAddressRange
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:07:12 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:07:12 [TRACE] [walkApply] Exiting eval tree: output.Subnets
2017/12/28 12:07:12 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:07:12 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:07:12 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:07:12 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:07:12 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:07:12 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:07:12 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:07:12 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:07:12 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:07:12 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:07:12 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:07:12 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T12:07:12.194-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe
2017/12/28 12:52:50 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 12:52:50 [INFO] Go runtime version: go1.9
2017/12/28 12:52:50 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 12:52:50 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 12:52:50 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 12:52:50 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 12:52:50 [INFO] CLI command args: []string{"apply"}
2017/12/28 12:52:50 [INFO] command: empty terraform config, returning nil
2017/12/28 12:52:50 [DEBUG] command: no data state file found for backend config
2017/12/28 12:52:50 [DEBUG] New state was assigned lineage "23a374a2-13c4-4e12-9253-036dfb100640"
2017/12/28 12:52:50 [INFO] command: backend initialized: <nil>
2017/12/28 12:52:50 [DEBUG] checking for provider in "."
2017/12/28 12:52:50 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 12:52:50 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 12:52:50 [DEBUG] found provider "terraform-provider-external_v1.0.0_x4.exe"
2017/12/28 12:52:50 [DEBUG] found provider "terraform-provider-http_v1.0.0_x4.exe"
2017/12/28 12:52:50 [DEBUG] found valid plugin: "external"
2017/12/28 12:52:50 [DEBUG] found valid plugin: "http"
2017/12/28 12:52:50 [DEBUG] checking for provisioner in "."
2017/12/28 12:52:50 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 12:52:50 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 12:52:50 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 12:52:50 [INFO] backend/local: starting Apply operation
2017/12/28 12:52:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:52:50 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:52:50 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 12:52:50 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeAbstractResource
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeAbstractResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeAbstractResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:52:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:52:50 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:52:50 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc04236c0e0), RawConfig:(*config.RawConfig)(0xc04230dce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:52:50 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423867d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeAbstractResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeAbstractResource
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Attach provider request: []string{} external
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "output.result" references: [data.external.example]
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeAbstractResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeAbstractResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.result - *terraform.NodeApplyableOutput
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeAbstractResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [DEBUG] Starting graph walk: walkInput
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "output.result"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.result"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "output.result" waiting on "data.external.example"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "output.result", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:52:50 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:52:50 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:52:50 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:52:50 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:52:50 [TRACE] [walkInput] Entering eval tree: provider.external
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T12:52:50.653-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe args=[C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe]
2017-12-28T12:52:50.696-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe
2017-12-28T12:52:50.715-0500 [DEBUG] plugin.terraform-provider-external_v1.0.0_x4.exe: 2017/12/28 12:52:50 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] [walkInput] Exiting eval tree: provider.external
2017/12/28 12:52:50 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:52:50 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:52:50 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:52:50 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:52:50 [TRACE] [walkInput] Entering eval tree: provider.external (close)
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:52:50 [TRACE] dag/walk: walking "output.result"
2017/12/28 12:52:50 [TRACE] vertex 'root.output.result': walking
2017/12/28 12:52:50 [TRACE] [walkInput] Exiting eval tree: provider.external (close)
2017/12/28 12:52:50 [TRACE] vertex 'root.output.result': evaluating
2017/12/28 12:52:50 [TRACE] [walkInput] Entering eval tree: output.result
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:52:50 [DEBUG] Interpolating computed map element attribute result (4)
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] [walkInput] Exiting eval tree: output.result
2017/12/28 12:52:50 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:52:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:52:50 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:52:50 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:52:50 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:52:50 [TRACE] dag/walk: walking "root"
2017/12/28 12:52:50 [TRACE] vertex 'root.root': walking
2017/12/28 12:52:50 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 12:52:50 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeValidatableResource
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeValidatableResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeValidatableResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:52:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:52:50 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:52:50 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc04236c0e0), RawConfig:(*config.RawConfig)(0xc04230dce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:52:50 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423867d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeValidatableResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeValidatableResource
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Attach provider request: []string{} external
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "output.result" references: [data.external.example]
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodeValidatableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeValidatableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.result - *terraform.NodeApplyableOutput
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeValidatableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:52:50 [DEBUG] Starting graph walk: walkValidate
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "output.result"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.result"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "output.result" waiting on "data.external.example"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:52:50 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: dependencies changed for "output.result", sending new deps
2017/12/28 12:52:50 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:52:50 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:52:50 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:52:50 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:52:50 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:52:50 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:52:50 [TRACE] [walkValidate] Entering eval tree: provider.external
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] [walkValidate] Exiting eval tree: provider.external
2017/12/28 12:52:50 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:52:50 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:52:50 [TRACE] [walkValidate] Entering eval tree: data.external.example
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:52:50 [TRACE] [walkValidate] Exiting eval tree: data.external.example
2017/12/28 12:52:50 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:52:50 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423867d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:52:50 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:52:50 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeValidatableResourceInstance
2017/12/28 12:52:50 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:52:50 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:52:50 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:52:50 [TRACE] [walkValidate] Entering eval tree: data.external.example
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 12:52:50 [TRACE] [walkValidate] Exiting eval tree: data.external.example
2017/12/28 12:52:50 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:52:50 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:52:50 [TRACE] dag/walk: walking "output.result"
2017/12/28 12:52:50 [TRACE] vertex 'root.output.result': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:52:50 [TRACE] [walkValidate] Entering eval tree: provider.external (close)
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:52:50 [TRACE] [walkValidate] Exiting eval tree: provider.external (close)
2017/12/28 12:52:50 [TRACE] vertex 'root.output.result': evaluating
2017/12/28 12:52:50 [TRACE] [walkValidate] Entering eval tree: output.result
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:52:50 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:52:50 [TRACE] [walkValidate] Exiting eval tree: output.result
2017/12/28 12:52:50 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:52:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:52:50 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:52:50 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:52:50 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:52:50 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:52:50 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:52:50 [TRACE] dag/walk: walking "root"
2017/12/28 12:52:50 [TRACE] vertex 'root.root': walking
2017/12/28 12:53:14 [INFO] backend/local: apply calling Refresh
2017/12/28 12:53:14 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 12:53:14 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 12:53:14 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:53:14 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082320), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:53:14 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:53:14 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:53:14 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc04236c0e0), RawConfig:(*config.RawConfig)(0xc04230dce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Attach provider request: []string{} external
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:53:14 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:53:14 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:53:14 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:53:14 [DEBUG] ReferenceTransformer: "output.result" references: [data.external.example]
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.result - *terraform.NodeApplyableOutput
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodeRefreshableDataResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodeRefreshableDataResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.result - *terraform.NodeApplyableOutput
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:14 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 12:53:14 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:53:14 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:53:14 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:53:14 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:53:14 [TRACE] dag/walk: added new vertex: "output.result"
2017/12/28 12:53:14 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:53:14 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:53:14 [TRACE] dag/walk: added edge: "root" waiting on "output.result"
2017/12/28 12:53:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:53:14 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:53:14 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:53:14 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:53:14 [TRACE] dag/walk: added edge: "output.result" waiting on "data.external.example"
2017/12/28 12:53:14 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:53:14 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:53:14 [TRACE] dag/walk: dependencies changed for "output.result", sending new deps
2017/12/28 12:53:14 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:53:14 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:53:14 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:53:14 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:53:14 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:53:14 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:53:14 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:53:14 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:53:14 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:53:14 [TRACE] [walkRefresh] Entering eval tree: provider.external
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:53:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:53:14 [TRACE] [walkRefresh] Exiting eval tree: provider.external
2017/12/28 12:53:14 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:53:14 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:53:14 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:53:14 [TRACE] [walkRefresh] Entering eval tree: data.external.example
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:53:14 [TRACE] [walkRefresh] Exiting eval tree: data.external.example
2017/12/28 12:53:14 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:53:14 [TRACE] OrphanResourceCount: Starting...
2017/12/28 12:53:14 [TRACE] OrphanResourceCount: Checking: data.external.example
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:53:14 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082320), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:53:14 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:53:14 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 12:53:14 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:53:14 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:53:14 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:53:14 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:53:14 [TRACE] [walkRefresh] Entering eval tree: data.external.example
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:53:14 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 12:53:14 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 12:53:17 [TRACE] [walkRefresh] Exiting eval tree: data.external.example
2017/12/28 12:53:17 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:53:17 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:53:17 [TRACE] [walkRefresh] Entering eval tree: provider.external (close)
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:53:17 [TRACE] [walkRefresh] Exiting eval tree: provider.external (close)
2017/12/28 12:53:17 [TRACE] dag/walk: walking "output.result"
2017/12/28 12:53:17 [TRACE] vertex 'root.output.result': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.output.result': evaluating
2017/12/28 12:53:17 [TRACE] [walkRefresh] Entering eval tree: output.result
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:17 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:53:17 [DEBUG] Interpolating computed map element attribute result (14)
2017/12/28 12:53:17 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:17 [TRACE] [walkRefresh] Exiting eval tree: output.result
2017/12/28 12:53:17 [TRACE] dag/walk: walking "root"
2017/12/28 12:53:17 [TRACE] vertex 'root.root': walking
2017/12/28 12:53:17 [INFO] backend/local: apply calling Plan
2017/12/28 12:53:17 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 12:53:17 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ConfigTransformer:

data.external.example - *terraform.NodePlannableResource
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.LocalTransformer:

data.external.example - *terraform.NodePlannableResource
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.OutputTransformer:

data.external.example - *terraform.NodePlannableResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.external.example - *terraform.NodePlannableResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:53:17 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:53:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.external.example
2017/12/28 12:53:17 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"example", Type:"external", RawCount:(*config.RawConfig)(0xc04236c0e0), RawConfig:(*config.RawConfig)(0xc04230dce0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.external.example - *terraform.NodePlannableResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:53:17 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodePlannableResource
output.result - *terraform.NodeApplyableOutput
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.external.example - *terraform.NodePlannableResource
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.external.example - *terraform.NodePlannableResource
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Attach provider request: []string{} external
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
output.result - *terraform.NodeApplyableOutput
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "data.external.example" references: [var.projectcode var.url]
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "output.result" references: [data.external.example]
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "provider.external" references: []
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.external.example - *terraform.NodePlannableResource
  output.result - *terraform.NodeApplyableOutput
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.external.example - *terraform.NodePlannableResource
  provider.external - *terraform.NodeApplyableProvider
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.result - *terraform.NodeApplyableOutput
output.result - *terraform.NodeApplyableOutput
  data.external.example - *terraform.NodePlannableResource
provider.external - *terraform.NodeApplyableProvider
provider.external (close) - *terraform.graphNodeCloseProvider
  data.external.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.external (close) - *terraform.graphNodeCloseProvider
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [DEBUG] Starting graph walk: walkPlan
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "output.result"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "provider.external"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "provider.external (close)"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.projectcode"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "data.external.example" waiting on "var.url"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "output.result" waiting on "data.external.example"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.result"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "provider.external (close)" waiting on "data.external.example"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "root" waiting on "provider.external (close)"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "data.external.example" waiting on "provider.external"
2017/12/28 12:53:17 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 12:53:17 [TRACE] dag/walk: dependencies changed for "data.external.example", sending new deps
2017/12/28 12:53:17 [TRACE] dag/walk: dependencies changed for "output.result", sending new deps
2017/12/28 12:53:17 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:53:17 [TRACE] dag/walk: dependencies changed for "provider.external (close)", sending new deps
2017/12/28 12:53:17 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:53:17 [TRACE] dag/walk: walking "provider.external"
2017/12/28 12:53:17 [TRACE] vertex 'root.provider.external': walking
2017/12/28 12:53:17 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:53:17 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.provider.external': evaluating
2017/12/28 12:53:17 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:53:17 [TRACE] [walkPlan] Entering eval tree: provider.external
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 12:53:17 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:17 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 12:53:17 [TRACE] [walkPlan] Exiting eval tree: provider.external
2017/12/28 12:53:17 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:53:17 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:53:17 [TRACE] [walkPlan] Entering eval tree: data.external.example
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 12:53:17 [TRACE] [walkPlan] Exiting eval tree: data.external.example
2017/12/28 12:53:17 [TRACE] vertex 'root.data.external.example': expanding/walking dynamic subgraph
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:53:17 [TRACE] OrphanResourceCount: Starting...
2017/12/28 12:53:17 [TRACE] OrphanResourceCount: Checking: data.external.example
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:53:17 [DEBUG] Attaching resource state to "data.external.example": &terraform.ResourceState{Type:"external", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042082410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.TargetsTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "data.external.example" references: []
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.RootTransformer:

data.external.example - *terraform.NodePlannableResourceInstance
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "data.external.example"
2017/12/28 12:53:17 [TRACE] dag/walk: walking "data.external.example"
2017/12/28 12:53:17 [TRACE] vertex 'root.data.external.example': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.data.external.example': evaluating
2017/12/28 12:53:17 [TRACE] [walkPlan] Entering eval tree: data.external.example
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 12:53:17 [TRACE] [walkPlan] Exiting eval tree: data.external.example
2017/12/28 12:53:17 [TRACE] dag/walk: walking "output.result"
2017/12/28 12:53:17 [TRACE] vertex 'root.output.result': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.output.result': evaluating
2017/12/28 12:53:17 [TRACE] [walkPlan] Entering eval tree: output.result
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:17 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:53:17 [DEBUG] Interpolating computed map element attribute result (14)
2017/12/28 12:53:17 [TRACE] dag/walk: walking "provider.external (close)"
2017/12/28 12:53:17 [TRACE] vertex 'root.provider.external (close)': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.provider.external (close)': evaluating
2017/12/28 12:53:17 [TRACE] [walkPlan] Entering eval tree: provider.external (close)
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 12:53:17 [TRACE] [walkPlan] Exiting eval tree: provider.external (close)
2017/12/28 12:53:17 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:17 [TRACE] [walkPlan] Exiting eval tree: output.result
2017/12/28 12:53:17 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:53:17 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:53:17 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:53:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:53:17 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:53:17 [TRACE] dag/walk: walking "root"
2017/12/28 12:53:17 [TRACE] vertex 'root.root': walking
2017/12/28 12:53:17 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 12:53:17 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.MissingProviderTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ProviderTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.DisableProviderTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ParentProviderTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ProvisionerTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.RootVariableTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.LocalTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.OutputTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "var.projectcode" references: []
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "var.url" references: []
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "output.result" references: []
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "output.VPCIPAddressRange (orphan)" references: []
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "output.response (orphan)" references: []
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "output.Environment (orphan)" references: []
2017/12/28 12:53:17 [DEBUG] ReferenceTransformer: "output.Subnets (orphan)" references: []
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment (orphan) - *terraform.NodeOutputOrphan
  output.Subnets (orphan) - *terraform.NodeOutputOrphan
  output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
  output.response (orphan) - *terraform.NodeOutputOrphan
  output.result - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment (orphan) - *terraform.NodeOutputOrphan
  output.Subnets (orphan) - *terraform.NodeOutputOrphan
  output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
  output.response (orphan) - *terraform.NodeOutputOrphan
  output.result - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment (orphan) - *terraform.NodeOutputOrphan
  output.Subnets (orphan) - *terraform.NodeOutputOrphan
  output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
  output.response (orphan) - *terraform.NodeOutputOrphan
  output.result - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment (orphan) - *terraform.NodeOutputOrphan
  output.Subnets (orphan) - *terraform.NodeOutputOrphan
  output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
  output.response (orphan) - *terraform.NodeOutputOrphan
  output.result - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment (orphan) - *terraform.NodeOutputOrphan
  output.Subnets (orphan) - *terraform.NodeOutputOrphan
  output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
  output.response (orphan) - *terraform.NodeOutputOrphan
  output.result - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.Environment (orphan) - *terraform.NodeOutputOrphan
  output.Subnets (orphan) - *terraform.NodeOutputOrphan
  output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
  output.response (orphan) - *terraform.NodeOutputOrphan
  output.result - *terraform.NodeApplyableOutput
  var.projectcode - *terraform.NodeRootVariable
  var.url - *terraform.NodeRootVariable
output.Environment (orphan) - *terraform.NodeOutputOrphan
output.Subnets (orphan) - *terraform.NodeOutputOrphan
output.VPCIPAddressRange (orphan) - *terraform.NodeOutputOrphan
output.response (orphan) - *terraform.NodeOutputOrphan
output.result - *terraform.NodeApplyableOutput
var.projectcode - *terraform.NodeRootVariable
var.url - *terraform.NodeRootVariable
2017/12/28 12:53:17 [DEBUG] Starting graph walk: walkApply
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "output.Subnets (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "var.projectcode"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "var.url"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "output.result"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "output.VPCIPAddressRange (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "output.response (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: added new vertex: "output.Environment (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.response (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Environment (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.Subnets (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.projectcode"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.url"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.result"
2017/12/28 12:53:17 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.VPCIPAddressRange (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 12:53:17 [TRACE] dag/walk: walking "output.result"
2017/12/28 12:53:17 [TRACE] vertex 'root.output.result': walking
2017/12/28 12:53:17 [TRACE] dag/walk: walking "output.response (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: walking "output.Environment (orphan)"
2017/12/28 12:53:17 [TRACE] vertex 'root.output.Environment (orphan)': walking
2017/12/28 12:53:17 [TRACE] dag/walk: walking "var.projectcode"
2017/12/28 12:53:17 [TRACE] vertex 'root.var.projectcode': walking
2017/12/28 12:53:17 [TRACE] dag/walk: walking "output.VPCIPAddressRange (orphan)"
2017/12/28 12:53:17 [TRACE] dag/walk: walking "output.Subnets (orphan)"
2017/12/28 12:53:17 [TRACE] vertex 'root.output.VPCIPAddressRange (orphan)': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.output.Subnets (orphan)': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.output.Environment (orphan)': evaluating
2017/12/28 12:53:17 [TRACE] vertex 'root.output.response (orphan)': walking
2017/12/28 12:53:17 [TRACE] dag/walk: walking "var.url"
2017/12/28 12:53:17 [TRACE] vertex 'root.var.url': walking
2017/12/28 12:53:17 [TRACE] [walkApply] Entering eval tree: output.Environment (orphan)
2017/12/28 12:53:17 [TRACE] vertex 'root.output.response (orphan)': evaluating
2017/12/28 12:53:17 [TRACE] [walkApply] Entering eval tree: output.response (orphan)
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalDeleteOutput
2017/12/28 12:53:17 [TRACE] [walkApply] Exiting eval tree: output.response (orphan)
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalDeleteOutput
2017/12/28 12:53:17 [TRACE] [walkApply] Exiting eval tree: output.Environment (orphan)
2017/12/28 12:53:17 [TRACE] vertex 'root.output.result': evaluating
2017/12/28 12:53:17 [TRACE] [walkApply] Entering eval tree: output.result
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 12:53:17 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] vertex 'root.output.Subnets (orphan)': evaluating
2017/12/28 12:53:17 [TRACE] vertex 'root.output.VPCIPAddressRange (orphan)': evaluating
2017/12/28 12:53:17 [TRACE] [walkApply] Entering eval tree: output.Subnets (orphan)
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalDeleteOutput
2017/12/28 12:53:17 [TRACE] [walkApply] Exiting eval tree: output.Subnets (orphan)
2017/12/28 12:53:17 [TRACE] [walkApply] Entering eval tree: output.VPCIPAddressRange (orphan)
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalDeleteOutput
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 12:53:17 [TRACE] [walkApply] Exiting eval tree: output.VPCIPAddressRange (orphan)
2017/12/28 12:53:17 [DEBUG] Interpolating computed map element attribute result (14)
2017/12/28 12:53:17 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 12:53:17 [TRACE] [walkApply] Exiting eval tree: output.result
2017/12/28 12:53:17 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 12:53:17 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 12:53:17 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 12:53:17 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:53:17 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 12:53:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "data.external.example.0", replace "data.external.example"
2017/12/28 12:53:17 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 12:53:17 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:53:17 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:53:17 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:53:17 [TRACE] Preserving existing state lineage "4d6b04e7-d87f-4210-a979-6099de8ed4df"
2017/12/28 12:53:17 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T12:53:17.533-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-28T12:53:17.547-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\httptesting\.terraform\plugins\windows_amd64\terraform-provider-external_v1.0.0_x4.exe
2017/12/28 15:27:36 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 15:27:36 [INFO] Go runtime version: go1.9
2017/12/28 15:27:36 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "init"}
2017/12/28 15:27:36 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 15:27:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 15:27:36 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 15:27:36 [INFO] CLI command args: []string{"init"}
2017/12/28 15:27:36 [DEBUG] command: loading backend config file: C:\DDT\demos\module4\cidrtesting
2017/12/28 15:27:36 [INFO] command: empty terraform config, returning nil
2017/12/28 15:27:36 [DEBUG] command: no data state file found for backend config
2017/12/28 15:27:36 [DEBUG] New state was assigned lineage "25a61418-b576-459c-b0a1-0f14f8d460fa"
2017/12/28 15:27:36 [INFO] command: backend initialized: <nil>
2017/12/28 15:27:36 [DEBUG] checking for provider in "."
2017/12/28 15:27:36 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:27:36 [DEBUG] checking for provisioner in "."
2017/12/28 15:27:36 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:27:36 [INFO] Failed to read plugin lock file .terraform\plugins\windows_amd64\lock.json: open .terraform\plugins\windows_amd64\lock.json: The system cannot find the path specified.
2017/12/28 15:27:36 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 15:27:36 [DEBUG] checking for provider in "."
2017/12/28 15:27:36 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:27:36 [DEBUG] plugin requirements: "template"=""
2017/12/28 15:27:36 [DEBUG] fetching provider info for template version 1.0.0
2017/12/28 15:27:36 [DEBUG] getting provider "template" version "1.0.0"
2017/12/28 15:27:36 [DEBUG] plugin cache is disabled, so downloading template 1.0.0 from https://releases.hashicorp.com/terraform-provider-template/1.0.0/terraform-provider-template_1.0.0_windows_amd64.zip?checksum=sha256:c9fb0b56773fd8b0b46809b05558364a494ac4a46f5b4654fb446a8ea65a95e4
2017/12/28 15:27:37 [DEBUG] looking for the template 1.0.0 plugin we just installed
2017/12/28 15:27:37 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:27:37 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:27:37 [DEBUG] all plugins found discovery.PluginMetaSet{discovery.PluginMeta{Name:"template", Version:"1.0.0", Path:"C:\\DDT\\demos\\module4\\cidrtesting\\.terraform\\plugins\\windows_amd64\\terraform-provider-template_v1.0.0_x4.exe"}:struct {}{}}
2017/12/28 15:27:37 [DEBUG] filtered plugins discovery.PluginMetaSet{discovery.PluginMeta{Name:"template", Version:"1.0.0", Path:"C:\\DDT\\demos\\module4\\cidrtesting\\.terraform\\plugins\\windows_amd64\\terraform-provider-template_v1.0.0_x4.exe"}:struct {}{}}
2017/12/28 15:27:37 [DEBUG] checking for provider in "."
2017/12/28 15:27:37 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:27:37 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:27:37 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:27:37 [DEBUG] found valid plugin: "template"
2017/12/28 15:27:37 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:27:37 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:27:37 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/12/28 15:27:42 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 15:27:42 [INFO] Go runtime version: go1.9
2017/12/28 15:27:42 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 15:27:42 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 15:27:42 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 15:27:42 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 15:27:42 [INFO] CLI command args: []string{"apply"}
2017/12/28 15:27:42 [INFO] command: empty terraform config, returning nil
2017/12/28 15:27:42 [DEBUG] command: no data state file found for backend config
2017/12/28 15:27:42 [DEBUG] New state was assigned lineage "3117dcd5-77ae-405d-bc24-2b8e455f870e"
2017/12/28 15:27:42 [INFO] command: backend initialized: <nil>
2017/12/28 15:27:42 [DEBUG] checking for provider in "."
2017/12/28 15:27:42 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:27:42 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:27:42 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:27:42 [DEBUG] found valid plugin: "template"
2017/12/28 15:27:42 [DEBUG] checking for provisioner in "."
2017/12/28 15:27:42 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:27:42 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:27:42 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 15:27:42 [INFO] backend/local: starting Apply operation
2017/12/28 15:27:42 [DEBUG] New state was assigned lineage "85c25a45-0bb3-41a1-91e4-9b4599753612"
2017/12/28 15:27:42 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 15:27:42 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:27:42 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:27:42 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:27:42 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0421d6d90), RawConfig:(*config.RawConfig)(0xc042309c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:27:42 [DEBUG] Resource state not found for "data.template_file.cidrsubnet": data.template_file.cidrsubnet
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Attach provider request: []string{} template
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [DEBUG] Starting graph walk: walkInput
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:27:42 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:27:42 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:27:42 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:27:42 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:27:42 [TRACE] [walkInput] Entering eval tree: provider.template
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T15:27:42.493-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe args=[C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe]
2017-12-28T15:27:42.582-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017-12-28T15:27:42.614-0500 [DEBUG] plugin.terraform-provider-template_v1.0.0_x4.exe: 2017/12/28 15:27:42 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] [walkInput] Exiting eval tree: provider.template
2017/12/28 15:27:42 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:27:42 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:27:42 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:27:42 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:27:42 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:27:42 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:27:42 [TRACE] [walkInput] Entering eval tree: output.template_values
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:27:42 [TRACE] [walkInput] Entering eval tree: provider.template (close)
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:27:42 [TRACE] [walkInput] Exiting eval tree: provider.template (close)
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] [walkInput] Exiting eval tree: output.template_values
2017/12/28 15:27:42 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:27:42 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:27:42 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:27:42 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:27:42 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:27:42 [TRACE] dag/walk: walking "root"
2017/12/28 15:27:42 [TRACE] vertex 'root.root': walking
2017/12/28 15:27:42 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 15:27:42 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:27:42 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:27:42 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:27:42 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0421d6d90), RawConfig:(*config.RawConfig)(0xc042309c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:27:42 [DEBUG] Resource state not found for "data.template_file.cidrsubnet": data.template_file.cidrsubnet
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Attach provider request: []string{} template
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:27:42 [DEBUG] Starting graph walk: walkValidate
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:27:42 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:27:42 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:27:42 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:27:42 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:27:42 [TRACE] [walkValidate] Entering eval tree: provider.template
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] [walkValidate] Exiting eval tree: provider.template
2017/12/28 15:27:42 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:27:42 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:27:42 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:27:42 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:27:42 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:27:42 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:27:42 [DEBUG] Resource state not found for "data.template_file.cidrsubnet[0]": data.template_file.cidrsubnet[0]
2017/12/28 15:27:42 [DEBUG] Resource state not found for "data.template_file.cidrsubnet[1]": data.template_file.cidrsubnet[1]
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:27:42 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:27:42 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:27:42 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:27:42 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:27:42 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:27:42 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:27:42 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:27:42 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:27:42 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:27:42 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:27:42 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:27:42 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:27:42 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:27:42 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:27:42 [TRACE] dag/walk: walking "root"
2017/12/28 15:27:42 [TRACE] vertex 'root.root': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:27:42 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:27:42 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:27:42 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:27:42 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:27:42 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2017/12/28 15:27:42 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:27:42 [TRACE] [walkValidate] Entering eval tree: output.template_values
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:27:42 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2017/12/28 15:27:42 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:27:42 [TRACE] [walkValidate] Exiting eval tree: output.template_values
2017/12/28 15:27:42 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:27:42 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:27:42 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:27:42 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:27:42 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:27:42 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:27:42 [TRACE] dag/walk: walking "root"
2017/12/28 15:27:42 [TRACE] vertex 'root.root': walking
2017/12/28 15:28:05 [INFO] backend/local: apply calling Refresh
2017/12/28 15:28:05 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 15:28:05 [TRACE] No managed resources in state during refresh, skipping managed resource transformer
2017/12/28 15:28:05 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:28:05 [DEBUG] Resource state not found for "data.template_file.cidrsubnet": data.template_file.cidrsubnet
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:28:05 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:28:05 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:28:05 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0421d6d90), RawConfig:(*config.RawConfig)(0xc042309c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Attach provider request: []string{} template
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:28:05 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:28:05 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:28:05 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:28:05 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:28:05 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "root" waiting on "output.template_values"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:28:05 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:28:05 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:28:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:28:05 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:28:05 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:28:05 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:28:05 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:28:05 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:28:05 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:28:05 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:28:05 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:28:05 [TRACE] [walkRefresh] Entering eval tree: provider.template
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:28:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:28:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:28:05 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2017/12/28 15:28:05 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:28:05 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:28:05 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:28:05 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:28:05 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:28:05 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:28:05 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:28:05 [DEBUG] Resource state not found for "data.template_file.cidrsubnet[0]": data.template_file.cidrsubnet[0]
2017/12/28 15:28:05 [DEBUG] Resource state not found for "data.template_file.cidrsubnet[1]": data.template_file.cidrsubnet[1]
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:28:05 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:28:05 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:28:05 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:28:05 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:28:05 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:28:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:28:05 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:28:05 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:28:05 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:28:05 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:28:05 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:28:05 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:28:05 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:28:05 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:28:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:28:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:28:05 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:28:05 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.template_file.cidrsubnet.0: failed to render : 1:25: unknown variable accessed: count.index
2017/12/28 15:28:05 [ERROR] root: eval: *terraform.EvalSequence, err: data.template_file.cidrsubnet.0: failed to render : 1:25: unknown variable accessed: count.index
2017/12/28 15:28:05 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:28:05 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.template_file.cidrsubnet.1: failed to render : 1:25: unknown variable accessed: count.index
2017/12/28 15:28:05 [ERROR] root: eval: *terraform.EvalSequence, err: data.template_file.cidrsubnet.1: failed to render : 1:25: unknown variable accessed: count.index
2017/12/28 15:28:05 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:28:05 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/28 15:28:05 [TRACE] dag/walk: upstream errored, not walking "output.template_values"
2017/12/28 15:28:05 [TRACE] dag/walk: upstream errored, not walking "provider.template (close)"
2017/12/28 15:28:05 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/28 15:28:05 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T15:28:06.002-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-28T15:28:06.014-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017/12/28 15:29:05 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 15:29:05 [INFO] Go runtime version: go1.9
2017/12/28 15:29:05 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 15:29:05 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 15:29:05 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 15:29:05 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 15:29:05 [INFO] CLI command args: []string{"apply"}
2017/12/28 15:29:05 [INFO] command: empty terraform config, returning nil
2017/12/28 15:29:05 [DEBUG] command: no data state file found for backend config
2017/12/28 15:29:05 [DEBUG] New state was assigned lineage "a19959d9-9fea-44f3-a015-1cb151db0340"
2017/12/28 15:29:05 [INFO] command: backend initialized: <nil>
2017/12/28 15:29:05 [DEBUG] checking for provider in "."
2017/12/28 15:29:05 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:29:05 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:29:05 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:29:05 [DEBUG] found valid plugin: "template"
2017/12/28 15:29:05 [DEBUG] checking for provisioner in "."
2017/12/28 15:29:05 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:29:05 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:29:05 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 15:29:05 [INFO] backend/local: starting Apply operation
2017/12/28 15:29:05 [DEBUG] New state was assigned lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:29:05 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 15:29:05 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:05 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:05 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:29:05 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042321d50), RawConfig:(*config.RawConfig)(0xc042321c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:05 [DEBUG] Resource state not found for "data.template_file.cidrsubnet": data.template_file.cidrsubnet
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Attach provider request: []string{} template
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [DEBUG] Starting graph walk: walkInput
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:05 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:05 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:05 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:29:05 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:29:05 [TRACE] [walkInput] Entering eval tree: provider.template
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T15:29:05.516-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe args=[C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe]
2017-12-28T15:29:05.584-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017-12-28T15:29:05.604-0500 [DEBUG] plugin.terraform-provider-template_v1.0.0_x4.exe: 2017/12/28 15:29:05 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] [walkInput] Exiting eval tree: provider.template
2017/12/28 15:29:05 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:29:05 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:29:05 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:29:05 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:29:05 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:05 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:29:05 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:05 [TRACE] [walkInput] Entering eval tree: provider.template (close)
2017/12/28 15:29:05 [TRACE] [walkInput] Entering eval tree: output.template_values
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:05 [TRACE] [walkInput] Exiting eval tree: provider.template (close)
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] [walkInput] Exiting eval tree: output.template_values
2017/12/28 15:29:05 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:29:05 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:29:05 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:05 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:05 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:05 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 15:29:05 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:05 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:05 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:29:05 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042321d50), RawConfig:(*config.RawConfig)(0xc042321c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:05 [DEBUG] Resource state not found for "data.template_file.cidrsubnet": data.template_file.cidrsubnet
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Attach provider request: []string{} template
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:05 [DEBUG] Starting graph walk: walkValidate
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:05 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:05 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:05 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:05 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:29:05 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:29:05 [TRACE] [walkValidate] Entering eval tree: provider.template
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] [walkValidate] Exiting eval tree: provider.template
2017/12/28 15:29:05 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:29:05 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:29:05 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:29:05 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:05 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:05 [DEBUG] Resource state not found for "data.template_file.cidrsubnet[0]": data.template_file.cidrsubnet[0]
2017/12/28 15:29:05 [DEBUG] Resource state not found for "data.template_file.cidrsubnet[1]": data.template_file.cidrsubnet[1]
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:29:05 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:05 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:05 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:05 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:05 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:05 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:29:05 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:05 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:29:05 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:05 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:29:05 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:29:05 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:05 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:05 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:05 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:05 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:29:05 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:29:05 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:05 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:29:05 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:05 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2017/12/28 15:29:05 [TRACE] [walkValidate] Entering eval tree: output.template_values
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:05 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2017/12/28 15:29:05 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:05 [TRACE] [walkValidate] Exiting eval tree: output.template_values
2017/12/28 15:29:05 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:29:05 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:29:05 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:05 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:29:05 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:05 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:05 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:28 [INFO] backend/local: apply calling Refresh
2017/12/28 15:29:28 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 15:29:28 [TRACE] No managed resources in state during refresh, skipping managed resource transformer
2017/12/28 15:29:28 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:29:28 [DEBUG] Resource state not found for "data.template_file.cidrsubnet": data.template_file.cidrsubnet
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:29:28 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:29:28 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042321d50), RawConfig:(*config.RawConfig)(0xc042321c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Attach provider request: []string{} template
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "root" waiting on "output.template_values"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:28 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:29:28 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:29:28 [TRACE] [walkRefresh] Entering eval tree: provider.template
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:29:28 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2017/12/28 15:29:28 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:29:28 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:29:28 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:28 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:28 [DEBUG] Resource state not found for "data.template_file.cidrsubnet[0]": data.template_file.cidrsubnet[0]
2017/12/28 15:29:28 [DEBUG] Resource state not found for "data.template_file.cidrsubnet[1]": data.template_file.cidrsubnet[1]
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:29:28 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:29:28 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:29:28 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:28 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:28 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:28 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:28 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:29:28 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:28 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:29:28 [TRACE] [walkRefresh] Entering eval tree: provider.template (close)
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:29:28 [TRACE] [walkRefresh] Entering eval tree: output.template_values
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:28 [TRACE] [walkRefresh] Exiting eval tree: provider.template (close)
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] [walkRefresh] Exiting eval tree: output.template_values
2017/12/28 15:29:28 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:28 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:28 [INFO] backend/local: apply calling Plan
2017/12/28 15:29:28 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 15:29:28 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:28 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:29:28 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042321d50), RawConfig:(*config.RawConfig)(0xc042321c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:28 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042262af0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Attach provider request: []string{} template
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [DEBUG] Starting graph walk: walkPlan
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:29:28 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:28 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:29:28 [TRACE] [walkPlan] Entering eval tree: provider.template
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:29:28 [TRACE] [walkPlan] Exiting eval tree: provider.template
2017/12/28 15:29:28 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:29:28 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:29:28 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:28 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:29:28 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[0]
2017/12/28 15:29:28 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[1]
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:28 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042262b40), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:28 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042262af0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:29:28 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:28 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:29:28 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:29:28 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:29:28 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:28 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:28 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:28 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:28 [TRACE] [walkPlan] Entering eval tree: output.template_values
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:28 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:29:28 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:29:28 [WARN] Output interpolation "template_values" failed: Resource 'data.template_file.cidrsubnet' not found for variable 'data.template_file.cidrsubnet.*'
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] [walkPlan] Exiting eval tree: output.template_values
2017/12/28 15:29:28 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:28 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:29:28 [TRACE] [walkPlan] Entering eval tree: provider.template (close)
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:29:28 [TRACE] [walkPlan] Exiting eval tree: provider.template (close)
2017/12/28 15:29:28 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:29:28 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:29:28 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:29:28 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:28 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:28 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:28 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 15:29:28 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 15:29:28 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 15:29:28 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 15:29:28 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.LocalTransformer:

var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.OutputTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:28 [DEBUG] ReferenceTransformer: "output.template_values" references: []
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:28 [DEBUG] Starting graph walk: walkApply
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:28 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.subnet_count"
2017/12/28 15:29:28 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:29:28 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:28 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:28 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:28 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:28 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:28 [TRACE] [walkApply] Entering eval tree: output.template_values
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:28 [WARN] Output interpolation "template_values" failed: Resource 'data.template_file.cidrsubnet' not found for variable 'data.template_file.cidrsubnet.*'
2017/12/28 15:29:28 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:28 [TRACE] [walkApply] Exiting eval tree: output.template_values
2017/12/28 15:29:28 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:28 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:29:28 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:29:28 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:28 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:29:28 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:29:28 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:28 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:29:29 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T15:29:29.056-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017/12/28 15:29:57 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 15:29:57 [INFO] Go runtime version: go1.9
2017/12/28 15:29:57 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 15:29:57 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 15:29:57 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 15:29:57 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 15:29:57 [INFO] CLI command args: []string{"apply"}
2017/12/28 15:29:57 [INFO] command: empty terraform config, returning nil
2017/12/28 15:29:57 [DEBUG] command: no data state file found for backend config
2017/12/28 15:29:57 [DEBUG] New state was assigned lineage "d3688e0b-303b-47ce-b5e2-7c4ea25dabb6"
2017/12/28 15:29:57 [INFO] command: backend initialized: <nil>
2017/12/28 15:29:57 [DEBUG] checking for provider in "."
2017/12/28 15:29:57 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:29:57 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:29:57 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:29:57 [DEBUG] found valid plugin: "template"
2017/12/28 15:29:57 [DEBUG] checking for provisioner in "."
2017/12/28 15:29:57 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:29:57 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:29:57 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 15:29:57 [INFO] backend/local: starting Apply operation
2017/12/28 15:29:57 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:29:57 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:29:57 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 15:29:57 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422f0a10), RawConfig:(*config.RawConfig)(0xc0422f0930), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042332820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Attach provider request: []string{} template
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] Starting graph walk: walkInput
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:57 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:29:57 [TRACE] [walkInput] Entering eval tree: provider.template
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T15:29:57.555-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe args=[C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe]
2017-12-28T15:29:57.612-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017-12-28T15:29:57.633-0500 [DEBUG] plugin.terraform-provider-template_v1.0.0_x4.exe: 2017/12/28 15:29:57 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] [walkInput] Exiting eval tree: provider.template
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:57 [TRACE] [walkInput] Entering eval tree: provider.template (close)
2017/12/28 15:29:57 [TRACE] [walkInput] Entering eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:57 [TRACE] [walkInput] Exiting eval tree: provider.template (close)
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] [walkInput] Exiting eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:29:57 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:29:57 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:29:57 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:57 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 15:29:57 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422f0a10), RawConfig:(*config.RawConfig)(0xc0422f0930), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042332820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Attach provider request: []string{} template
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] Starting graph walk: walkValidate
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:29:57 [TRACE] [walkValidate] Entering eval tree: provider.template
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] [walkValidate] Exiting eval tree: provider.template
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:29:57 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:29:57 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042332820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042332870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:29:57 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:29:57 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:29:57 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:57 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:57 [TRACE] [walkValidate] Entering eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:29:57 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] [walkValidate] Exiting eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:29:57 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:29:57 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:29:57 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:57 [INFO] backend/local: apply calling Refresh
2017/12/28 15:29:57 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 15:29:57 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 15:29:57 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04249e5a0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422f0a10), RawConfig:(*config.RawConfig)(0xc0422f0930), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Attach provider request: []string{} template
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:29:57 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:57 [TRACE] [walkRefresh] Entering eval tree: provider.template
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:29:57 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:29:57 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:29:57 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:57 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:29:57 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[0]
2017/12/28 15:29:57 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[1]
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04249e5f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04249e5a0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:29:57 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:29:57 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:29:57 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:57 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:29:57 [TRACE] [walkRefresh] Entering eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] [walkRefresh] Entering eval tree: provider.template (close)
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:57 [TRACE] [walkRefresh] Exiting eval tree: provider.template (close)
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] [walkRefresh] Exiting eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:57 [INFO] backend/local: apply calling Plan
2017/12/28 15:29:57 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 15:29:57 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422f0a10), RawConfig:(*config.RawConfig)(0xc0422f0930), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04249eaf0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Attach provider request: []string{} template
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] Starting graph walk: walkPlan
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:57 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:29:57 [TRACE] [walkPlan] Entering eval tree: provider.template
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:29:57 [TRACE] [walkPlan] Exiting eval tree: provider.template
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:29:57 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:29:57 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:57 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:29:57 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[0]
2017/12/28 15:29:57 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[1]
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04249eaf0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04249eb40), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:29:57 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:29:57 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:29:57 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:29:57 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:29:57 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:29:57 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:57 [TRACE] [walkPlan] Entering eval tree: provider.template (close)
2017/12/28 15:29:57 [TRACE] [walkPlan] Entering eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:57 [TRACE] [walkPlan] Exiting eval tree: provider.template (close)
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] [walkPlan] Exiting eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:29:57 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:29:57 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:29:57 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:57 [TRACE] dag/walk: walking "root"
2017/12/28 15:29:57 [TRACE] vertex 'root.root': walking
2017/12/28 15:29:57 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 15:29:57 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 15:29:57 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 15:29:57 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.LocalTransformer:

var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.OutputTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:29:57 [DEBUG] ReferenceTransformer: "output.template_values" references: []
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:29:57 [DEBUG] Starting graph walk: walkApply
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.subnet_count"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:29:57 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:29:57 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:29:57 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:29:57 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:29:57 [TRACE] [walkApply] Entering eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:29:57 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:29:57 [TRACE] [walkApply] Exiting eval tree: output.template_values
2017/12/28 15:29:57 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:29:57 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:29:57 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:57 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:29:57 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:29:57 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:29:57 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:29:57 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:29:57 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:29:57 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:29:57 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T15:29:57.717-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-28T15:29:57.726-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017/12/28 15:31:23 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 15:31:23 [INFO] Go runtime version: go1.9
2017/12/28 15:31:23 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 15:31:23 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 15:31:23 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 15:31:23 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 15:31:23 [INFO] CLI command args: []string{"apply"}
2017/12/28 15:31:23 [INFO] command: empty terraform config, returning nil
2017/12/28 15:31:23 [DEBUG] command: no data state file found for backend config
2017/12/28 15:31:23 [DEBUG] New state was assigned lineage "846ca8e9-3928-4ae2-ae33-baccee6aeb9f"
2017/12/28 15:31:23 [INFO] command: backend initialized: <nil>
2017/12/28 15:31:23 [DEBUG] checking for provider in "."
2017/12/28 15:31:23 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:31:23 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:31:23 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:31:23 [DEBUG] found valid plugin: "template"
2017/12/28 15:31:23 [DEBUG] checking for provisioner in "."
2017/12/28 15:31:23 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:31:23 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:31:23 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 15:31:23 [INFO] backend/local: starting Apply operation
2017/12/28 15:31:23 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:31:23 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:31:23 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 15:31:23 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:23 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:31:23 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:31:23 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042340070), RawConfig:(*config.RawConfig)(0xc0422eaa10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:23 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042382640), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Attach provider request: []string{} template
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [DEBUG] Starting graph walk: walkInput
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:31:23 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:31:23 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:31:23 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:31:23 [TRACE] [walkInput] Entering eval tree: provider.template
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T15:31:23.846-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe args=[C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe]
2017-12-28T15:31:23.906-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017-12-28T15:31:23.928-0500 [DEBUG] plugin.terraform-provider-template_v1.0.0_x4.exe: 2017/12/28 15:31:23 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] [walkInput] Exiting eval tree: provider.template
2017/12/28 15:31:23 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:31:23 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:31:23 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:31:23 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:31:23 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:31:23 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:31:23 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:31:23 [TRACE] [walkInput] Entering eval tree: output.template_values
2017/12/28 15:31:23 [TRACE] [walkInput] Entering eval tree: provider.template (close)
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:31:23 [TRACE] [walkInput] Exiting eval tree: provider.template (close)
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] [walkInput] Exiting eval tree: output.template_values
2017/12/28 15:31:23 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:23 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:31:23 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:31:23 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:31:23 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:31:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:31:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:31:23 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 15:31:23 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:23 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:31:23 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:31:23 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042340070), RawConfig:(*config.RawConfig)(0xc0422eaa10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:23 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042382640), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Attach provider request: []string{} template
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:23 [DEBUG] Starting graph walk: walkValidate
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:31:23 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:31:23 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:31:23 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:31:23 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:31:23 [TRACE] [walkValidate] Entering eval tree: provider.template
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] [walkValidate] Exiting eval tree: provider.template
2017/12/28 15:31:23 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:31:23 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:31:23 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:31:23 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:31:23 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:31:23 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042382640), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:23 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0423825f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:31:23 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:31:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:31:23 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:23 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:31:23 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:23 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:31:23 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:23 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:31:23 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:31:23 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:31:23 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:31:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:31:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:31:23 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:31:23 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:31:23 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:31:23 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:31:23 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:31:23 [TRACE] [walkValidate] Entering eval tree: output.template_values
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:31:23 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2017/12/28 15:31:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:23 [TRACE] [walkValidate] Exiting eval tree: output.template_values
2017/12/28 15:31:23 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:23 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:31:23 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:31:23 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:31:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:31:23 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:31:23 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:31:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:31:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:31:47 [INFO] backend/local: apply calling Refresh
2017/12/28 15:31:47 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 15:31:47 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 15:31:47 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:31:47 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224db80), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:31:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:31:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:31:47 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042340070), RawConfig:(*config.RawConfig)(0xc0422eaa10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Attach provider request: []string{} template
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "root" waiting on "output.template_values"
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:31:47 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:31:47 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:31:47 [TRACE] [walkRefresh] Entering eval tree: provider.template
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:31:47 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2017/12/28 15:31:47 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:31:47 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:31:47 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:31:47 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:31:47 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[1]
2017/12/28 15:31:47 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[0]
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:31:47 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224db80), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:47 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224db30), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:31:47 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:31:47 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:31:47 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:31:47 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:31:47 [TRACE] dag/walk: walking "root"
2017/12/28 15:31:47 [TRACE] vertex 'root.root': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:31:47 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:31:47 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:31:47 [TRACE] [walkRefresh] Entering eval tree: output.template_values
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:31:47 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:31:47 [TRACE] [walkRefresh] Entering eval tree: provider.template (close)
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:31:47 [TRACE] [walkRefresh] Exiting eval tree: provider.template (close)
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] [walkRefresh] Exiting eval tree: output.template_values
2017/12/28 15:31:47 [TRACE] dag/walk: walking "root"
2017/12/28 15:31:47 [TRACE] vertex 'root.root': walking
2017/12/28 15:31:47 [INFO] backend/local: apply calling Plan
2017/12/28 15:31:47 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 15:31:47 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:31:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:31:47 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042340070), RawConfig:(*config.RawConfig)(0xc0422eaa10), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:47 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042382b90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Attach provider request: []string{} template
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [DEBUG] Starting graph walk: walkPlan
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:31:47 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:31:47 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:31:47 [TRACE] [walkPlan] Entering eval tree: provider.template
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:31:47 [TRACE] [walkPlan] Exiting eval tree: provider.template
2017/12/28 15:31:47 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:31:47 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:31:47 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:31:47 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:31:47 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[0]
2017/12/28 15:31:47 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[1]
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:31:47 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042382b90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:47 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042382cd0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:31:47 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:47 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:31:47 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:31:47 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:31:47 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:31:47 [TRACE] dag/walk: walking "root"
2017/12/28 15:31:47 [TRACE] vertex 'root.root': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:31:47 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:31:47 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:31:47 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:31:47 [TRACE] [walkPlan] Entering eval tree: output.template_values
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:31:47 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:31:47 [TRACE] [walkPlan] Entering eval tree: provider.template (close)
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:31:47 [TRACE] [walkPlan] Exiting eval tree: provider.template (close)
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] [walkPlan] Exiting eval tree: output.template_values
2017/12/28 15:31:47 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:31:47 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:31:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:31:47 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:31:47 [TRACE] dag/walk: walking "root"
2017/12/28 15:31:47 [TRACE] vertex 'root.root': walking
2017/12/28 15:31:47 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 15:31:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 15:31:47 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 15:31:47 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 15:31:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.LocalTransformer:

var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.OutputTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:31:47 [DEBUG] ReferenceTransformer: "output.template_values" references: []
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:31:47 [DEBUG] Starting graph walk: walkApply
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:47 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.subnet_count"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:31:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:31:47 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:31:47 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:31:47 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:31:47 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:31:47 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:31:47 [TRACE] [walkApply] Entering eval tree: output.template_values
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:31:47 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:31:47 [TRACE] [walkApply] Exiting eval tree: output.template_values
2017/12/28 15:31:47 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:31:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:31:47 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:31:47 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:31:47 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:31:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:31:47 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:31:47 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:31:47 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:31:47 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:31:47 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:31:47 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T15:31:47.394-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-28T15:31:47.405-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017/12/28 15:32:20 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 15:32:20 [INFO] Go runtime version: go1.9
2017/12/28 15:32:20 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 15:32:20 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 15:32:20 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 15:32:20 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 15:32:20 [INFO] CLI command args: []string{"apply"}
2017/12/28 15:32:20 [INFO] command: empty terraform config, returning nil
2017/12/28 15:32:20 [DEBUG] command: no data state file found for backend config
2017/12/28 15:32:20 [DEBUG] New state was assigned lineage "7c9bd481-6120-44f8-9f18-c1126dd3a6ee"
2017/12/28 15:32:20 [INFO] command: backend initialized: <nil>
2017/12/28 15:32:20 [DEBUG] checking for provider in "."
2017/12/28 15:32:20 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:32:20 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:32:20 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:32:20 [DEBUG] found valid plugin: "template"
2017/12/28 15:32:20 [DEBUG] checking for provisioner in "."
2017/12/28 15:32:20 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:32:20 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:32:20 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 15:32:20 [INFO] backend/local: starting Apply operation
2017/12/28 15:32:20 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:32:20 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:32:20 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 15:32:20 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:20 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:32:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:32:20 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422ecc40), RawConfig:(*config.RawConfig)(0xc0422ecb60), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:20 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Attach provider request: []string{} template
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [DEBUG] Starting graph walk: walkInput
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:32:20 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:32:20 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:32:20 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:32:20 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:32:20 [TRACE] [walkInput] Entering eval tree: provider.template
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T15:32:20.087-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe args=[C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe]
2017-12-28T15:32:20.140-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017-12-28T15:32:20.161-0500 [DEBUG] plugin.terraform-provider-template_v1.0.0_x4.exe: 2017/12/28 15:32:20 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] [walkInput] Exiting eval tree: provider.template
2017/12/28 15:32:20 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:32:20 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:32:20 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:32:20 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:32:20 [TRACE] [walkInput] Entering eval tree: output.template_values
2017/12/28 15:32:20 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:32:20 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:32:20 [TRACE] [walkInput] Entering eval tree: provider.template (close)
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:32:20 [TRACE] [walkInput] Exiting eval tree: provider.template (close)
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] [walkInput] Exiting eval tree: output.template_values
2017/12/28 15:32:20 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:20 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:32:20 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:32:20 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:32:20 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:32:20 [TRACE] dag/walk: walking "root"
2017/12/28 15:32:20 [TRACE] vertex 'root.root': walking
2017/12/28 15:32:20 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 15:32:20 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:20 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:32:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:32:20 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422ecc40), RawConfig:(*config.RawConfig)(0xc0422ecb60), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:20 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Attach provider request: []string{} template
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:20 [DEBUG] Starting graph walk: walkValidate
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:32:20 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:32:20 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:32:20 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:32:20 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:32:20 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:32:20 [TRACE] [walkValidate] Entering eval tree: provider.template
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] [walkValidate] Exiting eval tree: provider.template
2017/12/28 15:32:20 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:32:20 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:32:20 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:32:20 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:32:20 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:32:20 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334870), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:20 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:32:20 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:32:20 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:20 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:20 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:20 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:32:20 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:20 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:32:20 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:20 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:32:20 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:20 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:32:20 [TRACE] [walkValidate] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:32:20 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:32:20 [TRACE] [walkValidate] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:32:20 [TRACE] dag/walk: walking "root"
2017/12/28 15:32:20 [TRACE] vertex 'root.root': walking
2017/12/28 15:32:20 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:32:20 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:32:20 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:32:20 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2017/12/28 15:32:20 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:32:20 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:32:20 [TRACE] [walkValidate] Entering eval tree: output.template_values
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:32:20 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:20 [TRACE] [walkValidate] Exiting eval tree: output.template_values
2017/12/28 15:32:20 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:20 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:32:20 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:32:20 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:32:20 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:32:20 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:32:20 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:32:20 [TRACE] dag/walk: walking "root"
2017/12/28 15:32:20 [TRACE] vertex 'root.root': walking
2017/12/28 15:32:43 [INFO] backend/local: apply calling Refresh
2017/12/28 15:32:43 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 15:32:43 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 15:32:43 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:32:43 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224a500), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:32:43 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:32:43 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:32:43 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422ecc40), RawConfig:(*config.RawConfig)(0xc0422ecb60), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Attach provider request: []string{} template
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.template_values - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "root" waiting on "output.template_values"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:32:43 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:32:43 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:32:43 [TRACE] [walkRefresh] Entering eval tree: provider.template
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:32:43 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:32:43 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2017/12/28 15:32:43 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:32:43 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:32:43 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:32:43 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:32:43 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[0]
2017/12/28 15:32:43 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[1]
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:32:43 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224a500), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:43 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04224a550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:32:43 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:43 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:32:43 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:32:43 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:32:43 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:32:43 [TRACE] dag/walk: walking "root"
2017/12/28 15:32:43 [TRACE] vertex 'root.root': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:32:43 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:32:43 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:32:43 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:32:43 [TRACE] [walkRefresh] Entering eval tree: output.template_values
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:32:43 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:32:43 [TRACE] [walkRefresh] Entering eval tree: provider.template (close)
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:32:43 [TRACE] [walkRefresh] Exiting eval tree: provider.template (close)
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] [walkRefresh] Exiting eval tree: output.template_values
2017/12/28 15:32:43 [TRACE] dag/walk: walking "root"
2017/12/28 15:32:43 [TRACE] vertex 'root.root': walking
2017/12/28 15:32:43 [INFO] backend/local: apply calling Plan
2017/12/28 15:32:43 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 15:32:43 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:43 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:32:43 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet
2017/12/28 15:32:43 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422ecc40), RawConfig:(*config.RawConfig)(0xc0422ecb60), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:43 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334a50), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Attach provider request: []string{} template
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.template_values - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "output.template_values" references: [data.template_file.cidrsubnet]
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  output.template_values - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
output.template_values - *terraform.NodeApplyableOutput
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [DEBUG] Starting graph walk: walkPlan
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "provider.template"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "output.template_values" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "output.template_values", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:32:43 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:32:43 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:32:43 [TRACE] [walkPlan] Entering eval tree: provider.template
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:32:43 [TRACE] [walkPlan] Exiting eval tree: provider.template
2017/12/28 15:32:43 [TRACE] dag/walk: walking "data.template_file.cidrsubnet"
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet': evaluating
2017/12/28 15:32:43 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:32:43 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:32:43 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:32:43 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[0]
2017/12/28 15:32:43 [TRACE] OrphanResourceCount: Checking: data.template_file.cidrsubnet[1]
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:32:43 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334a50), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:43 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042334af0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.cidrsubnet[0] - *terraform.NodePlannableResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:32:43 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:43 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:32:43 [TRACE] [walkPlan] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:32:43 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:32:43 [TRACE] [walkPlan] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:32:43 [TRACE] dag/walk: walking "root"
2017/12/28 15:32:43 [TRACE] vertex 'root.root': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:32:43 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:32:43 [TRACE] [walkPlan] Entering eval tree: provider.template (close)
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:32:43 [TRACE] [walkPlan] Exiting eval tree: provider.template (close)
2017/12/28 15:32:43 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:32:43 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:32:43 [TRACE] [walkPlan] Entering eval tree: output.template_values
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] [walkPlan] Exiting eval tree: output.template_values
2017/12/28 15:32:43 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:43 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:32:43 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:32:43 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:32:43 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:32:43 [TRACE] dag/walk: walking "root"
2017/12/28 15:32:43 [TRACE] vertex 'root.root': walking
2017/12/28 15:32:43 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

2017/12/28 15:32:43 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ProviderTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.DisableProviderTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

2017/12/28 15:32:43 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

2017/12/28 15:32:43 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ProvisionerTransformer:

2017/12/28 15:32:43 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.LocalTransformer:

var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.OutputTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "output.template_values" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:32:43 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.template_values - *terraform.NodeApplyableOutput
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.template_values - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:32:43 [DEBUG] Starting graph walk: walkApply
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "output.template_values"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:43 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values"
2017/12/28 15:32:43 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.subnet_count"
2017/12/28 15:32:43 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:32:43 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:32:43 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:32:43 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:32:43 [TRACE] dag/walk: walking "output.template_values"
2017/12/28 15:32:43 [TRACE] vertex 'root.output.template_values': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.output.template_values': evaluating
2017/12/28 15:32:43 [TRACE] [walkApply] Entering eval tree: output.template_values
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:32:43 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:32:43 [TRACE] [walkApply] Exiting eval tree: output.template_values
2017/12/28 15:32:43 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:32:43 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:32:43 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:32:43 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:32:43 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:32:43 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:32:43 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:32:43 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:32:43 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:32:43 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:32:43 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:32:43 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T15:32:43.600-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017/12/28 15:37:55 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 15:37:55 [INFO] Go runtime version: go1.9
2017/12/28 15:37:55 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 15:37:55 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 15:37:55 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 15:37:55 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 15:37:55 [INFO] CLI command args: []string{"apply"}
2017/12/28 15:37:55 [INFO] command: empty terraform config, returning nil
2017/12/28 15:37:55 [DEBUG] command: no data state file found for backend config
2017/12/28 15:37:55 [DEBUG] New state was assigned lineage "efc9aa08-f1b1-48df-b4df-dfa337311988"
2017/12/28 15:37:55 [INFO] command: backend initialized: <nil>
2017/12/28 15:37:55 [DEBUG] checking for provider in "."
2017/12/28 15:37:55 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:37:55 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:37:55 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:37:55 [DEBUG] found valid plugin: "template"
2017/12/28 15:37:55 [DEBUG] checking for provisioner in "."
2017/12/28 15:37:55 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:37:55 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:37:55 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 15:37:55 [INFO] backend/local: starting Apply operation
2017/12/28 15:37:55 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:37:55 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:37:55 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 15:37:55 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[0]
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[1]
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.private_cidrsubnet
2017/12/28 15:37:55 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"private_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042368070), RawConfig:(*config.RawConfig)(0xc042305c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.public_cidrsubnet
2017/12/28 15:37:55 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"public_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0421b8e00), RawConfig:(*config.RawConfig)(0xc042368150), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:37:55 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet": data.template_file.private_cidrsubnet
2017/12/28 15:37:55 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet": data.template_file.public_cidrsubnet
2017/12/28 15:37:55 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206f810), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:37:55 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206f860), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Attach provider request: []string{} template
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "output.public" references: [data.template_file.public_cidrsubnet]
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "output.private" references: [data.template_file.private_cidrsubnet]
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [DEBUG] Starting graph walk: walkInput
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "output.private"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "output.public"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.private"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[0]" waiting on "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[1]" waiting on "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "output.private" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "output.public" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.public"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[0]", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[1]", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "data.template_file.private_cidrsubnet", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "data.template_file.public_cidrsubnet", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "output.private", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "output.public", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:37:55 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:37:55 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:37:55 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:37:55 [TRACE] [walkInput] Entering eval tree: provider.template
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T15:37:55.716-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe args=[C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe]
2017-12-28T15:37:55.783-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017-12-28T15:37:55.798-0500 [DEBUG] plugin.terraform-provider-template_v1.0.0_x4.exe: 2017/12/28 15:37:55 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] [walkInput] Exiting eval tree: provider.template
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet"
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet"
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "output.public"
2017/12/28 15:37:55 [TRACE] vertex 'root.output.public': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "output.private"
2017/12/28 15:37:55 [TRACE] vertex 'root.output.private': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:37:55 [TRACE] vertex 'root.output.public': evaluating
2017/12/28 15:37:55 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:37:55 [TRACE] [walkInput] Entering eval tree: output.public
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:37:55 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:37:55 [TRACE] [walkInput] Entering eval tree: provider.template (close)
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:37:55 [TRACE] [walkInput] Exiting eval tree: provider.template (close)
2017/12/28 15:37:55 [TRACE] vertex 'root.output.private': evaluating
2017/12/28 15:37:55 [TRACE] [walkInput] Entering eval tree: output.private
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] [walkInput] Exiting eval tree: output.public
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] [walkInput] Exiting eval tree: output.private
2017/12/28 15:37:55 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:37:55 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:37:55 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:37:55 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:37:55 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:37:55 [TRACE] dag/walk: walking "root"
2017/12/28 15:37:55 [TRACE] vertex 'root.root': walking
2017/12/28 15:37:55 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 15:37:55 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.private_cidrsubnet
2017/12/28 15:37:55 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"private_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042368070), RawConfig:(*config.RawConfig)(0xc042305c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.public_cidrsubnet
2017/12/28 15:37:55 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"public_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0421b8e00), RawConfig:(*config.RawConfig)(0xc042368150), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[0]
2017/12/28 15:37:55 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[1]
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:37:55 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet": data.template_file.public_cidrsubnet
2017/12/28 15:37:55 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206f810), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:37:55 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206f860), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:37:55 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet": data.template_file.private_cidrsubnet
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Attach provider request: []string{} template
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "output.public" references: [data.template_file.public_cidrsubnet]
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "output.private" references: [data.template_file.private_cidrsubnet]
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:37:55 [DEBUG] Starting graph walk: walkValidate
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "output.public"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "output.private"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "output.public" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "output.private" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.private"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[0]" waiting on "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[1]" waiting on "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.public"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[0]", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "output.public", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "output.private", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "data.template_file.private_cidrsubnet", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[1]", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "data.template_file.public_cidrsubnet", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:37:55 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:37:55 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:37:55 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: provider.template
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: provider.template
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet"
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet"
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': evaluating
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': evaluating
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet[0]": data.template_file.public_cidrsubnet[0]
2017/12/28 15:37:55 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet[0]": data.template_file.private_cidrsubnet[0]
2017/12/28 15:37:55 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet[1]": data.template_file.private_cidrsubnet[1]
2017/12/28 15:37:55 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet[1]": data.template_file.public_cidrsubnet[1]
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[1]" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[0]" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[0]" references: []
2017/12/28 15:37:55 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[1]" references: []
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:37:55 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': evaluating
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': evaluating
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': evaluating
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': evaluating
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:37:55 [TRACE] dag/walk: walking "root"
2017/12/28 15:37:55 [TRACE] vertex 'root.root': walking
2017/12/28 15:37:55 [TRACE] dag/walk: walking "output.private"
2017/12/28 15:37:55 [TRACE] vertex 'root.output.private': walking
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:37:55 [TRACE] dag/walk: walking "root"
2017/12/28 15:37:55 [TRACE] vertex 'root.root': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.output.private': evaluating
2017/12/28 15:37:55 [TRACE] dag/walk: walking "output.public"
2017/12/28 15:37:55 [TRACE] vertex 'root.output.public': walking
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: output.private
2017/12/28 15:37:55 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:37:55 [TRACE] vertex 'root.output.public': evaluating
2017/12/28 15:37:55 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: output.public
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: output.private
2017/12/28 15:37:55 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: output.public
2017/12/28 15:37:55 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:37:55 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:37:55 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:37:55 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:37:55 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:37:55 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:37:55 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:37:55 [TRACE] dag/walk: walking "root"
2017/12/28 15:37:55 [TRACE] vertex 'root.root': walking
2017/12/28 15:38:19 [INFO] backend/local: apply calling Refresh
2017/12/28 15:38:19 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 15:38:19 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 15:38:19 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:38:19 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04206f130), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:38:19 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet": data.template_file.private_cidrsubnet
2017/12/28 15:38:19 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet": data.template_file.public_cidrsubnet
2017/12/28 15:38:19 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04223cdc0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:38:19 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:38:19 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.private_cidrsubnet
2017/12/28 15:38:19 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"private_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc042368070), RawConfig:(*config.RawConfig)(0xc042305c70), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:38:19 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.public_cidrsubnet
2017/12/28 15:38:19 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"public_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0421b8e00), RawConfig:(*config.RawConfig)(0xc042368150), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:38:19 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[0]
2017/12/28 15:38:19 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[1]
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Attach provider request: []string{} template
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "output.private" references: [data.template_file.private_cidrsubnet]
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "output.public" references: [data.template_file.public_cidrsubnet]
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:19 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "output.private"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "output.public"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "root" waiting on "output.private"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "output.public" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "provider.template"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[0]" waiting on "provider.template"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "output.private" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "root" waiting on "output.public"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "provider.template"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[1]" waiting on "provider.template"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "data.template_file.public_cidrsubnet", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[0]", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "output.private", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[1]", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "output.public", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "data.template_file.private_cidrsubnet", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:38:19 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:38:19 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:38:19 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:38:19 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:38:19 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:38:19 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: provider.template
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:38:19 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:19 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2017/12/28 15:38:19 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:38:19 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet"
2017/12/28 15:38:19 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet"
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': walking
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': walking
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': evaluating
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': evaluating
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet[0]": data.template_file.private_cidrsubnet[0]
2017/12/28 15:38:19 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet[1]": data.template_file.private_cidrsubnet[1]
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[1]" references: []
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[0]" references: []
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:38:19 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:38:19 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': walking
2017/12/28 15:38:19 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': walking
2017/12/28 15:38:19 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet[0]": data.template_file.public_cidrsubnet[0]
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': evaluating
2017/12/28 15:38:19 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet[1]": data.template_file.public_cidrsubnet[1]
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': evaluating
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[0]" references: []
2017/12/28 15:38:19 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[1]" references: []
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:38:19 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': walking
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:38:19 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': evaluating
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:19 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': walking
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:38:19 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:38:19 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': evaluating
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:38:19 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:38:19 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:38:19 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.template_file.private_cidrsubnet.0: failed to render : parse error at 1:38: expected ")" but found "}"
2017/12/28 15:38:19 [ERROR] root: eval: *terraform.EvalReadDataApply, err: data.template_file.private_cidrsubnet.1: failed to render : parse error at 1:38: expected ")" but found "}"
2017/12/28 15:38:19 [ERROR] root: eval: *terraform.EvalSequence, err: data.template_file.private_cidrsubnet.1: failed to render : parse error at 1:38: expected ")" but found "}"
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:38:19 [ERROR] root: eval: *terraform.EvalSequence, err: data.template_file.private_cidrsubnet.0: failed to render : parse error at 1:38: expected ")" but found "}"
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:38:19 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:38:19 [TRACE] dag/walk: walking "root"
2017/12/28 15:38:19 [TRACE] vertex 'root.root': walking
2017/12/28 15:38:19 [TRACE] dag/walk: upstream errored, not walking "provider.template (close)"
2017/12/28 15:38:19 [TRACE] dag/walk: upstream errored, not walking "output.private"
2017/12/28 15:38:19 [TRACE] dag/walk: walking "output.public"
2017/12/28 15:38:19 [TRACE] vertex 'root.output.public': walking
2017/12/28 15:38:19 [TRACE] vertex 'root.output.public': evaluating
2017/12/28 15:38:19 [TRACE] [walkRefresh] Entering eval tree: output.public
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:19 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:19 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:38:19 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:19 [TRACE] [walkRefresh] Exiting eval tree: output.public
2017/12/28 15:38:19 [TRACE] dag/walk: upstream errored, not walking "root"
2017/12/28 15:38:19 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T15:38:19.155-0500 [WARN ] plugin: error closing client during Kill: err="unexpected EOF"
2017-12-28T15:38:19.166-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017/12/28 15:38:59 [INFO] Terraform version: 0.10.8  44110772d9ffd0ec3589943c6d4c93c24a5fff06
2017/12/28 15:38:59 [INFO] Go runtime version: go1.9
2017/12/28 15:38:59 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2017/12/28 15:38:59 [DEBUG] Attempting to open CLI config file: C:\Users\nbellavance\AppData\Roaming\terraform.rc
2017/12/28 15:38:59 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/12/28 15:38:59 [DEBUG] CLI config is &main.Config{Providers:map[string]string{}, Provisioners:map[string]string{}, DisableCheckpoint:false, DisableCheckpointSignature:false, PluginCacheDir:"", Credentials:map[string]map[string]interface {}(nil), CredentialsHelpers:map[string]*main.ConfigCredentialsHelper(nil)}
2017/12/28 15:38:59 [INFO] CLI command args: []string{"apply"}
2017/12/28 15:38:59 [INFO] command: empty terraform config, returning nil
2017/12/28 15:38:59 [DEBUG] command: no data state file found for backend config
2017/12/28 15:38:59 [DEBUG] New state was assigned lineage "5dc21fca-e7e5-439e-abae-baa07aeb447c"
2017/12/28 15:38:59 [INFO] command: backend initialized: <nil>
2017/12/28 15:38:59 [DEBUG] checking for provider in "."
2017/12/28 15:38:59 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:38:59 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:38:59 [DEBUG] found provider "terraform-provider-template_v1.0.0_x4.exe"
2017/12/28 15:38:59 [DEBUG] found valid plugin: "template"
2017/12/28 15:38:59 [DEBUG] checking for provisioner in "."
2017/12/28 15:38:59 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2017/12/28 15:38:59 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2017/12/28 15:38:59 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/12/28 15:38:59 [INFO] backend/local: starting Apply operation
2017/12/28 15:38:59 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:38:59 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:38:59 [INFO] terraform: building graph: GraphTypeInput
2017/12/28 15:38:59 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[0]
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[1]
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.private_cidrsubnet
2017/12/28 15:38:59 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"private_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422dca80), RawConfig:(*config.RawConfig)(0xc0422dc9a0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.public_cidrsubnet
2017/12/28 15:38:59 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"public_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422dcc40), RawConfig:(*config.RawConfig)(0xc0422dcb60), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:38:59 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet": data.template_file.private_cidrsubnet
2017/12/28 15:38:59 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet": data.template_file.public_cidrsubnet
2017/12/28 15:38:59 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042326b40), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:38:59 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042326b90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Attach provider request: []string{} template
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "output.public" references: [data.template_file.public_cidrsubnet]
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "output.private" references: [data.template_file.private_cidrsubnet]
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeAbstractResource
  data.template_file.public_cidrsubnet - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [DEBUG] Starting graph walk: walkInput
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "output.public"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "output.private"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.private"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "output.private" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[1]" waiting on "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[0]" waiting on "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "output.public" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.public"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "data.template_file.public_cidrsubnet", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[0]", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[1]", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "output.public", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "output.private", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "data.template_file.private_cidrsubnet", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:38:59 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:38:59 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:38:59 [TRACE] [walkInput] Entering eval tree: provider.template
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInitProvider
2017-12-28T15:38:59.652-0500 [DEBUG] plugin: starting plugin: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe args=[C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe]
2017-12-28T15:38:59.695-0500 [DEBUG] plugin: waiting for RPC address: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
2017-12-28T15:38:59.707-0500 [DEBUG] plugin.terraform-provider-template_v1.0.0_x4.exe: 2017/12/28 15:38:59 [DEBUG] plugin: plugin address: tcp 127.0.0.1:10000
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInputProvider
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] [walkInput] Exiting eval tree: provider.template
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet"
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "output.public"
2017/12/28 15:38:59 [TRACE] vertex 'root.output.public': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "output.private"
2017/12/28 15:38:59 [TRACE] vertex 'root.output.private': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:38:59 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.output.public': evaluating
2017/12/28 15:38:59 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:38:59 [TRACE] [walkInput] Entering eval tree: output.public
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:38:59 [TRACE] vertex 'root.output.private': evaluating
2017/12/28 15:38:59 [TRACE] [walkInput] Entering eval tree: output.private
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] [walkInput] Exiting eval tree: output.private
2017/12/28 15:38:59 [TRACE] [walkInput] Exiting eval tree: output.public
2017/12/28 15:38:59 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:38:59 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:38:59 [TRACE] [walkInput] Entering eval tree: provider.template (close)
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:38:59 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:38:59 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:38:59 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:38:59 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:38:59 [TRACE] [walkInput] Exiting eval tree: provider.template (close)
2017/12/28 15:38:59 [TRACE] dag/walk: walking "root"
2017/12/28 15:38:59 [TRACE] vertex 'root.root': walking
2017/12/28 15:38:59 [INFO] terraform: building graph: GraphTypeValidate
2017/12/28 15:38:59 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.private_cidrsubnet
2017/12/28 15:38:59 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"private_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422dca80), RawConfig:(*config.RawConfig)(0xc0422dc9a0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.public_cidrsubnet
2017/12/28 15:38:59 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"public_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422dcc40), RawConfig:(*config.RawConfig)(0xc0422dcb60), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[0]
2017/12/28 15:38:59 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[1]
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:38:59 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet": data.template_file.public_cidrsubnet
2017/12/28 15:38:59 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042326b40), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:38:59 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042326b90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:38:59 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet": data.template_file.private_cidrsubnet
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Attach provider request: []string{} template
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.graphTransformerMulti:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "output.private" references: [data.template_file.private_cidrsubnet]
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "output.public" references: [data.template_file.public_cidrsubnet]
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeAbstractResource
  data.template_file.cidrsubnet[1] - *terraform.NodeAbstractResource
  data.template_file.private_cidrsubnet - *terraform.NodeValidatableResource
  data.template_file.public_cidrsubnet - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:38:59 [DEBUG] Starting graph walk: walkValidate
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "output.private"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "output.public"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "output.private" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.public"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[0]" waiting on "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "output.public" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[1]" waiting on "provider.template"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.private"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "output.private", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "data.template_file.public_cidrsubnet", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[0]", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "output.public", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "data.template_file.private_cidrsubnet", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[1]", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:38:59 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: provider.template
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:38:59 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:38:59 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:38:59 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: provider.template
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet"
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet"
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateCount
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet[0]": data.template_file.private_cidrsubnet[0]
2017/12/28 15:38:59 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet[0]": data.template_file.public_cidrsubnet[0]
2017/12/28 15:38:59 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet[1]": data.template_file.private_cidrsubnet[1]
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet[1]": data.template_file.public_cidrsubnet[1]
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[0]" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[1]" references: []
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[0]" references: []
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[1]" references: []
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.public_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.public_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.private_cidrsubnet[0] - *terraform.NodeValidatableResourceInstance
  data.template_file.private_cidrsubnet[1] - *terraform.NodeValidatableResourceInstance
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:38:59 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:38:59 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': walking
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:38:59 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalValidateResource
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:38:59 [TRACE] dag/walk: walking "root"
2017/12/28 15:38:59 [TRACE] vertex 'root.root': walking
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:38:59 [TRACE] dag/walk: walking "output.public"
2017/12/28 15:38:59 [TRACE] vertex 'root.output.public': walking
2017/12/28 15:38:59 [TRACE] dag/walk: walking "root"
2017/12/28 15:38:59 [TRACE] vertex 'root.root': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.output.public': evaluating
2017/12/28 15:38:59 [TRACE] dag/walk: walking "output.private"
2017/12/28 15:38:59 [TRACE] vertex 'root.output.private': walking
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: output.public
2017/12/28 15:38:59 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:38:59 [TRACE] vertex 'root.output.private': evaluating
2017/12/28 15:38:59 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: output.private
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:38:59 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: output.public
2017/12/28 15:38:59 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: output.private
2017/12/28 15:38:59 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:38:59 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:38:59 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:38:59 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:38:59 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:38:59 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.cidrsubnet", replace "data.template_file.cidrsubnet.0"
2017/12/28 15:38:59 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:38:59 [TRACE] dag/walk: walking "root"
2017/12/28 15:38:59 [TRACE] vertex 'root.root': walking
2017/12/28 15:39:23 [INFO] backend/local: apply calling Refresh
2017/12/28 15:39:23 [INFO] terraform: building graph: GraphTypeRefresh
2017/12/28 15:39:23 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/12/28 15:39:23 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:39:23 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet": data.template_file.public_cidrsubnet
2017/12/28 15:39:23 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc0422409b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:39:23 [DEBUG] Attaching resource state to "data.template_file.cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc042240a00), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:39:23 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet": data.template_file.private_cidrsubnet
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.public_cidrsubnet
2017/12/28 15:39:23 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"public_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422dcc40), RawConfig:(*config.RawConfig)(0xc0422dcb60), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.private_cidrsubnet
2017/12/28 15:39:23 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"private_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422dca80), RawConfig:(*config.RawConfig)(0xc0422dc9a0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Attach provider request: []string{} template
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[0]" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "output.public" references: [data.template_file.public_cidrsubnet]
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.cidrsubnet[1]" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "output.private" references: [data.template_file.private_cidrsubnet]
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  provider.template - *terraform.NodeApplyableProvider
data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.cidrsubnet[0] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.cidrsubnet[1] - *terraform.NodeRefreshableManagedResourceInstance
  data.template_file.private_cidrsubnet - *terraform.NodeRefreshableDataResource
  data.template_file.public_cidrsubnet - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [DEBUG] Starting graph walk: walkRefresh
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "output.private"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "output.public"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "output.private"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "provider.template"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "output.public" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[0]" waiting on "provider.template"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.cidrsubnet[1]" waiting on "provider.template"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "output.private" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "output.public"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "provider.template"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "output.private", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "data.template_file.public_cidrsubnet", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "data.template_file.private_cidrsubnet", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "output.public", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[0]", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "data.template_file.cidrsubnet[1]", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:39:23 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:39:23 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: provider.template
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': evaluating
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': walking
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.cidrsubnet[1]': evaluating
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': evaluating
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.cidrsubnet[0]': evaluating
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:39:23 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet[0]": data.template_file.public_cidrsubnet[0]
2017/12/28 15:39:23 [DEBUG] Resource state not found for "data.template_file.public_cidrsubnet[1]": data.template_file.public_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[1]" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[0]" references: []
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.public_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.public_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': walking
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': evaluating
2017/12/28 15:39:23 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet[0]": data.template_file.private_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [DEBUG] Resource state not found for "data.template_file.private_cidrsubnet[1]": data.template_file.private_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': evaluating
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[0]" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[1]" references: []
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
root - terraform.graphNodeRoot
  data.template_file.private_cidrsubnet[0] - *terraform.NodeRefreshableDataResourceInstance
  data.template_file.private_cidrsubnet[1] - *terraform.NodeRefreshableDataResourceInstance
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': walking
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': evaluating
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': evaluating
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadDataDiff
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadDataApply
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:39:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] dag/walk: walking "output.public"
2017/12/28 15:39:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:39:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.output.public': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "output.private"
2017/12/28 15:39:23 [TRACE] vertex 'root.output.private': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:39:23 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.output.public': evaluating
2017/12/28 15:39:23 [TRACE] vertex 'root.output.private': evaluating
2017/12/28 15:39:23 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: output.public
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: provider.template (close)
2017/12/28 15:39:23 [TRACE] [walkRefresh] Entering eval tree: output.private
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: provider.template (close)
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: output.private
2017/12/28 15:39:23 [TRACE] [walkRefresh] Exiting eval tree: output.public
2017/12/28 15:39:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:39:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:39:23 [INFO] backend/local: apply calling Plan
2017/12/28 15:39:23 [INFO] terraform: building graph: GraphTypePlan
2017/12/28 15:39:23 [TRACE] ConfigTransformer: Starting for path: []
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.LocalTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OutputTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.private_cidrsubnet
2017/12/28 15:39:23 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"private_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422dca80), RawConfig:(*config.RawConfig)(0xc0422dc9a0), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Attach resource config request: data.template_file.public_cidrsubnet
2017/12/28 15:39:23 [TRACE] Attaching resource config: &config.Resource{Mode:1, Name:"public_cidrsubnet", Type:"template_file", RawCount:(*config.RawConfig)(0xc0422dcc40), RawConfig:(*config.RawConfig)(0xc0422dcb60), Provisioners:[]*config.Provisioner{}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:39:23 [DEBUG] Attaching resource state to "data.template_file.private_cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222cf00), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:39:23 [DEBUG] Attaching resource state to "data.template_file.public_cidrsubnet": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222ceb0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootVariableTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.MissingProviderTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ProviderTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.DisableProviderTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ParentProviderTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Attach provider request: []string{} template
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "output.private" references: [data.template_file.private_cidrsubnet]
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "output.public" references: [data.template_file.public_cidrsubnet]
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "provider.template" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet" references: [var.subnet_count var.vpc_cidr]
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.CloseProviderTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
output.private - *terraform.NodeApplyableOutput
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
output.public - *terraform.NodeApplyableOutput
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.private_cidrsubnet - *terraform.NodePlannableResource
  data.template_file.public_cidrsubnet - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.template (close) - *terraform.graphNodeCloseProvider
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [DEBUG] Starting graph walk: walkPlan
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "provider.template"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "output.public"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "output.private"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.public"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "output.private" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "provider.template"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "provider.template"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.private_cidrsubnet" waiting on "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.private_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.private"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "data.template_file.public_cidrsubnet" waiting on "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "output.public" waiting on "data.template_file.public_cidrsubnet"
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "data.template_file.public_cidrsubnet", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "output.private", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "data.template_file.private_cidrsubnet", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "output.public", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "provider.template"
2017/12/28 15:39:23 [TRACE] vertex 'root.provider.template': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.provider.template': evaluating
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: provider.template
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInitProvider
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalGetProvider
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: provider.template
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': evaluating
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': evaluating
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: data.template_file.private_cidrsubnet
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/12/28 15:39:23 [TRACE] OrphanResourceCount: Checking: data.template_file.private_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] OrphanResourceCount: Checking: data.template_file.private_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [DEBUG] Attaching resource state to "data.template_file.private_cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222cf00), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:39:23 [DEBUG] Attaching resource state to "data.template_file.private_cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222cf50), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[0]" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.private_cidrsubnet[1]" references: []
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.private_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.private_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.private_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
  data.template_file.private_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: data.template_file.public_cidrsubnet
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet': expanding/walking dynamic subgraph
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ResourceCountTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] OrphanResourceCount: Starting...
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:39:23 [TRACE] OrphanResourceCount: Checking: data.template_file.public_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] OrphanResourceCount: Checking: data.template_file.public_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': walking
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[1]': evaluating
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.private_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': walking
2017/12/28 15:39:23 [DEBUG] Attaching resource state to "data.template_file.public_cidrsubnet[0]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222ceb0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.private_cidrsubnet[0]': evaluating
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [DEBUG] Attaching resource state to "data.template_file.public_cidrsubnet[1]": &terraform.ResourceState{Type:"template_file", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc04222ce60), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: data.template_file.private_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: data.template_file.private_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TargetsTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:39:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "output.private"
2017/12/28 15:39:23 [TRACE] vertex 'root.output.private': walking
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[0]" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "data.template_file.public_cidrsubnet[1]" references: []
2017/12/28 15:39:23 [TRACE] vertex 'root.output.private': evaluating
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootTransformer:

data.template_file.public_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
data.template_file.public_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
root - terraform.graphNodeRoot
  data.template_file.public_cidrsubnet[0] - *terraform.NodePlannableResourceInstance
  data.template_file.public_cidrsubnet[1] - *terraform.NodePlannableResourceInstance
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "root"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: output.private
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "root" waiting on "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[0]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "data.template_file.public_cidrsubnet[1]"
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': walking
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: output.private
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[0]': evaluating
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] vertex 'root.data.template_file.public_cidrsubnet[1]': evaluating
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalReadState
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalInterpolate
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: data.template_file.public_cidrsubnet[0]
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalIf, err: early exit
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence, err: early exit
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: data.template_file.public_cidrsubnet[1]
2017/12/28 15:39:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:39:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "output.public"
2017/12/28 15:39:23 [TRACE] vertex 'root.output.public': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.output.public': evaluating
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: output.public
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:39:23 [TRACE] dag/walk: walking "provider.template (close)"
2017/12/28 15:39:23 [TRACE] vertex 'root.provider.template (close)': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.provider.template (close)': evaluating
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: provider.template (close)
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: output.public
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: provider.template (close)
2017/12/28 15:39:23 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:39:23 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:39:23 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:39:23 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.public_cidrsubnet", replace "data.template_file.public_cidrsubnet.0"
2017/12/28 15:39:23 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.private_cidrsubnet", replace "data.template_file.private_cidrsubnet.0"
2017/12/28 15:39:23 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:39:23 [TRACE] dag/walk: walking "root"
2017/12/28 15:39:23 [TRACE] vertex 'root.root': walking
2017/12/28 15:39:23 [INFO] terraform: building graph: GraphTypeApply
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.DiffTransformer:

2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachStateTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.MissingProviderTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ProviderTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.DisableProviderTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ParentProviderTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ProvisionerTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootVariableTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.LocalTransformer:

output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.OutputTransformer:

output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "output.public" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "output.template_values (orphan)" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "var.subnet_count" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "var.vpc_cidr" references: []
2017/12/28 15:39:23 [DEBUG] ReferenceTransformer: "output.private" references: []
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.ReferenceTransformer:

output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  output.template_values (orphan) - *terraform.NodeOutputOrphan
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TargetsTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  output.template_values (orphan) - *terraform.NodeOutputOrphan
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.CloseProviderTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  output.template_values (orphan) - *terraform.NodeOutputOrphan
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  output.template_values (orphan) - *terraform.NodeOutputOrphan
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.RootTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  output.template_values (orphan) - *terraform.NodeOutputOrphan
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  output.private - *terraform.NodeApplyableOutput
  output.public - *terraform.NodeApplyableOutput
  output.template_values (orphan) - *terraform.NodeOutputOrphan
  var.subnet_count - *terraform.NodeRootVariable
  var.vpc_cidr - *terraform.NodeRootVariable
output.private - *terraform.NodeApplyableOutput
output.public - *terraform.NodeApplyableOutput
output.template_values (orphan) - *terraform.NodeOutputOrphan
var.subnet_count - *terraform.NodeRootVariable
var.vpc_cidr - *terraform.NodeRootVariable
2017/12/28 15:39:23 [DEBUG] Starting graph walk: walkApply
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "output.private"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "output.public"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/12/28 15:39:23 [TRACE] dag/walk: added new vertex: "output.template_values (orphan)"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.subnet_count"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.private"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.public"
2017/12/28 15:39:23 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "output.template_values (orphan)"
2017/12/28 15:39:23 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/12/28 15:39:23 [TRACE] dag/walk: walking "var.vpc_cidr"
2017/12/28 15:39:23 [TRACE] vertex 'root.var.vpc_cidr': walking
2017/12/28 15:39:23 [TRACE] dag/walk: walking "output.private"
2017/12/28 15:39:23 [TRACE] vertex 'root.output.private': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.output.private': evaluating
2017/12/28 15:39:23 [TRACE] dag/walk: walking "output.public"
2017/12/28 15:39:23 [TRACE] vertex 'root.output.public': walking
2017/12/28 15:39:23 [TRACE] [walkApply] Entering eval tree: output.private
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:39:23 [TRACE] vertex 'root.output.public': evaluating
2017/12/28 15:39:23 [TRACE] [walkApply] Entering eval tree: output.public
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalSequence
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalWriteOutput
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] [walkApply] Exiting eval tree: output.private
2017/12/28 15:39:23 [TRACE] dag/walk: walking "output.template_values (orphan)"
2017/12/28 15:39:23 [TRACE] vertex 'root.output.template_values (orphan)': walking
2017/12/28 15:39:23 [TRACE] root: eval: terraform.EvalNoop
2017/12/28 15:39:23 [TRACE] dag/walk: walking "var.subnet_count"
2017/12/28 15:39:23 [TRACE] vertex 'root.var.subnet_count': walking
2017/12/28 15:39:23 [TRACE] [walkApply] Exiting eval tree: output.public
2017/12/28 15:39:23 [TRACE] vertex 'root.output.template_values (orphan)': evaluating
2017/12/28 15:39:23 [TRACE] [walkApply] Entering eval tree: output.template_values (orphan)
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalOpFilter
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalDeleteOutput
2017/12/28 15:39:23 [TRACE] [walkApply] Exiting eval tree: output.template_values (orphan)
2017/12/28 15:39:23 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/12/28 15:39:23 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/12/28 15:39:23 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/12/28 15:39:23 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:39:23 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/12/28 15:39:23 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.private_cidrsubnet", replace "data.template_file.private_cidrsubnet.0"
2017/12/28 15:39:23 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 2, search "data.template_file.public_cidrsubnet", replace "data.template_file.public_cidrsubnet.0"
2017/12/28 15:39:23 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/12/28 15:39:23 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:39:23 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:39:23 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:39:23 [TRACE] Preserving existing state lineage "b1b4d3b1-f2e5-47bf-b787-d07bf8c05105"
2017/12/28 15:39:23 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-12-28T15:39:23.190-0500 [DEBUG] plugin: plugin process exited: path=C:\DDT\demos\module4\cidrtesting\.terraform\plugins\windows_amd64\terraform-provider-template_v1.0.0_x4.exe
